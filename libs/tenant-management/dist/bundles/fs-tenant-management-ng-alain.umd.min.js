!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@fs/tenant-management"),require("@abp/ng.core"),require("@angular/core"),require("@fs/ng-alain/basic"),require("@angular/router"),require("@abp/ng.tenant-management"),require("@abp/ng.theme.shared"),require("@angular/forms"),require("@ngxs/store"),require("@fs/feature-management/ng-alain")):"function"==typeof define&&define.amd?define("@fs/tenant-management/ng-alain",["exports","@fs/tenant-management","@abp/ng.core","@angular/core","@fs/ng-alain/basic","@angular/router","@abp/ng.tenant-management","@abp/ng.theme.shared","@angular/forms","@ngxs/store","@fs/feature-management/ng-alain"],e):e(((n=n||self).fs=n.fs||{},n.fs["tenant-management"]=n.fs["tenant-management"]||{},n.fs["tenant-management"]["ng-alain"]={}),n.fs["tenant-management"],n.ng_core,n.ng.core,n.basic,n.ng.router,n.ng_tenantManagement,n.ng_theme_shared,n.ng.forms,n.store,n.ngAlain)}(this,(function(n,e,t,a,r,o,i,l,m,p,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var c=function(n,e){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])})(n,e)};var u=function(n){function e(e,t,a,r){var o=n.call(this,e,t,a,r)||this;return o._confirmationService=e,o._tenantService=t,o._fb=a,o._store=r,o}return function(n,e){function t(){this.constructor=n}c(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}(e,n),e.decorators=[{type:a.Component,args:[{selector:"ng-alain-tenants",template:'<page-header [title]="\'AbpTenantManagement::Tenants\' | abpLocalization"></page-header>\r\n<nz-card [nzBordered]="false">\r\n  <button nz-button [abpPermission]="\'AbpTenantManagement.Tenants.Create\'" (click)="addTenant()" [nzType]="\'primary\'">\r\n    <i nz-icon nzType="plus"></i>\r\n    <span>{{ \'AbpTenantManagement::NewTenant\' | abpLocalization }}</span>\r\n  </button>\r\n  <div id="data-tables-table-filter" class="data-tables-filter">\r\n    <label>\r\n      <input type="search" class="form-control form-control-sm" [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n        (input.debounce)="onSearch($event.target.value)" />\r\n    </label>\r\n  </div>\r\n  <p-table *ngIf="[150, 0] as columnWidths" [value]="data$ | async" [abpTableSort]="{ key: sortKey, order: sortOrder }"\r\n    [lazy]="true" [lazyLoadOnInit]="false" [paginator]="true" [rows]="10" [totalRecords]="totalCount$ | async"\r\n    [loading]="loading" [resizableColumns]="true" [scrollable]="true" (onLazyLoad)="onPageChange($event)">\r\n    <ng-template pTemplate="colgroup">\r\n      <colgroup>\r\n        <col *ngFor="let width of columnWidths" [ngStyle]="{ \'width.px\': width || undefined }" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate="emptymessage" let-columns>\r\n      <tr abp-table-empty-message [attr.colspan]="columnWidths.length" localizationResource="AbpTenantManagement"\r\n        localizationProp="NoDataAvailableInDatatable"></tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="header" let-columns>\r\n      <tr>\r\n        <th>{{ \'AbpTenantManagement::Actions\' | abpLocalization }}</th>\r\n        <th pResizableColumn (click)="sortOrderIcon.sort(\'name\')">\r\n          {{ \'AbpTenantManagement::TenantName\' | abpLocalization }}\r\n          <abp-sort-order-icon #sortOrderIcon key="name" [(selectedKey)]="sortKey" [(order)]="sortOrder">\r\n          </abp-sort-order-icon>\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate="body" let-data>\r\n      <tr>\r\n        <td>\r\n          <a nz-dropdown [nzDropdownMenu]="opMenu">\r\n            {{ \'AbpTenantManagement::Actions\' | abpLocalization }}\r\n            <i nz-icon nzType="down"></i>\r\n          </a>\r\n          <nz-dropdown-menu #opMenu="nzDropdownMenu">\r\n            <ul nz-menu>\r\n              <li nz-menu-item [abpPermission]="\'AbpTenantManagement.Tenants.Update\'" (click)="editTenant(data.id)">\r\n                {{ \'AbpTenantManagement::Edit\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpTenantManagement.Tenants.ManageConnectionStrings\'"\r\n                (click)="onEditConnectionString(data.id)">\r\n                {{ \'AbpTenantManagement::Permission:ManageConnectionStrings\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpTenantManagement.Tenants.ManageFeatures\'"\r\n                (click)="providerKey = data.id; visibleFeatures = true">\r\n                {{ \'AbpTenantManagement::Permission:ManageFeatures\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpTenantManagement.Tenants.Delete\'"\r\n                (click)="delete(data.id, data.name)">{{ \'AbpTenantManagement::Delete\' | abpLocalization }}</li>\r\n            </ul>\r\n          </nz-dropdown-menu>\r\n        </td>\r\n        <td>{{ data.name }}</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</nz-card>\r\n\r\n<nz-modal [(nzVisible)]="isModalVisible" [nzTitle]="modalTitle" [nzContent]="modalContent" [nzFooter]="modalFooter"\r\n  (nzOnCancel)="isModalVisible=false">\r\n  <ng-template #modalTitle>\r\n    {{ selectedModalContent.title | abpLocalization }}\r\n  </ng-template>\r\n\r\n  <ng-template #modalContent>\r\n    <ng-container *ngTemplateOutlet="selectedModalContent?.template"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType="default" (click)="isModalVisible=false">\r\n      {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <button nz-button nzType="primary" (click)="save()">\r\n      {{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n      }}\r\n    </button>\r\n  </ng-template>\r\n</nz-modal>\r\n\r\n\r\n\r\n<ng-template #tenantModalTemplate>\r\n  <form [formGroup]="tenantForm" (ngSubmit)="save()">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="role-name">\r\n        {{ \'AbpTenantManagement::TenantName\' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]="14" [nzXs]="24">\r\n        <input nz-input formControlName="name" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #connectionStringModalTemplate>\r\n  <form [formGroup]="defaultConnectionStringForm" (ngSubmit)="save()">\r\n    <nz-form-item>\r\n      <nz-form-control [nzSpan]="14" [nzOffset]="6">\r\n        <label nz-checkbox formControlName="useSharedDatabase">\r\n          <span>\r\n            {{\r\n                  \'AbpTenantManagement::DisplayName:UseSharedDatabase\' | abpLocalization\r\n            }}\r\n          </span>\r\n        </label>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item *ngIf="!useSharedDatabase">\r\n      <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="defaultConnectionString">\r\n        {{ \'AbpTenantManagement::DisplayName:DefaultConnectionString\' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]="14" [nzXs]="24">\r\n        <input nz-input formControlName="defaultConnectionString" id="defaultConnectionString" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-alain-feature-management [(visible)]="visibleFeatures" providerName="T" [providerKey]="providerKey">\r\n</ng-alain-feature-management>'}]}],e.ctorParameters=function(){return[{type:l.ConfirmationService},{type:i.TenantManagementService},{type:m.FormBuilder},{type:p.Store}]},e}(i.TenantsComponent);var d=[{path:"",redirectTo:"tenants",pathMatch:"full"},{path:"tenants",component:r.LayoutDefaultComponent,canActivate:[t.AuthGuard,t.PermissionGuard],data:{requiredPolicy:"AbpTenantManagement.Tenants"},children:[{path:"",component:u}]}],g=function(){function n(){}return n.decorators=[{type:a.NgModule,args:[{imports:[o.RouterModule.forChild(d)],exports:[o.RouterModule]}]}],n}(),b=function(){function n(){}return n.decorators=[{type:a.NgModule,args:[{declarations:[u],imports:[t.CoreModule,r.NgAlainBasicModule,g,e.TenantManagementModule,s.FeatureManagementNgAlainModule]}]}],n}();n.TenantManagementNgAlainModule=b,n.ɵa=u,n.ɵb=g,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=fs-tenant-management-ng-alain.umd.min.js.map