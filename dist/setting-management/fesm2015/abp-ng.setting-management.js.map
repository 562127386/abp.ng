{"version":3,"file":"abp-ng.setting-management.js","sources":["ng://@abp/ng.setting-management/lib/actions/setting-management.actions.ts","ng://@abp/ng.setting-management/lib/states/setting-management.state.ts","ng://@abp/ng.setting-management/lib/components/setting-management.component.ts","ng://@abp/ng.setting-management/lib/setting-management-routing.module.ts","ng://@abp/ng.setting-management/lib/setting-management.module.ts","ng://@abp/ng.setting-management/lib/enums/components.ts"],"sourcesContent":["import { SettingTab } from '@abp/ng.theme.shared';\r\n\r\nexport class SetSelectedSettingTab {\r\n  static readonly type = '[SettingManagement] Set Selected Tab';\r\n  constructor(public payload: SettingTab) {}\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { SetSelectedSettingTab } from '../actions/setting-management.actions';\r\nimport { SettingManagement } from '../models/setting-management';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<SettingManagement.State>({\r\n  name: 'SettingManagementState',\r\n  defaults: { selectedTab: {} } as SettingManagement.State,\r\n})\r\n@Injectable()\r\nexport class SettingManagementState {\r\n  @Selector()\r\n  static getSelectedTab({ selectedTab }: SettingManagement.State) {\r\n    return selectedTab;\r\n  }\r\n\r\n  @Action(SetSelectedSettingTab)\r\n  settingManagementAction(\r\n    { patchState }: StateContext<SettingManagement.State>,\r\n    { payload }: SetSelectedSettingTab,\r\n  ) {\r\n    patchState({\r\n      selectedTab: payload,\r\n    });\r\n  }\r\n}\r\n","import { ConfigState } from '@abp/ng.core';\r\nimport { getSettingTabs, SettingTab } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TrackByFunction } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { SetSelectedSettingTab } from '../actions/setting-management.actions';\r\nimport { SettingManagementState } from '../states/setting-management.state';\r\n\r\n@Component({\r\n  selector: 'abp-setting-management',\r\n  templateUrl: './setting-management.component.html',\r\n})\r\nexport class SettingManagementComponent implements OnInit {\r\n  settings: SettingTab[] = [];\r\n\r\n  set selected(value: SettingTab) {\r\n    this.store.dispatch(new SetSelectedSettingTab(value));\r\n  }\r\n  get selected(): SettingTab {\r\n    const value = this.store.selectSnapshot(SettingManagementState.getSelectedTab);\r\n\r\n    if ((!value || !value.component) && this.settings.length) {\r\n      return this.settings[0];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  trackByFn: TrackByFunction<SettingTab> = (_, item) => item.name;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.settings = getSettingTabs()\r\n      .filter(setting =>\r\n        this.store.selectSnapshot(ConfigState.getGrantedPolicy(setting.requiredPolicy)),\r\n      )\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    if (!this.selected && this.settings.length) {\r\n      this.selected = this.settings[0];\r\n    }\r\n  }\r\n}\r\n","import {\r\n  DynamicLayoutComponent,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SettingManagementComponent } from './components/setting-management.component';\r\nimport { eSettingManagementComponents } from './enums/components';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpAccount.SettingManagement',\r\n          replaceableComponent: {\r\n            key: eSettingManagementComponents.SettingManagement,\r\n            defaultComponent: SettingManagementComponent,\r\n          } as ReplaceableComponents.RouteData,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingManagementRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { SettingManagementRoutingModule } from './setting-management-routing.module';\r\nimport { SettingManagementComponent } from './components/setting-management.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { SettingManagementState } from './states/setting-management.state';\r\n\r\n@NgModule({\r\n  declarations: [SettingManagementComponent],\r\n  imports: [\r\n    SettingManagementRoutingModule,\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgxsModule.forFeature([SettingManagementState]),\r\n  ],\r\n})\r\nexport class SettingManagementModule {}\r\n","export const enum eSettingManagementComponents {\r\n  SettingManagement = 'SettingManagement.SettingManagementComponent',\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}