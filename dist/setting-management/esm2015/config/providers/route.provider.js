import { RoutesService, SettingTabsService } from '@abp/ng.core';
import { APP_INITIALIZER } from '@angular/core';
import { debounceTime, map } from 'rxjs/operators';
export const SETTING_MANAGEMENT_ROUTE_PROVIDERS = [
    { provide: APP_INITIALIZER, useFactory: configureRoutes, deps: [RoutesService], multi: true },
    {
        provide: APP_INITIALIZER,
        useFactory: hideRoutes,
        deps: [RoutesService, SettingTabsService],
        multi: true,
    },
];
export function configureRoutes(routes) {
    return () => {
        routes.add([
            {
                name: "AbpSettingManagement::Settings" /* Settings */,
                path: '/setting-management',
                parentName: "AbpUiNavigation::Menu:Administration" /* Administration */,
                layout: "application" /* application */,
                order: 100,
                iconClass: 'fa fa-cog',
            },
        ]);
    };
}
export function hideRoutes(routes, tabs) {
    return () => {
        tabs.visible$
            .pipe(debounceTime(0), map(nodes => !nodes.length))
            .subscribe(invisible => routes.patch("AbpSettingManagement::Settings" /* Settings */, { invisible }));
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUucHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9zZXR0aW5nLW1hbmFnZW1lbnQvY29uZmlnL3NyYy9wcm92aWRlcnMvcm91dGUucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFlLGFBQWEsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUU5RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxZQUFZLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHbkQsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUc7SUFDaEQsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtJQUM3RjtRQUNFLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLElBQUksRUFBRSxDQUFDLGFBQWEsRUFBRSxrQkFBa0IsQ0FBQztRQUN6QyxLQUFLLEVBQUUsSUFBSTtLQUNaO0NBQ0YsQ0FBQztBQUVGLE1BQU0sVUFBVSxlQUFlLENBQUMsTUFBcUI7SUFDbkQsT0FBTyxHQUFHLEVBQUU7UUFDVixNQUFNLENBQUMsR0FBRyxDQUFDO1lBQ1Q7Z0JBQ0UsSUFBSSxpREFBdUM7Z0JBQzNDLElBQUksRUFBRSxxQkFBcUI7Z0JBQzNCLFVBQVUsNkRBQXVDO2dCQUNqRCxNQUFNLGlDQUF5QjtnQkFDL0IsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsU0FBUyxFQUFFLFdBQVc7YUFDdkI7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxNQUFxQixFQUFFLElBQXdCO0lBQ3hFLE9BQU8sR0FBRyxFQUFFO1FBQ1YsSUFBSSxDQUFDLFFBQVE7YUFDVixJQUFJLENBQ0gsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUNmLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUM1QjthQUNBLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLGtEQUF3QyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRyxDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZUxheW91dFR5cGUsIFJvdXRlc1NlcnZpY2UsIFNldHRpbmdUYWJzU2VydmljZSB9IGZyb20gJ0BhYnAvbmcuY29yZSc7XHJcbmltcG9ydCB7IGVUaGVtZVNoYXJlZFJvdXRlTmFtZXMgfSBmcm9tICdAYWJwL25nLnRoZW1lLnNoYXJlZCc7XHJcbmltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgZVNldHRpbmdNYW5hZ2VtZW50Um91dGVOYW1lcyB9IGZyb20gJy4uL2VudW1zL3JvdXRlLW5hbWVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRUSU5HX01BTkFHRU1FTlRfUk9VVEVfUFJPVklERVJTID0gW1xyXG4gIHsgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLCB1c2VGYWN0b3J5OiBjb25maWd1cmVSb3V0ZXMsIGRlcHM6IFtSb3V0ZXNTZXJ2aWNlXSwgbXVsdGk6IHRydWUgfSxcclxuICB7XHJcbiAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXHJcbiAgICB1c2VGYWN0b3J5OiBoaWRlUm91dGVzLFxyXG4gICAgZGVwczogW1JvdXRlc1NlcnZpY2UsIFNldHRpbmdUYWJzU2VydmljZV0sXHJcbiAgICBtdWx0aTogdHJ1ZSxcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZVJvdXRlcyhyb3V0ZXM6IFJvdXRlc1NlcnZpY2UpIHtcclxuICByZXR1cm4gKCkgPT4ge1xyXG4gICAgcm91dGVzLmFkZChbXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBlU2V0dGluZ01hbmFnZW1lbnRSb3V0ZU5hbWVzLlNldHRpbmdzLFxyXG4gICAgICAgIHBhdGg6ICcvc2V0dGluZy1tYW5hZ2VtZW50JyxcclxuICAgICAgICBwYXJlbnROYW1lOiBlVGhlbWVTaGFyZWRSb3V0ZU5hbWVzLkFkbWluaXN0cmF0aW9uLFxyXG4gICAgICAgIGxheW91dDogZUxheW91dFR5cGUuYXBwbGljYXRpb24sXHJcbiAgICAgICAgb3JkZXI6IDEwMCxcclxuICAgICAgICBpY29uQ2xhc3M6ICdmYSBmYS1jb2cnLFxyXG4gICAgICB9LFxyXG4gICAgXSk7XHJcbiAgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVSb3V0ZXMocm91dGVzOiBSb3V0ZXNTZXJ2aWNlLCB0YWJzOiBTZXR0aW5nVGFic1NlcnZpY2UpIHtcclxuICByZXR1cm4gKCkgPT4ge1xyXG4gICAgdGFicy52aXNpYmxlJFxyXG4gICAgICAucGlwZShcclxuICAgICAgICBkZWJvdW5jZVRpbWUoMCksXHJcbiAgICAgICAgbWFwKG5vZGVzID0+ICFub2Rlcy5sZW5ndGgpLFxyXG4gICAgICApXHJcbiAgICAgIC5zdWJzY3JpYmUoaW52aXNpYmxlID0+IHJvdXRlcy5wYXRjaChlU2V0dGluZ01hbmFnZW1lbnRSb3V0ZU5hbWVzLlNldHRpbmdzLCB7IGludmlzaWJsZSB9KSk7XHJcbiAgfTtcclxufVxyXG4iXX0=