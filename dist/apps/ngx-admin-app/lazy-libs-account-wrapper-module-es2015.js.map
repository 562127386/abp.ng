{"version":3,"sources":["C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/account-ngx-admin-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/account-ngx-admin.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/login/login.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/register/register.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/tenant-box/tenant-box.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/src/lib/account.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/login/login.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/register/register.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ngx-admin/src/lib/components/tenant-box/tenant-box.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/auth-wrapper/auth-wrapper.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/change-password/change-password.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/login/login.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/manage-profile/manage-profile.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/personal-settings/personal-settings.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/register/register.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/tenant-box/tenant-box.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/account-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/account.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/auth-wrapper/auth-wrapper.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/change-password/change-password.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/login/login.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/manage-profile/manage-profile.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/personal-settings/personal-settings.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/register/register.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/tenant-box/tenant-box.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/constants/routes.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/services/account.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/services/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/tokens/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/tokens/options.token.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/public-api.ts","./src/app/lazy-libs/account-wrapper.module.ts"],"names":[],"mappings":"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","file":"lazy-libs-account-wrapper-module-es2015.js","sourcesContent":["export * from './lib/account-ngx-admin.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DynamicLayoutComponent, ABP, eLayoutType } from '@abp/ng.core';\r\nimport { LayoutPassportComponent } from '@fs/ng-alain/basic';\r\nimport { NbAuthComponent, NbLoginComponent, NbRegisterComponent } from '@nebular/auth';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AccountLayoutComponent } from '@fs/ngx-admin/basic';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [{ path: 'login', component: LoginComponent }, { path: 'register', component: RegisterComponent }]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountNgxAdminRoutingModule { }\r\n","import { AccountModule } from '@fs/account';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxAdminBasicModule } from '@fs/ngx-admin/basic';\r\nimport { AccountNgxAdminRoutingModule } from './account-ngx-admin-routing.module';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent, TenantBoxComponent],\r\n  imports: [\r\n    CoreModule,\r\n    NgxAdminBasicModule,\r\n    AccountNgxAdminRoutingModule,\r\n    AccountModule\r\n  ]\r\n})\r\nexport class AccountNgxAdminModule { }\r\n","import { LoginComponent as AbpLoginComponent, Options } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Inject, Optional } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { NbLoginComponent } from '@nebular/auth';\r\n\r\n@Component({\r\n    selector: 'ngx-admin-login',\r\n    templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent extends AbpLoginComponent  {\r\n\r\n    constructor(\r\n        _fb: FormBuilder,\r\n        _oauthService: OAuthService,\r\n        _store: Store,\r\n        _toasterService: ToasterService,\r\n        @Optional() @Inject('ACCOUNT_OPTIONS') _options: Options,\r\n    ) {\r\n        super(_fb, _oauthService, _store, _toasterService, _options);\r\n    }\r\n\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { RegisterComponent as AbpRegisterComponent } from '@abp/ng.account';\r\nimport { AccountService } from '@abp/ng.account';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\n\r\n@Component({\r\n  selector: 'ngx-admin-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: [],\r\n})\r\nexport class RegisterComponent extends AbpRegisterComponent {\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private _accountService: AccountService,\r\n    private _oauthService: OAuthService,\r\n    private _store: Store,\r\n    private _toasterService: ToasterService,\r\n  ) {\r\n    super(_fb, _accountService, _oauthService, _store, _toasterService)\r\n  }\r\n}\r\n","import { TenantBoxComponent as AbpTenantBoxComponent } from '@abp/ng.account';\r\nimport { AccountService } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'ngx-admin-tenant-box',\r\n  templateUrl: './tenant-box.component.html'\r\n})\r\nexport class TenantBoxComponent extends AbpTenantBoxComponent implements OnInit {\r\n  constructor(\r\n    private _store: Store,\r\n    private _toasterService: ToasterService,\r\n    private _accountService: AccountService\r\n  ) {\r\n    super(_store, _toasterService, _accountService);\r\n  }\r\n\r\n}\r\n","export * from './lib/account.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { AccountModule as AbpAccountModule } from '@abp/ng.account';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n    imports: [AbpAccountModule],\r\n    exports: [AbpAccountModule, NgxValidateCoreModule]\r\n})\r\nexport class AccountModule {}\r\n","export default \"<ngx-admin-tenant-box></ngx-admin-tenant-box>\\r\\n\\r\\n<nb-card class=\\\"mt-3 shadow-sm rounded bg-light\\\">\\r\\n  <nb-card-body class=\\\"p-5\\\">\\r\\n    <h1 id=\\\"title\\\" class=\\\"title\\\">{{ 'AbpAccount::Login' | abpLocalization }}</h1>\\r\\n\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" novalidate aria-labelledby=\\\"title\\\">\\r\\n\\r\\n      <div class=\\\"form-control-group\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"login-input-user-name-or-email-address\\\">\\r\\n          {{\\r\\n          'AbpAccount::UserNameOrEmailAddress' | abpLocalization\\r\\n          }}\\r\\n        </label>\\r\\n        <input nbInput\\r\\n               fullWidth\\r\\n               id=\\\"login-input-user-name-or-email-address\\\"\\r\\n               fieldSize=\\\"large\\\"\\r\\n               placeholder=\\\"username\\\"\\r\\n               formControlName=\\\"username\\\"\\r\\n               autofocus>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-control-group\\\">\\r\\n        <span class=\\\"label-with-link\\\">\\r\\n          <label class=\\\"label\\\" for=\\\"login-input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label>\\r\\n        </span>\\r\\n        <input nbInput\\r\\n               fullWidth\\r\\n               formControlName=\\\"password\\\"\\r\\n               type=\\\"password\\\"\\r\\n               id=\\\"login-input-password\\\"\\r\\n               placeholder=\\\"Password\\\"\\r\\n               fieldSize=\\\"large\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-control-group accept-group\\\">\\r\\n        <nb-checkbox formControlName=\\\"remember\\\">{{ 'AbpAccount::RememberMe' | abpLocalization }}</nb-checkbox>\\r\\n      </div>\\r\\n\\r\\n      <button nbButton\\r\\n              fullWidth\\r\\n              status=\\\"primary\\\"\\r\\n              size=\\\"large\\\"\\r\\n              [disabled]=\\\"!form.valid\\\">\\r\\n        {{ 'AbpAccount::Login' | abpLocalization }}\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <!-- <section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\r\\n      or enter with:\\r\\n      <div class=\\\"socials\\\">\\r\\n        <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\r\\n          <a *ngIf=\\\"socialLink.link\\\"\\r\\n             [routerLink]=\\\"socialLink.link\\\"\\r\\n             [attr.target]=\\\"socialLink.target\\\"\\r\\n             [attr.class]=\\\"socialLink.icon\\\"\\r\\n             [class.with-icon]=\\\"socialLink.icon\\\">\\r\\n            <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\r\\n            <ng-template #title>{{ socialLink.title }}</ng-template>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"socialLink.url\\\"\\r\\n             [attr.href]=\\\"socialLink.url\\\"\\r\\n             [attr.target]=\\\"socialLink.target\\\"\\r\\n             [attr.class]=\\\"socialLink.icon\\\"\\r\\n             [class.with-icon]=\\\"socialLink.icon\\\">\\r\\n            <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\r\\n            <ng-template #title>{{ socialLink.title }}</ng-template>\\r\\n          </a>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </section> -->\\r\\n\\r\\n    <section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\r\\n      {{ 'AbpAccount::AreYouANewUser' | abpLocalization }} <a class=\\\"text-link\\\" routerLink=\\\"/account/register\\\">{{ 'AbpAccount::Register' | abpLocalization }}</a>\\r\\n    </section>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","export default \"<ngx-admin-tenant-box></ngx-admin-tenant-box>\\r\\n<nb-card class=\\\"mt-3 shadow-sm rounded bg-light\\\">\\r\\n  <nb-card-body class=\\\"p-5\\\">\\r\\n    <h1 id=\\\"title\\\" class=\\\"title\\\">{{ 'AbpAccount::Register' | abpLocalization }}</h1>\\r\\n\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" novalidate aria-labelledby=\\\"title\\\">\\r\\n\\r\\n      <div class=\\\"form-control-group\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"input-user-name\\\">\\r\\n          {{\\r\\n          'AbpAccount::UserName' | abpLocalization\\r\\n          }}\\r\\n        </label>\\r\\n        <input nbInput\\r\\n               formControlName=\\\"username\\\"\\r\\n               id=\\\"input-user-name\\\"\\r\\n               placeholder=\\\"username\\\"\\r\\n               autofocus\\r\\n               fullWidth\\r\\n               fieldSize=\\\"large\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-control-group\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"input-email-address\\\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label>\\r\\n        <input nbInput\\r\\n               type=\\\"email\\\"\\r\\n               formControlName=\\\"email\\\"\\r\\n               id=\\\"input-email-address\\\"\\r\\n               placeholder=\\\"Email address\\\"\\r\\n               fullWidth\\r\\n               fieldSize=\\\"large\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-control-group\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}<</label>\\r\\n        <input nbInput\\r\\n               formControlName=\\\"password\\\"\\r\\n               type=\\\"password\\\"\\r\\n               id=\\\"input-password\\\"\\r\\n               name=\\\"password\\\"\\r\\n               placeholder=\\\"Password\\\"\\r\\n               fullWidth\\r\\n               fieldSize=\\\"large\\\">\\r\\n      </div>\\r\\n\\r\\n      <button nbButton\\r\\n              fullWidth\\r\\n              status=\\\"primary\\\"\\r\\n              size=\\\"large\\\"\\r\\n              [disabled]=\\\"!form.valid\\\">\\r\\n        {{ 'AbpAccount::Register' | abpLocalization }}\\r\\n      </button>\\r\\n    </form>\\r\\n\\r\\n    <section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\r\\n      {{ 'AbpAccount::AlreadyRegistered' | abpLocalization }} <a class=\\\"text-link\\\" routerLink=\\\"/account/login\\\">{{ 'AbpAccount::Login' | abpLocalization }}</a>\\r\\n    </section>\\r\\n\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n\"","export default \"<nb-card class=\\\"shadow-sm rounded mb-3 bg-light\\\">\\r\\n  <nb-card-body class=\\\"px-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <span style=\\\"font-size: 0.8em;\\\" class=\\\"text-uppercase text-muted\\\">{{\\r\\n          'AbpUiMultiTenancy::Tenant' | abpLocalization\\r\\n        }}</span\\r\\n        ><br />\\r\\n        <h6 class=\\\"m-0 d-inline-block\\\">\\r\\n          <span>\\r\\n            {{ tenantName || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}\\r\\n          </span>\\r\\n        </h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-auto\\\">\\r\\n        <a\\r\\n          id=\\\"AbpTenantSwitchLink\\\"\\r\\n          href=\\\"javascript:void(0);\\\"\\r\\n          class=\\\"btn btn-sm mt-3 btn-outline-primary\\\"\\r\\n          (click)=\\\"onSwitch()\\\"\\r\\n          >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n<abp-modal [(visible)]=\\\"isModalVisible\\\" size=\\\"md\\\">\\r\\n  <ng-template #abpHeader>\\r\\n    <h5>Switch Tenant</h5>\\r\\n  </ng-template>\\r\\n  <ng-template #abpBody>\\r\\n    <form (ngSubmit)=\\\"save()\\\">\\r\\n      <div class=\\\"mt-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\\r\\n          <input [(ngModel)]=\\\"tenant.name\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"tenant\\\" class=\\\"form-control\\\" autofocus />\\r\\n        </div>\\r\\n        <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <ng-template #abpFooter>\\r\\n    <button #abpClose type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n      {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">\\r\\n      <i class=\\\"fa fa-check mr-1\\\"></i> <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\\r\\n    </button>\\r\\n  </ng-template>\\r\\n</abp-modal>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"mx-auto col col-md-5\\\">\\r\\n    <abp-tenant-box></abp-tenant-box>\\r\\n\\r\\n    <div class=\\\"abp-account-container\\\">\\r\\n      <div class=\\\"card mt-3 shadow-sm rounded\\\">\\r\\n        <div class=\\\"card-body p-5\\\">\\r\\n          <ng-content *ngTemplateOutlet=\\\"mainContentRef\\\"></ng-content>\\r\\n        </div>\\r\\n        <ng-content *ngTemplateOutlet=\\\"cancelContentRef\\\"></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" [mapErrorsFn]=\\\"mapErrorsFn\\\" validateOnSubmit>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"current-password\\\">{{ 'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization }}</label\\r\\n    ><span> * </span\\r\\n    ><input type=\\\"password\\\" id=\\\"current-password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" autofocus />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"new-password\\\">{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}</label\\r\\n    ><span> * </span><input type=\\\"password\\\" id=\\\"new-password\\\" class=\\\"form-control\\\" formControlName=\\\"newPassword\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirm-new-password\\\">{{ 'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization }}</label\\r\\n    ><span> * </span\\r\\n    ><input type=\\\"password\\\" id=\\\"confirm-new-password\\\" class=\\\"form-control\\\" formControlName=\\\"repeatNewPassword\\\" />\\r\\n  </div>\\r\\n  <abp-button\\r\\n    iconClass=\\\"fa fa-check\\\"\\r\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\r\\n    buttonType=\\\"submit\\\"\\r\\n    [loading]=\\\"inProgress\\\"\\r\\n    [disabled]=\\\"form?.invalid\\\"\\r\\n    >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\r\\n  >\\r\\n</form>\\r\\n\"","export default \"<abp-auth-wrapper [mainContentRef]=\\\"mainContentRef\\\" [cancelContentRef]=\\\"cancelContentRef\\\">\\r\\n  <ng-template #mainContentRef>\\r\\n    <h4>{{ 'AbpAccount::Login' | abpLocalization }}</h4>\\r\\n    <strong>\\r\\n      {{ 'AbpAccount::AreYouANewUser' | abpLocalization }}\\r\\n      <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/register\\\">{{ 'AbpAccount::Register' | abpLocalization }}</a>\\r\\n    </strong>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" validateOnSubmit class=\\\"mt-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"login-input-user-name-or-email-address\\\">{{\\r\\n          'AbpAccount::UserNameOrEmailAddress' | abpLocalization\\r\\n        }}</label>\\r\\n        <input\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"login-input-user-name-or-email-address\\\"\\r\\n          formControlName=\\\"username\\\"\\r\\n          autofocus\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"login-input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label>\\r\\n        <input class=\\\"form-control\\\" type=\\\"password\\\" id=\\\"login-input-password\\\" formControlName=\\\"password\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-check\\\" validationTarget validationStyle>\\r\\n        <label class=\\\"form-check-label\\\" for=\\\"login-input-remember-me\\\">\\r\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"login-input-remember-me\\\" formControlName=\\\"remember\\\" />\\r\\n          {{ 'AbpAccount::RememberMe' | abpLocalization }}\\r\\n        </label>\\r\\n      </div>\\r\\n      <abp-button\\r\\n        [loading]=\\\"inProgress\\\"\\r\\n        buttonType=\\\"submit\\\"\\r\\n        name=\\\"Action\\\"\\r\\n        buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\r\\n      >\\r\\n        {{ 'AbpAccount::Login' | abpLocalization }}\\r\\n      </abp-button>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <ng-template #cancelContentRef>\\r\\n    <div class=\\\"card-footer text-center border-0\\\">\\r\\n      <a routerLink=\\\"/\\\">\\r\\n        <button type=\\\"button\\\" name=\\\"Action\\\" value=\\\"Cancel\\\" class=\\\"px-2 py-0 btn btn-link\\\">\\r\\n          {{ 'AbpAccount::Cancel' | abpLocalization }}\\r\\n        </button>\\r\\n      </a>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</abp-auth-wrapper>\\r\\n\"","export default \"<div id=\\\"AbpContentToolbar\\\"></div>\\r\\n\\r\\n<div class=\\\"card border-0 shadow-sm\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <ul class=\\\"nav flex-column nav-pills\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n          <li class=\\\"nav-item\\\" (click)=\\\"selectedTab = 0\\\">\\r\\n            <a class=\\\"nav-link\\\" [ngClass]=\\\"{ active: selectedTab === 0 }\\\" role=\\\"tab\\\" href=\\\"javascript:void(0)\\\">{{\\r\\n              'AbpUi::ChangePassword' | abpLocalization\\r\\n            }}</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" (click)=\\\"selectedTab = 1\\\">\\r\\n            <a class=\\\"nav-link\\\" [ngClass]=\\\"{ active: selectedTab === 1 }\\\" role=\\\"tab\\\" href=\\\"javascript:void(0)\\\">{{\\r\\n              'AbpAccount::PersonalSettings' | abpLocalization\\r\\n            }}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 0\\\" [@fadeIn]>\\r\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\r\\n            <h4>\\r\\n              {{ 'AbpIdentity::ChangePassword' | abpLocalization }}\\r\\n              <hr />\\r\\n            </h4>\\r\\n            <abp-change-password-form></abp-change-password-form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 1\\\" [@fadeIn]>\\r\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\r\\n            <h4>\\r\\n              {{ 'AbpIdentity::PersonalSettings' | abpLocalization }}\\r\\n              <hr />\\r\\n            </h4>\\r\\n            <abp-personal-settings-form></abp-personal-settings-form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form validateOnSubmit *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">{{ 'AbpIdentity::DisplayName:UserName' | abpLocalization }}</label\\r\\n    ><span> * </span\\r\\n    ><input\\r\\n      type=\\\"text\\\"\\r\\n      id=\\\"username\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"userName\\\"\\r\\n      autofocus\\r\\n      (keydown.space)=\\\"$event.preventDefault()\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</label\\r\\n        ><input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"surname\\\">{{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</label\\r\\n        ><input type=\\\"text\\\" id=\\\"surname\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email-address\\\">{{ 'AbpIdentity::DisplayName:Email' | abpLocalization }}</label\\r\\n    ><span> * </span><input type=\\\"text\\\" id=\\\"email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"phone-number\\\">{{ 'AbpIdentity::DisplayName:PhoneNumber' | abpLocalization }}</label\\r\\n    ><input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n  </div>\\r\\n  <abp-button\\r\\n    buttonType=\\\"submit\\\"\\r\\n    iconClass=\\\"fa fa-check\\\"\\r\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\r\\n    [loading]=\\\"inProgress\\\"\\r\\n    [disabled]=\\\"form?.invalid || form?.pristine\\\"\\r\\n  >\\r\\n    {{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\r\\n  >\\r\\n</form>\\r\\n\"","export default \"<abp-auth-wrapper [mainContentRef]=\\\"mainContentRef\\\">\\r\\n  <ng-template #mainContentRef>\\r\\n    <h4>{{ 'AbpAccount::Register' | abpLocalization }}</h4>\\r\\n    <strong>\\r\\n      {{ 'AbpAccount::AlreadyRegistered' | abpLocalization }}\\r\\n      <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/login\\\">{{ 'AbpAccount::Login' | abpLocalization }}</a>\\r\\n    </strong>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" validateOnSubmit class=\\\"mt-4\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"input-user-name\\\">{{ 'AbpAccount::UserName' | abpLocalization }}</label\\r\\n        ><span> * </span\\r\\n        ><input autofocus type=\\\"text\\\" id=\\\"input-user-name\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"input-email-address\\\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label\\r\\n        ><span> * </span><input type=\\\"email\\\" id=\\\"input-email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label\\r\\n        ><span> * </span><input type=\\\"password\\\" id=\\\"input-password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" />\\r\\n      </div>\\r\\n      <abp-button\\r\\n        [loading]=\\\"inProgress\\\"\\r\\n        buttonType=\\\"submit\\\"\\r\\n        name=\\\"Action\\\"\\r\\n        buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\r\\n      >\\r\\n        {{ 'AbpAccount::Register' | abpLocalization }}\\r\\n      </abp-button>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</abp-auth-wrapper>\\r\\n\"","export default \"<div class=\\\"card shadow-sm rounded mb-3\\\">\\r\\n  <div class=\\\"card-body px-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <span style=\\\"font-size: 0.8em;\\\" class=\\\"text-uppercase text-muted\\\">{{\\r\\n          'AbpUiMultiTenancy::Tenant' | abpLocalization\\r\\n        }}</span\\r\\n        ><br />\\r\\n        <h6 class=\\\"m-0 d-inline-block\\\">\\r\\n          <span>\\r\\n            {{ tenantName || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}\\r\\n          </span>\\r\\n        </h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-auto\\\">\\r\\n        <a\\r\\n          id=\\\"AbpTenantSwitchLink\\\"\\r\\n          href=\\\"javascript:void(0);\\\"\\r\\n          class=\\\"btn btn-sm mt-3 btn-outline-primary\\\"\\r\\n          (click)=\\\"onSwitch()\\\"\\r\\n          >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<abp-modal size=\\\"md\\\" [(visible)]=\\\"isModalVisible\\\" [busy]=\\\"inProgress\\\">\\r\\n  <ng-template #abpHeader>\\r\\n    <h5>Switch Tenant</h5>\\r\\n  </ng-template>\\r\\n  <ng-template #abpBody>\\r\\n    <form (ngSubmit)=\\\"save()\\\">\\r\\n      <div class=\\\"mt-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\\r\\n          <input [(ngModel)]=\\\"tenant.name\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"tenant\\\" class=\\\"form-control\\\" autofocus />\\r\\n        </div>\\r\\n        <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <ng-template #abpFooter>\\r\\n    <button #abpClose type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n      {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <abp-button buttonType=\\\"button\\\" buttonClass=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">\\r\\n      <i class=\\\"fa fa-check mr-1\\\"></i> <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\\r\\n    </abp-button>\\r\\n  </ng-template>\\r\\n</abp-modal>\\r\\n\"","import { DynamicLayoutComponent } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'register', component: RegisterComponent },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ManageProfileComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { TableModule } from 'primeng/table';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS, optionsFactory } from './tokens/options.token';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [CoreModule, AccountRoutingModule, ThemeSharedModule, TableModule, NgbDropdownModule, NgxValidateCoreModule],\r\n  exports: [],\r\n})\r\nexport class AccountModule {}\r\n\r\n/**\r\n *\r\n * @deprecated since version 0.9\r\n */\r\nexport function AccountProviders(options = {} as Options): Provider[] {\r\n  return [\r\n    { provide: ACCOUNT_OPTIONS, useValue: options },\r\n    {\r\n      provide: 'ACCOUNT_OPTIONS',\r\n      useFactory: optionsFactory,\r\n      deps: [ACCOUNT_OPTIONS],\r\n    },\r\n  ];\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n})\r\nexport class AuthWrapperComponent {\r\n  @Input()\r\n  mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  cancelContentRef: TemplateRef<any>;\r\n}\r\n","import { ChangePassword, ConfigState, ABP } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { comparePasswords, Validation, PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nconst { minLength, required, maxLength } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(control.name) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\r\n\r\n  ngOnInit(): void {\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          { validators: [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)] },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          currentPassword: this.form.get('password').value,\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', 'Success', { life: 5000 });\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'), 'Error', {\r\n            life: 7000,\r\n          });\r\n        },\r\n      });\r\n  }\r\n}\r\n","export * from './change-password/change-password.component';\r\nexport * from './login/login.component';\r\nexport * from './manage-profile/manage-profile.component';\r\nexport * from './register/register.component';\r\nexport * from './personal-settings/personal-settings.component';\r\nexport * from './tenant-box/tenant-box.component';\r\n","import { GetAppConfiguration, ConfigState, SessionState } from '@abp/ng.core';\r\nimport { Component, Inject, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, throwError } from 'rxjs';\r\nimport { Options } from '../../models/options';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: Options,\r\n  ) {\r\n    this.oauthService.configure(this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig);\r\n    this.oauthService.loadDiscoveryDocument();\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(32)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    // this.oauthService.setStorage(this.form.value.remember ? localStorage : sessionStorage);\r\n\r\n    this.inProgress = true;\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    from(\r\n      this.oauthService.fetchTokenUsingPasswordFlow(\r\n        this.form.get('username').value,\r\n        this.form.get('password').value,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    )\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n        tap(() => {\r\n          const redirectUrl = snq(() => window.history.state).redirectUrl || (this.options || {}).redirectUrl || '/';\r\n          this.store.dispatch(new Navigate([redirectUrl]));\r\n        }),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n})\r\nexport class ManageProfileComponent {\r\n  selectedTab = 0;\r\n}\r\n","import { GetProfile, Profile, ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take, withLatestFrom, finalize } from 'rxjs/operators';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n})\r\nexport class PersonalSettingsComponent implements OnInit {\r\n  @Select(ProfileState.getProfile)\r\n  profile$: Observable<Profile.Response>;\r\n\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.store\r\n      .dispatch(new GetProfile())\r\n      .pipe(\r\n        withLatestFrom(this.profile$),\r\n        take(1),\r\n      )\r\n      .subscribe(([, profile]) => {\r\n        this.form = this.fb.group({\r\n          userName: [profile.userName, [required, maxLength(256)]],\r\n          email: [profile.email, [required, email, maxLength(256)]],\r\n          name: [profile.name || '', [maxLength(64)]],\r\n          surname: [profile.surname || '', [maxLength(64)]],\r\n          phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n        });\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","import { ConfigState, GetAppConfiguration, ABP, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nconst { maxLength, minLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {\r\n    this.oauthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n    this.oauthService.loadDiscoveryDocument();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: [\r\n        '',\r\n        [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)],\r\n      ],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() =>\r\n          from(\r\n            this.oauthService.fetchTokenUsingPasswordFlow(\r\n              newUser.userName,\r\n              newUser.password,\r\n              new HttpHeaders({\r\n                ...(tenant && tenant.id && { __tenant: tenant.id }),\r\n              }),\r\n            ),\r\n          ),\r\n        ),\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n        tap(() => this.store.dispatch(new Navigate(['/']))),\r\n        take(1),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, take, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent implements OnInit {\r\n  tenant = {} as ABP.BasicItem;\r\n\r\n  tenantName: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(private store: Store, private toasterService: ToasterService, private accountService: AccountService) {}\r\n\r\n  ngOnInit() {\r\n    this.tenant = this.store.selectSnapshot(SessionState.getTenant) || ({} as ABP.BasicItem);\r\n    this.tenantName = this.tenant.name || '';\r\n  }\r\n\r\n  onSwitch() {\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (this.tenant.name && !this.inProgress) {\r\n      this.inProgress = true;\r\n      this.accountService\r\n        .findTenant(this.tenant.name)\r\n        .pipe(\r\n          finalize(() => (this.inProgress = false)),\r\n          take(1),\r\n          catchError(err => {\r\n            this.toasterService.error(\r\n              snq(() => err.error.error_description, 'AbpUi::DefaultErrorMessage'),\r\n              'AbpUi::Error',\r\n            );\r\n            return throwError(err);\r\n          }),\r\n        )\r\n        .subscribe(({ success, tenantId }) => {\r\n          if (success) {\r\n            this.tenant = {\r\n              id: tenantId,\r\n              name: this.tenant.name,\r\n            };\r\n            this.tenantName = this.tenant.name;\r\n            this.isModalVisible = false;\r\n          } else {\r\n            this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\r\n              messageLocalizationParams: [this.tenant.name],\r\n            });\r\n            this.tenant = {} as ABP.BasicItem;\r\n          }\r\n          this.store.dispatch(new SetTenant(success ? this.tenant : null));\r\n        });\r\n    } else {\r\n      this.store.dispatch(new SetTenant(null));\r\n      this.tenantName = null;\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n}\r\n","import { ABP, eLayoutType } from '@abp/ng.core';\r\n\r\n/**\r\n *\r\n * @deprecated since version 0.9\r\n */\r\nexport const ACCOUNT_ROUTES = {\r\n  routes: [\r\n    {\r\n      name: 'Account',\r\n      path: 'account',\r\n      invisible: true,\r\n      layout: eLayoutType.application,\r\n      children: [{ path: 'login', name: 'Login', order: 1 }, { path: 'register', name: 'Register', order: 2 }],\r\n    },\r\n  ] as ABP.FullRoute[],\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request);\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, { skipHandleError: true });\r\n  }\r\n}\r\n","export * from './account.service';","export * from './options.token';\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport function optionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\r\n","export * from './lib/account.module';\r\nexport * from './lib/components';\r\nexport * from './lib/constants/routes';\r\nexport * from './lib/tokens';\r\nexport * from './lib/models';\r\nexport * from './lib/services';\r\n","import { NgModule } from '@angular/core';\r\nimport { AccountModule } from '@abp/ng.account';\r\nimport { AccountNgxAdminModule } from '@fs/account/ngx-admin';\r\n\r\n@NgModule({\r\n    imports: [AccountNgxAdminModule],\r\n})\r\nexport class AccountWrapperModule { }\r\n"],"sourceRoot":"webpack:///"}