{"version":3,"sources":["C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/components/setting-management.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/actions/setting-management.actions.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/components/setting-management.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/setting-management-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/setting-management.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/lib/states/setting-management.state.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/setting-management/src/public-api.ts","./src/app/lazy-libs/setting-management-wrapper.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wKAAyG,sDAAsD,skBAAskB,saAAsa,kCAAkC,uf;;;;;;;;;;;;;;;;ACErrC,MAAM,qBAAqB;IAEhC,YAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;IAAG,CAAC;;AAD1B,0BAAI,GAAG,sCAAsC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACHG;AACD;AACzB;AACL;AACO;AACiC;AACE;AAO9E,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAkBrC,YAAoB,MAAc,EAAU,KAAY;QAApC,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAO;QAjBxD,aAAQ,GAAiB,EAAE,CAAC;QAe5B,cAAS,GAAgC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;IAEL,CAAC;IAf5D,IAAI,QAAQ,CAAC,KAAiB;QAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,yFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,IAAI,QAAQ;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,uFAAsB,CAAC,cAAc,CAAC,CAAC;QAE/E,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzB;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAMD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,2EAAc,EAAE;aAC7B,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,wDAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;aAClG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;CACF;;YAX6B,sDAAM;YAAiB,iDAAK;;AAlB7C,0BAA0B;IAJtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,sRAAkD;KACnD,CAAC;2EAmB4B,sDAAM,EAAiB,iDAAK;GAlB7C,0BAA0B,CA6BtC;AA7BsC;;;;;;;;;;;;;;;;;;;;;ACbE;AACc;AACgC;AACjC;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAsB;QACjC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mGAA0B,EAAE,IAAI,EAAE,EAAE,cAAc,EAAE,8BAA8B,EAAE,EAAE;SAC9G;KACF;CACF,CAAC;AAMF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnBD;AACe;AAChB;AAC4C;AACE;AAC9C;AACkC;AAW3E,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IATnC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mGAA0B,CAAC;QAC1C,OAAO,EAAE;YACP,iGAA8B;YAC9B,uDAAU;YACV,sEAAiB;YACjB,sDAAU,CAAC,UAAU,CAAC,CAAC,uFAAsB,CAAC,CAAC;SAChD;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACjBgC;AACU;AAO9E,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC,MAAM,CAAC,cAAc,CAAC,EAAE,WAAW,EAA2B;QAC5D,OAAO,WAAW,CAAC;IACrB,CAAC;IAGD,uBAAuB,CAAC,EAAE,UAAU,EAAyC,EAAE,EAAE,OAAO,EAAyB;QAC/G,UAAU,CAAC;YACT,WAAW,EAAE,OAAO;SACrB,CAAC,CAAC;IACL,CAAC;CACF;AALC;IADC,0DAAM,CAAC,yFAAqB,CAAC;;mFAC8D,yFAAqB;;qEAIhH;AATD;IADC,4DAAQ,EAAE;;;;kDAGV;AAJU,sBAAsB;IAJlC,yDAAK,CAA0B;QAC9B,IAAI,EAAE,wBAAwB;QAC9B,QAAQ,EAAE,EAAE,WAAW,EAAE,EAAE,EAA6B;KACzD,CAAC;GACW,sBAAsB,CAYlC;AAZkC;;;;;;;;;;;;;;;;;;;;;;ACRa;AACc;;;;;;;;;;;;;;;;;;;ACDrB;AAC4B;AAKrE,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;CAAG;AAAjC,8BAA8B;IAH1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kFAAuB,CAAC;KACnC,CAAC;GACW,8BAA8B,CAAG;AAAH","file":"lazy-libs-setting-management-wrapper-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row entry-row\\\">\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <h1 class=\\\"content-header-title\\\">{{ 'AbpSettingManagement::Settings' | abpLocalization }}</h1>\\r\\n  </div>\\r\\n  <div id=\\\"breadcrumb\\\" class=\\\"col-md-auto pl-md-0\\\">\\r\\n    <abp-breadcrumb></abp-breadcrumb>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"text-lg-right pt-2\\\" id=\\\"AbpContentToolbar\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"SettingManagementWrapper\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-md-3\\\">\\r\\n          <ul class=\\\"nav flex-column nav-pills\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n            <li\\r\\n              *abpFor=\\\"let setting of settings; trackBy: trackByFn\\\"\\r\\n              (click)=\\\"selected = setting\\\"\\r\\n              class=\\\"nav-item pointer\\\"\\r\\n              [abpPermission]=\\\"setting.requiredPolicy\\\"\\r\\n            >\\r\\n              <a\\r\\n                class=\\\"nav-link\\\"\\r\\n                [id]=\\\"setting.name + '-tab'\\\"\\r\\n                role=\\\"tab\\\"\\r\\n                [class.active]=\\\"setting.name === selected.name\\\"\\r\\n                >{{ setting.name | abpLocalization }}</a\\r\\n              >\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-md-9\\\">\\r\\n          <div *ngIf=\\\"settings.length\\\" class=\\\"tab-content\\\">\\r\\n            <div class=\\\"tab-pane fade show active\\\" [id]=\\\"selected.name + '-tab'\\\" role=\\\"tabpanel\\\">\\r\\n              <ng-container *ngComponentOutlet=\\\"selected.component\\\"></ng-container>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { SettingTab } from '@abp/ng.theme.shared';\r\n\r\nexport class SetSelectedSettingTab {\r\n  static readonly type = '[SettingManagement] Set Selected Tab';\r\n  constructor(public payload: SettingTab) {}\r\n}\r\n","import { Component, TrackByFunction, OnInit } from '@angular/core';\r\nimport { SettingTab, getSettingTabs } from '@abp/ng.theme.shared';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '@abp/ng.core';\r\nimport { SettingManagementState } from '../states/setting-management.state';\r\nimport { SetSelectedSettingTab } from '../actions/setting-management.actions';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\n\r\n@Component({\r\n  selector: 'abp-setting-management',\r\n  templateUrl: './setting-management.component.html',\r\n})\r\nexport class SettingManagementComponent implements OnInit {\r\n  settings: SettingTab[] = [];\r\n\r\n  set selected(value: SettingTab) {\r\n    this.store.dispatch(new SetSelectedSettingTab(value));\r\n  }\r\n  get selected(): SettingTab {\r\n    const value = this.store.selectSnapshot(SettingManagementState.getSelectedTab);\r\n\r\n    if ((!value || !value.component) && this.settings.length) {\r\n      return this.settings[0];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  trackByFn: TrackByFunction<SettingTab> = (_, item) => item.name;\r\n\r\n  constructor(private router: Router, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.settings = getSettingTabs()\r\n      .filter(setting => this.store.selectSnapshot(ConfigState.getGrantedPolicy(setting.requiredPolicy)))\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    if (!this.selected && this.settings.length) {\r\n      this.selected = this.settings[0];\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SettingManagementComponent } from './components/setting-management.component';\r\nimport { DynamicLayoutComponent } from '@abp/ng.core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      { path: '', component: SettingManagementComponent, data: { requiredPolicy: 'AbpAccount.SettingManagement' } },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingManagementRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { SettingManagementRoutingModule } from './setting-management-routing.module';\r\nimport { SettingManagementComponent } from './components/setting-management.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { SettingManagementState } from './states/setting-management.state';\r\n\r\n@NgModule({\r\n  declarations: [SettingManagementComponent],\r\n  imports: [\r\n    SettingManagementRoutingModule,\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgxsModule.forFeature([SettingManagementState]),\r\n  ],\r\n})\r\nexport class SettingManagementModule {}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { SetSelectedSettingTab } from '../actions/setting-management.actions';\r\nimport { SettingManagement } from '../models/setting-management';\r\n\r\n@State<SettingManagement.State>({\r\n  name: 'SettingManagementState',\r\n  defaults: { selectedTab: {} } as SettingManagement.State,\r\n})\r\nexport class SettingManagementState {\r\n  @Selector()\r\n  static getSelectedTab({ selectedTab }: SettingManagement.State) {\r\n    return selectedTab;\r\n  }\r\n\r\n  @Action(SetSelectedSettingTab)\r\n  settingManagementAction({ patchState }: StateContext<SettingManagement.State>, { payload }: SetSelectedSettingTab) {\r\n    patchState({\r\n      selectedTab: payload,\r\n    });\r\n  }\r\n}\r\n","export * from './lib/setting-management.module';\r\nexport * from './lib/components/setting-management.component';\r\n","import { NgModule } from '@angular/core';\r\nimport { SettingManagementModule } from '@abp/ng.setting-management';\r\n\r\n@NgModule({\r\n  imports: [SettingManagementModule],\r\n})\r\nexport class SettingManagementWrapperModule {}\r\n"],"sourceRoot":"webpack:///"}