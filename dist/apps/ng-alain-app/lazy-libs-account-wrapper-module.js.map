{"version":3,"sources":["C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/account-ng-alain-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/account-ng-alain.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/auth-wrapper/auth-wrapper.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/change-password/change-password.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/change-password/change-password.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/login/login.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/login/login.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/manage-profile/manage-profile.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/manage-profile/manage-profile.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/personal-settings/personal-settings.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/personal-settings/personal-settings.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/register/register.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/register/register.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/tenant-box/tenant-box.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/src/lib/account.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/auth-wrapper/auth-wrapper.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/change-password/change-password.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/login/login.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/manage-profile/manage-profile.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/personal-settings/personal-settings.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/register/register.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/account/ng-alain/src/lib/components/tenant-box/tenant-box.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/auth-wrapper/auth-wrapper.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/change-password/change-password.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/login/login.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/manage-profile/manage-profile.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/personal-settings/personal-settings.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/register/register.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/tenant-box/tenant-box.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/account-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/account.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/auth-wrapper/auth-wrapper.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/change-password/change-password.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/login/login.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/manage-profile/manage-profile.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/personal-settings/personal-settings.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/register/register.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/components/tenant-box/tenant-box.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/services/account.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/services/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/tokens/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/lib/tokens/options.token.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/account/src/public-api.ts","./src/app/lazy-libs/account-wrapper.module.ts"],"names":[],"mappings":"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","file":"lazy-libs-account-wrapper-module.js","sourcesContent":["export * from './lib/account-ng-alain.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserLoginComponent } from './components/login/login.component'\r\nimport { UserRegisterComponent } from './components/register/register.component';\r\nimport { DynamicLayoutComponent, AuthGuard } from '@abp/ng.core';\r\nimport { LayoutPassportComponent,LayoutDefaultComponent } from '@fs/ng-alain/basic';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n    {\r\n        path: '',\r\n        component: LayoutDefaultComponent,\r\n        children: [\r\n            {\r\n                canActivate: [AuthGuard],\r\n                path: 'manage-profile',\r\n                component: ManageProfileComponent,\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        path: '',\r\n        component: LayoutPassportComponent,\r\n        children: [\r\n            { path: 'login', component: UserLoginComponent },\r\n            { path: 'register', component: UserRegisterComponent },\r\n        ],\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AccountNgAlainRoutingModule { }\r\n","import { AccountModule } from '@fs/account';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgAlainBasicModule } from '@fs/ng-alain/basic';\r\nimport { AccountNgAlainRoutingModule } from './account-ng-alain-routing.module';\r\nimport { UserLoginComponent } from './components/login/login.component';\r\nimport { UserRegisterComponent } from './components/register/register.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    TenantBoxComponent,\r\n    UserLoginComponent,\r\n    UserRegisterComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    NgAlainBasicModule,\r\n    AccountNgAlainRoutingModule,\r\n    AccountModule\r\n  ]\r\n})\r\nexport class AccountNgAlainModule { }\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ng-alain-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n})\r\nexport class AuthWrapperComponent {\r\n  @Input()\r\n  mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  cancelContentRef: TemplateRef<any>;\r\n}\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RkFBNEY7QUFDNUYsNkNBQTZDO0FBQzdDLHNCQUFzQjtBQUN0Qiw2RkFBNkYiLCJmaWxlIjoibGlicy9hY2NvdW50L25nLWFsYWluL3NyYy9saWIvY29tcG9uZW50cy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5sZXNzIn0= */\"","import { ChangePasswordComponent as AbpChangePasswordComponent } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n    selector: 'ng-alain-change-password-form',\r\n    templateUrl: './change-password.component.html',\r\n    styleUrls: ['./change-password.component.less']\r\n})\r\nexport class ChangePasswordComponent extends AbpChangePasswordComponent implements OnInit {\r\n\r\n    constructor(private _fb: FormBuilder, private _store: Store, private _toasterService: ToasterService) {\r\n        super(_fb, _store, _toasterService);\r\n    }\r\n\r\n}\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n:host {\\n  display: block;\\n  width: 368px;\\n  margin: 0 auto;\\n}\\n:host ::ng-deep .ant-tabs .ant-tabs-bar {\\n  margin-bottom: 24px;\\n  text-align: center;\\n  border-bottom: 0;\\n}\\n:host ::ng-deep .ant-tabs-tab {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n:host ::ng-deep .ant-input-affix-wrapper .ant-input:not(:first-child) {\\n  padding-left: 34px;\\n}\\n:host ::ng-deep .icon {\\n  margin-left: 16px;\\n  color: rgba(0, 0, 0, 0.2);\\n  font-size: 24px;\\n  vertical-align: middle;\\n  cursor: pointer;\\n  transition: color 0.3s;\\n}\\n:host ::ng-deep .icon:hover {\\n  color: #1890ff;\\n}\\n:host ::ng-deep .other {\\n  margin-top: 24px;\\n  line-height: 22px;\\n  text-align: left;\\n}\\n:host ::ng-deep .other nz-tooltip {\\n  vertical-align: middle;\\n}\\n:host ::ng-deep .other .register {\\n  float: right;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MiLCJsaWJzL2FjY291bnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL2xvZ2luL0M6L1VzZXJzL1lpbkNoYW5nL0RvY3VtZW50cy9Xb3Jrcy9HaXRIdWIvYWJwLm5nL2xpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEZBQTRGO0FBQzVGLDZDQUE2QztBQUM3QyxzQkFBc0I7QUFDdEIsNkZBQTZGO0FDRjdGO0VBQ0UsY0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FESUY7QUNQQTtFQU1NLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBRElOO0FDWkE7RUFXTSxlQUFBO0VBQ0EsaUJBQUE7QURJTjtBQ2hCQTtFQWVNLGtCQUFBO0FESU47QUNuQkE7RUFrQk0saUJBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtBRElOO0FDSE07RUFDRSxjQUFBO0FES1I7QUM5QkE7RUE2Qk0sZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FESU47QUNuQ0E7RUFpQ1Esc0JBQUE7QURLUjtBQ3RDQTtFQW9DUSxZQUFBO0FES1IiLCJmaWxlIjoibGlicy9hY2NvdW50L25nLWFsYWluL3NyYy9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHN0eWxlbGludC1kaXNhYmxlIGF0LXJ1bGUtZW1wdHktbGluZS1iZWZvcmUsYXQtcnVsZS1uYW1lLXNwYWNlLWFmdGVyLGF0LXJ1bGUtbm8tdW5rbm93biAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgbm8tZHVwbGljYXRlLXNlbGVjdG9ycyAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIGRlY2xhcmF0aW9uLWJhbmctc3BhY2UtYmVmb3JlLG5vLWR1cGxpY2F0ZS1zZWxlY3RvcnMsc3RyaW5nLW5vLW5ld2xpbmUgKi9cbjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAzNjhweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC10YWJzIC5hbnQtdGFicy1iYXIge1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1ib3R0b206IDA7XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC10YWJzLXRhYiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC1pbnB1dC1hZmZpeC13cmFwcGVyIC5hbnQtaW5wdXQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG59XG46aG9zdCA6Om5nLWRlZXAgLmljb24ge1xuICBtYXJnaW4tbGVmdDogMTZweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7XG59XG46aG9zdCA6Om5nLWRlZXAgLmljb246aG92ZXIge1xuICBjb2xvcjogIzE4OTBmZjtcbn1cbjpob3N0IDo6bmctZGVlcCAub3RoZXIge1xuICBtYXJnaW4tdG9wOiAyNHB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbjpob3N0IDo6bmctZGVlcCAub3RoZXIgbnotdG9vbHRpcCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG46aG9zdCA6Om5nLWRlZXAgLm90aGVyIC5yZWdpc3RlciB7XG4gIGZsb2F0OiByaWdodDtcbn1cbiIsIkBpbXBvcnQgJ35AZGVsb24vdGhlbWUvc3R5bGVzL2RlZmF1bHQnO1xuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDM2OHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgOjpuZy1kZWVwIHtcbiAgICAuYW50LXRhYnMgLmFudC10YWJzLWJhciB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICB9XG4gICAgLmFudC10YWJzLXRhYiB7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICB9XG4gICAgLmFudC1pbnB1dC1hZmZpeC13cmFwcGVyIC5hbnQtaW5wdXQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgcGFkZGluZy1sZWZ0OiAzNHB4O1xuICAgIH1cbiAgICAuaWNvbiB7XG4gICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcztcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogQHByaW1hcnktY29sb3I7XG4gICAgICB9XG4gICAgfVxuICAgIC5vdGhlciB7XG4gICAgICBtYXJnaW4tdG9wOiAyNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgbnotdG9vbHRpcCB7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICB9XG4gICAgICAucmVnaXN0ZXIge1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","import { LoginComponent, Options } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, Inject, Optional } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n\r\n@Component({\r\n    selector: 'ng-alain-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.less']\r\n})\r\nexport class UserLoginComponent extends LoginComponent {\r\n\r\n    constructor(\r\n        _fb: FormBuilder,\r\n        _oauthService: OAuthService,\r\n        _store: Store,\r\n        _toasterService: ToasterService,\r\n        @Optional() @Inject('ACCOUNT_OPTIONS') _options: Options,\r\n    ) {\r\n        super(_fb, _oauthService, _store, _toasterService, _options);\r\n    }\r\n\r\n}\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n:host {\\n  display: block;\\n  padding-top: 24px;\\n}\\n.main {\\n  display: flex;\\n  width: 100%;\\n  padding-top: 16px;\\n  padding-bottom: 16px;\\n  overflow: auto;\\n  background-color: #fff;\\n}\\n.menu {\\n  width: 224px;\\n  border-right: 1px solid #e8e8e8;\\n}\\n.menu ::ng-deep .ant-menu-inline {\\n  border: none;\\n}\\n.menu ::ng-deep .ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {\\n  font-weight: bold;\\n}\\n.content {\\n  flex: 1;\\n  padding-top: 8px;\\n  padding-right: 40px;\\n  padding-bottom: 8px;\\n  padding-left: 40px;\\n}\\n.content .title {\\n  margin-bottom: 12px;\\n  color: rgba(0, 0, 0, 0.85);\\n  font-weight: 500;\\n  font-size: 20px;\\n  line-height: 28px;\\n}\\n.content ::ng-deep .ant-list-split .ant-list-item:last-child {\\n  border-bottom: 1px solid #e8e8e8;\\n}\\n.content ::ng-deep .ant-list-item {\\n  padding-top: 14px;\\n  padding-bottom: 14px;\\n}\\n@media screen and (max-width: 767px) {\\n  .main {\\n    flex-direction: column;\\n  }\\n  .main .menu {\\n    width: 100%;\\n    border: none;\\n  }\\n  .main .content {\\n    padding: 40px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvbWFuYWdlLXByb2ZpbGUvbWFuYWdlLXByb2ZpbGUuY29tcG9uZW50Lmxlc3MiLCJsaWJzL2FjY291bnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL21hbmFnZS1wcm9maWxlL0M6L1VzZXJzL1lpbkNoYW5nL0RvY3VtZW50cy9Xb3Jrcy9HaXRIdWIvYWJwLm5nL2xpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvbWFuYWdlLXByb2ZpbGUvbWFuYWdlLXByb2ZpbGUuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEZBQTRGO0FBQzVGLDZDQUE2QztBQUM3QyxzQkFBc0I7QUFDdEIsNkZBQTZGO0FDRDdGO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FER0Y7QUNBQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGNBQUE7RUFDQSxzQkFBQTtBREVGO0FDQ0E7RUFDRSxZQUFBO0VBQ0EsK0JBQUE7QURDRjtBQ0hBO0VBS00sWUFBQTtBRENOO0FDTkE7RUFRTSxpQkFBQTtBRENOO0FDSUE7RUFDRSxPQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QURGRjtBQ0hBO0VBT0ksbUJBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FEREo7QUNWQTtFQWVNLGdDQUFBO0FERk47QUNiQTtFQWtCTSxpQkFBQTtFQUNBLG9CQUFBO0FERk47QUNPQTtFQUNFO0lBQ0Usc0JBQUE7RURMRjtFQ0lBO0lBR0ksV0FBQTtJQUNBLFlBQUE7RURKSjtFQ0FBO0lBT0ksYUFBQTtFREpKO0FBQ0YiLCJmaWxlIjoibGlicy9hY2NvdW50L25nLWFsYWluL3NyYy9saWIvY29tcG9uZW50cy9tYW5hZ2UtcHJvZmlsZS9tYW5hZ2UtcHJvZmlsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHN0eWxlbGludC1kaXNhYmxlIGF0LXJ1bGUtZW1wdHktbGluZS1iZWZvcmUsYXQtcnVsZS1uYW1lLXNwYWNlLWFmdGVyLGF0LXJ1bGUtbm8tdW5rbm93biAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgbm8tZHVwbGljYXRlLXNlbGVjdG9ycyAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIGRlY2xhcmF0aW9uLWJhbmctc3BhY2UtYmVmb3JlLG5vLWR1cGxpY2F0ZS1zZWxlY3RvcnMsc3RyaW5nLW5vLW5ld2xpbmUgKi9cbjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xufVxuLm1haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDE2cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5tZW51IHtcbiAgd2lkdGg6IDIyNHB4O1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZThlOGU4O1xufVxuLm1lbnUgOjpuZy1kZWVwIC5hbnQtbWVudS1pbmxpbmUge1xuICBib3JkZXI6IG5vbmU7XG59XG4ubWVudSA6Om5nLWRlZXAgLmFudC1tZW51Om5vdCguYW50LW1lbnUtaG9yaXpvbnRhbCkgLmFudC1tZW51LWl0ZW0tc2VsZWN0ZWQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5jb250ZW50IHtcbiAgZmxleDogMTtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xufVxuLmNvbnRlbnQgLnRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44NSk7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG59XG4uY29udGVudCA6Om5nLWRlZXAgLmFudC1saXN0LXNwbGl0IC5hbnQtbGlzdC1pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U4ZThlODtcbn1cbi5jb250ZW50IDo6bmctZGVlcCAuYW50LWxpc3QtaXRlbSB7XG4gIHBhZGRpbmctdG9wOiAxNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTRweDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5tYWluIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5tYWluIC5tZW51IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbiAgLm1haW4gLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJ35AZGVsb24vdGhlbWUvc3R5bGVzL2RlZmF1bHQnO1xuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbn1cblxuLm1haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDE2cHg7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogQGJvZHktYmFja2dyb3VuZDtcbn1cblxuLm1lbnUge1xuICB3aWR0aDogMjI0cHg7XG4gIGJvcmRlci1yaWdodDogQGJvcmRlci13aWR0aC1iYXNlIEBib3JkZXItc3R5bGUtYmFzZSBAYm9yZGVyLWNvbG9yLXNwbGl0O1xuICA6Om5nLWRlZXAge1xuICAgIC5hbnQtbWVudS1pbmxpbmUge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgIH1cbiAgICAuYW50LW1lbnU6bm90KC5hbnQtbWVudS1ob3Jpem9udGFsKSAuYW50LW1lbnUtaXRlbS1zZWxlY3RlZCB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gIH1cbn1cblxuLmNvbnRlbnQge1xuICBmbGV4OiAxO1xuICBwYWRkaW5nLXRvcDogOHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gIC50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgICBjb2xvcjogQGhlYWRpbmctY29sb3I7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIH1cbiAgOjpuZy1kZWVwIHtcbiAgICAuYW50LWxpc3Qtc3BsaXQgLmFudC1saXN0LWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U4ZThlODtcbiAgICB9XG4gICAgLmFudC1saXN0LWl0ZW0ge1xuICAgICAgcGFkZGluZy10b3A6IDE0cHg7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTRweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQG1vYmlsZS1tYXgpIHtcbiAgLm1haW4ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLm1lbnUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgfVxuICAgIC5jb250ZW50IHtcbiAgICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ng-alain-manage-profile',\r\n    templateUrl: './manage-profile.component.html',\r\n    styleUrls: ['./manage-profile.component.less'],\r\n    animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n})\r\nexport class ManageProfileComponent {\r\n    selectedTab = 0;\r\n}\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\nnz-form-item {\\n  margin-bottom: 0px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcGVyc29uYWwtc2V0dGluZ3MvcGVyc29uYWwtc2V0dGluZ3MuY29tcG9uZW50Lmxlc3MiLCJsaWJzL2FjY291bnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL3BlcnNvbmFsLXNldHRpbmdzL0M6L1VzZXJzL1lpbkNoYW5nL0RvY3VtZW50cy9Xb3Jrcy9HaXRIdWIvYWJwLm5nL2xpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcGVyc29uYWwtc2V0dGluZ3MvcGVyc29uYWwtc2V0dGluZ3MuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEZBQTRGO0FBQzVGLDZDQUE2QztBQUM3QyxzQkFBc0I7QUFDdEIsNkZBQTZGO0FDRDdGO0VBQ0Usa0JBQUE7QURHRiIsImZpbGUiOiJsaWJzL2FjY291bnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL3BlcnNvbmFsLXNldHRpbmdzL3BlcnNvbmFsLXNldHRpbmdzLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3R5bGVsaW50LWRpc2FibGUgYXQtcnVsZS1lbXB0eS1saW5lLWJlZm9yZSxhdC1ydWxlLW5hbWUtc3BhY2UtYWZ0ZXIsYXQtcnVsZS1uby11bmtub3duICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBuby1kdXBsaWNhdGUtc2VsZWN0b3JzICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgZGVjbGFyYXRpb24tYmFuZy1zcGFjZS1iZWZvcmUsbm8tZHVwbGljYXRlLXNlbGVjdG9ycyxzdHJpbmctbm8tbmV3bGluZSAqL1xubnotZm9ybS1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuIiwiQGltcG9ydCAnfkBkZWxvbi90aGVtZS9zdHlsZXMvZGVmYXVsdCc7XG5cbm56LWZvcm0taXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cbiJdfQ== */\"","import { PersonalSettingsComponent as AbpPersonalSettingsComponent } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\n@Component({\r\n    selector: 'ng-alain-personal-settings-form',\r\n    templateUrl: './personal-settings.component.html',\r\n    styleUrls: ['./personal-settings.component.less']\r\n})\r\nexport class PersonalSettingsComponent extends AbpPersonalSettingsComponent implements OnInit {\r\n\r\n    constructor(private _fb: FormBuilder, private _store: Store, private _toasterService: ToasterService) {\r\n        super(_fb, _store, _toasterService);\r\n    }\r\n\r\n}\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n:host {\\n  display: block;\\n  width: 368px;\\n  margin: 0 auto;\\n}\\n:host ::ng-deep h3 {\\n  margin-bottom: 20px;\\n  font-size: 16px;\\n}\\n:host ::ng-deep .submit {\\n  width: 50%;\\n}\\n:host ::ng-deep .login {\\n  float: right;\\n  line-height: 40px;\\n}\\n::ng-deep .register-password-cdk .success,\\n::ng-deep .register-password-cdk .warning,\\n::ng-deep .register-password-cdk .error {\\n  transition: color 0.3s;\\n}\\n::ng-deep .register-password-cdk .success {\\n  color: #52c41a;\\n}\\n::ng-deep .register-password-cdk .warning {\\n  color: #faad14;\\n}\\n::ng-deep .register-password-cdk .error {\\n  color: #f5222d;\\n}\\n::ng-deep .register-password-cdk .progress-pass > .progress .ant-progress-bg {\\n  background-color: #faad14;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJsaWJzL2FjY291bnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL3JlZ2lzdGVyL0M6L1VzZXJzL1lpbkNoYW5nL0RvY3VtZW50cy9Xb3Jrcy9HaXRIdWIvYWJwLm5nL2xpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEZBQTRGO0FBQzVGLDZDQUE2QztBQUM3QyxzQkFBc0I7QUFDdEIsNkZBQTZGO0FDRjdGO0VBQ0UsY0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FESUY7QUNQQTtFQU1NLG1CQUFBO0VBQ0EsZUFBQTtBRElOO0FDWEE7RUFVTSxVQUFBO0FESU47QUNkQTtFQWFNLFlBQUE7RUFDQSxpQkFBQTtBRElOO0FDQUE7OztFQUtNLHNCQUFBO0FEQU47QUNMQTtFQVFNLGNBQUE7QURBTjtBQ1JBO0VBV00sY0FBQTtBREFOO0FDWEE7RUFjTSxjQUFBO0FEQU47QUNkQTtFQWtCUSx5QkFBQTtBRERSIiwiZmlsZSI6ImxpYnMvYWNjb3VudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzdHlsZWxpbnQtZGlzYWJsZSBhdC1ydWxlLWVtcHR5LWxpbmUtYmVmb3JlLGF0LXJ1bGUtbmFtZS1zcGFjZS1hZnRlcixhdC1ydWxlLW5vLXVua25vd24gKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIG5vLWR1cGxpY2F0ZS1zZWxlY3RvcnMgKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBkZWNsYXJhdGlvbi1iYW5nLXNwYWNlLWJlZm9yZSxuby1kdXBsaWNhdGUtc2VsZWN0b3JzLHN0cmluZy1uby1uZXdsaW5lICovXG46aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMzY4cHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuOmhvc3QgOjpuZy1kZWVwIGgzIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuOmhvc3QgOjpuZy1kZWVwIC5zdWJtaXQge1xuICB3aWR0aDogNTAlO1xufVxuOmhvc3QgOjpuZy1kZWVwIC5sb2dpbiB7XG4gIGZsb2F0OiByaWdodDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG46Om5nLWRlZXAgLnJlZ2lzdGVyLXBhc3N3b3JkLWNkayAuc3VjY2Vzcyxcbjo6bmctZGVlcCAucmVnaXN0ZXItcGFzc3dvcmQtY2RrIC53YXJuaW5nLFxuOjpuZy1kZWVwIC5yZWdpc3Rlci1wYXNzd29yZC1jZGsgLmVycm9yIHtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcztcbn1cbjo6bmctZGVlcCAucmVnaXN0ZXItcGFzc3dvcmQtY2RrIC5zdWNjZXNzIHtcbiAgY29sb3I6ICM1MmM0MWE7XG59XG46Om5nLWRlZXAgLnJlZ2lzdGVyLXBhc3N3b3JkLWNkayAud2FybmluZyB7XG4gIGNvbG9yOiAjZmFhZDE0O1xufVxuOjpuZy1kZWVwIC5yZWdpc3Rlci1wYXNzd29yZC1jZGsgLmVycm9yIHtcbiAgY29sb3I6ICNmNTIyMmQ7XG59XG46Om5nLWRlZXAgLnJlZ2lzdGVyLXBhc3N3b3JkLWNkayAucHJvZ3Jlc3MtcGFzcyA+IC5wcm9ncmVzcyAuYW50LXByb2dyZXNzLWJnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhYWQxNDtcbn1cbiIsIkBpbXBvcnQgJ35AZGVsb24vdGhlbWUvc3R5bGVzL2RlZmF1bHQnO1xuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDM2OHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgOjpuZy1kZWVwIHtcbiAgICBoMyB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbiAgICAuc3VibWl0IHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuICAgIC5sb2dpbiB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBsaW5lLWhlaWdodDogQGJ0bi1oZWlnaHQtbGc7XG4gICAgfVxuICB9XG59XG46Om5nLWRlZXAge1xuICAucmVnaXN0ZXItcGFzc3dvcmQtY2RrIHtcbiAgICAuc3VjY2VzcyxcbiAgICAud2FybmluZyxcbiAgICAuZXJyb3Ige1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcztcbiAgICB9XG4gICAgLnN1Y2Nlc3Mge1xuICAgICAgY29sb3I6IEBzdWNjZXNzLWNvbG9yO1xuICAgIH1cbiAgICAud2FybmluZyB7XG4gICAgICBjb2xvcjogQHdhcm5pbmctY29sb3I7XG4gICAgfVxuICAgIC5lcnJvciB7XG4gICAgICBjb2xvcjogQGVycm9yLWNvbG9yO1xuICAgIH1cbiAgICAucHJvZ3Jlc3MtcGFzcyA+IC5wcm9ncmVzcyB7XG4gICAgICAuYW50LXByb2dyZXNzLWJnIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQHdhcm5pbmctY29sb3I7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { RegisterComponent } from '@abp/ng.account';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { AccountService } from '@abp/ng.account';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'fs-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.less'],\r\n})\r\nexport class UserRegisterComponent extends RegisterComponent {\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _accountService: AccountService,\r\n        private _oauthService: OAuthService,\r\n        private _store: Store,\r\n        private _toasterService: ToasterService,\r\n    ) {\r\n        super(_fb, _accountService, _oauthService, _store,_toasterService);\r\n  }\r\n}\r\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, Input } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { AccountService } from '@abp/ng.account';\r\nimport { TenantBoxComponent as AbpTenantBoxComponent} from '@abp/ng.account';\r\n\r\n@Component({\r\n  selector: 'ng-alain-tenant-box',\r\n  templateUrl: './tenant-box.component.html'\r\n})\r\nexport class TenantBoxComponent extends AbpTenantBoxComponent implements OnInit {\r\n  @Input()\r\n  mainContentRef: TemplateRef<any>;\r\n  constructor(\r\n    private _store: Store,\r\n    private _toasterService: ToasterService,\r\n    private _accountService: AccountService\r\n  ) {\r\n    super(_store, _toasterService, _accountService);\r\n  }\r\n\r\n\r\n}\r\n","export * from './lib/account.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { AccountModule as AbpAccountModule } from '@abp/ng.account';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n    imports: [AbpAccountModule],\r\n    exports: [AbpAccountModule, NgxValidateCoreModule]\r\n})\r\nexport class AccountModule {}\r\n","export default \"<ng-alain-tenant-box [mainContentRef]=\\\"mainContentRef\\\">\\r\\n\\r\\n</ng-alain-tenant-box>\\r\\n\\r\\n<ng-content *ngTemplateOutlet=\\\"cancelContentRef\\\"></ng-content>\\r\\n\"","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" [mapErrorsFn]=\\\"mapErrorsFn\\\">\\r\\n  <nz-form-item>\\r\\n    <!--<nz-form-label nzRequired nzFor=\\\"current-password\\\">{{ 'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization }}</nz-form-label>-->\\r\\n    <nz-form-control>\\r\\n      <input nz-input type=\\\"password\\\" formControlName=\\\"password\\\" id=\\\"current-password\\\" placeholder=\\\"{{'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization}}\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <!--<nz-form-label nzRequired nzFor=\\\"new-password\\\">{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}</nz-form-label>-->\\r\\n    <nz-form-control>\\r\\n      <input nz-input type=\\\"password\\\" formControlName=\\\"newPassword\\\" id=\\\"new-password\\\" placeholder=\\\"{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <!--<nz-form-label nzRequired nzFor=\\\"confirm-new-password\\\">{{ 'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization }}</nz-form-label>-->\\r\\n    <nz-form-control>\\r\\n      <input nz-input type=\\\"password\\\" formControlName=\\\"repeatNewPassword\\\" id=\\\"confirm-new-password\\\" placeholder=\\\"{{ 'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization }}\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <button nz-button nzType=\\\"primary\\\">\\r\\n    {{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n    }}\\r\\n  </button>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","export default \"<ng-alain-auth-wrapper [mainContentRef]=\\\"mainContentRef\\\">\\r\\n  <ng-template #mainContentRef>\\r\\n    <form nz-form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" role=\\\"form\\\">\\r\\n      <nz-tabset [nzAnimated]=\\\"false\\\" class=\\\"tabs\\\">\\r\\n        <nz-tab [nzTitle]=\\\"'AbpAccount::Login' | abpLocalization\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-control [nzErrorTip]=\\\"'Please enter mobile number!' | abpLocalization\\\">\\r\\n              <nz-input-group nzSize=\\\"large\\\" nzPrefixIcon=\\\"user\\\">\\r\\n                <input nz-input formControlName=\\\"username\\\" placeholder=\\\"{{'AbpAccount::UserNameOrEmailAddress' | abpLocalization}}\\\" />\\r\\n              </nz-input-group>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-control [nzErrorTip]=\\\"'Please enter password!' | abpLocalization\\\">\\r\\n              <nz-input-group nzSize=\\\"large\\\" nzPrefixIcon=\\\"lock\\\">\\r\\n                <input nz-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"{{ 'AbpAccount::Password' | abpLocalization }}\\\" />\\r\\n              </nz-input-group>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </nz-tab>\\r\\n      </nz-tabset>\\r\\n      <nz-form-item>\\r\\n        <nz-col [nzSpan]=\\\"12\\\">\\r\\n          <label nz-checkbox formControlName=\\\"remember\\\">{{ 'AbpAccount::RememberMe' | abpLocalization }}</label>\\r\\n        </nz-col>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <button nz-button type=\\\"submit\\\" nzType=\\\"primary\\\" nzSize=\\\"large\\\" [nzLoading]=\\\"inProgress\\\" nzBlock>\\r\\n          {{ 'AbpAccount::Login' | abpLocalization }}\\r\\n        </button>\\r\\n      </nz-form-item>\\r\\n    </form>\\r\\n    <div class=\\\"other\\\">\\r\\n      <a class=\\\"register\\\" routerLink=\\\"/account/register\\\">{{ 'AbpAccount::Register' | abpLocalization }}</a>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</ng-alain-auth-wrapper>\\r\\n\\r\\n\"","export default \"<div class=\\\"row entry-row\\\">\\r\\n  <div class=\\\"col-auto\\\"></div>\\r\\n  <div id=\\\"breadcrumb\\\" class=\\\"col-md-auto pl-md-0\\\"></div>\\r\\n  <div class=\\\"col\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"main\\\">\\r\\n  <div class=\\\"menu\\\">\\r\\n    <ul nz-menu nzMode=\\\"inline\\\">\\r\\n      <li nz-menu-item [nzSelected]=\\\"selectedTab === 0\\\" (click)=\\\"selectedTab = 0\\\">\\r\\n        {{\\r\\n            'AbpUi::ChangePassword' | abpLocalization\\r\\n        }}\\r\\n      </li>\\r\\n      <li nz-menu-item [nzSelected]=\\\"selectedTab === 1\\\" (click)=\\\"selectedTab = 1\\\">\\r\\n        {{\\r\\n            'AbpAccount::PersonalSettings' | abpLocalization\\r\\n        }}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"title\\\">{{ 'AbpAccount::ChangePassword' | abpLocalization }}</div>\\r\\n    <ng-alain-change-password-form *ngIf=\\\"selectedTab === 0\\\"></ng-alain-change-password-form>\\r\\n    <ng-alain-personal-settings-form *ngIf=\\\"selectedTab === 1\\\"></ng-alain-personal-settings-form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<form novalidate *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <nz-form-item>\\r\\n    <nz-form-label nzRequired nzFor=\\\"username\\\">{{ 'AbpIdentity::DisplayName:UserName' | abpLocalization }}</nz-form-label>\\r\\n    <nz-form-control>\\r\\n      <input nz-input formControlName=\\\"userName\\\" id=\\\"username\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <nz-form-label nzRequired nzFor=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</nz-form-label>\\r\\n    <nz-form-control>\\r\\n      <input nz-input formControlName=\\\"name\\\" id=\\\"name\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <nz-form-label nzRequired nzFor=\\\"surname\\\">{{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</nz-form-label>\\r\\n    <nz-form-control>\\r\\n      <input nz-input formControlName=\\\"surname\\\" id=\\\"surname\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <nz-form-label nzRequired nzFor=\\\"email-address\\\">{{ 'AbpIdentity::DisplayName:Email' | abpLocalization }}</nz-form-label>\\r\\n    <nz-form-control>\\r\\n      <input nz-input formControlName=\\\"email\\\" id=\\\"email-address\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <nz-form-item>\\r\\n    <nz-form-label nzRequired nzFor=\\\"phone-number\\\">{{ 'AbpIdentity::DisplayName:PhoneNumber' | abpLocalization }}</nz-form-label>\\r\\n    <nz-form-control>\\r\\n      <input nz-input formControlName=\\\"phoneNumber\\\" id=\\\"phone-number\\\" />\\r\\n    </nz-form-control>\\r\\n  </nz-form-item>\\r\\n  <button nz-button nzType=\\\"primary\\\">\\r\\n    {{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n    }}\\r\\n  </button>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","export default \"<ng-alain-auth-wrapper [mainContentRef]=\\\"mainContentRef\\\">\\r\\n  <ng-template #mainContentRef>\\r\\n    <h3>{{ 'AbpAccount::Register' | abpLocalization }}</h3>\\r\\n    <form nz-form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <nz-form-item>\\r\\n        <nz-form-control>\\r\\n          <nz-input-group nzSize=\\\"large\\\">\\r\\n            <input nz-input formControlName=\\\"username\\\" placeholder=\\\"{{ 'AbpAccount::UserName' | abpLocalization }}\\\" />\\r\\n          </nz-input-group>\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-control>\\r\\n          <nz-input-group nzSize=\\\"large\\\">\\r\\n            <input nz-input formControlName=\\\"email\\\" placeholder=\\\"{{ 'AbpAccount::EmailAddress' | abpLocalization }}\\\" />\\r\\n          </nz-input-group>\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-control>\\r\\n          <nz-input-group nzSize=\\\"large\\\">\\r\\n            <input nz-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"{{ 'AbpAccount::Password' | abpLocalization }}\\\" />\\r\\n          </nz-input-group>\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <button nz-button nzType=\\\"primary\\\" nzSize=\\\"large\\\" type=\\\"submit\\\" [nzLoading]=\\\"inProgress\\\" class=\\\"submit\\\">\\r\\n          {{ 'AbpAccount::Register' | abpLocalization }}\\r\\n        </button>\\r\\n        <a class=\\\"login\\\" routerLink=\\\"/account/login\\\">{{ 'AbpAccount::Login' | abpLocalization }}</a>\\r\\n      </nz-form-item>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</ng-alain-auth-wrapper>\\r\\n\\r\\n\"","export default \"  <nz-card nzTitle=\\\"{{'AbpUiMultiTenancy::Tenant' | abpLocalization}} ({{ tenantName || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}) \\\" [nzExtra]=\\\"extraTemplate\\\">\\r\\n    <ng-content *ngTemplateOutlet=\\\"mainContentRef\\\"></ng-content>\\r\\n  </nz-card>\\r\\n  <ng-template #extraTemplate>\\r\\n    <a id=\\\"AbpTenantSwitchLink\\\"\\r\\n       href=\\\"javascript:void(0);\\\"\\r\\n       class=\\\"btn btn-sm mt-3 btn-outline-primary\\\"\\r\\n       (click)=\\\"onSwitch()\\\">{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a>\\r\\n  </ng-template>\\r\\n\\r\\n  <nz-modal [nzStyle]=\\\"{ top: '20px' }\\\"\\r\\n            [(nzVisible)]=\\\"isModalVisible\\\"\\r\\n            [nzTitle]=\\\"modalTitle\\\"\\r\\n            [nzContent]=\\\"modalContent\\\"\\r\\n            [nzFooter]=\\\"modalFooter\\\"\\r\\n            (nzOnCancel)=\\\"isModalVisible=false\\\">\\r\\n    <ng-template #modalTitle>\\r\\n      Switch Tenan\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #modalContent>\\r\\n      <ng-template #loaderRef>\\r\\n        <div class=\\\"text-center\\\"><i class=\\\"fa fa-pulse fa-spinner\\\"></i></div>\\r\\n      </ng-template>\\r\\n\\r\\n      <form nz-form *ngIf=\\\"tenant; else loaderRef\\\"  (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n        <nz-form-item>\\r\\n          <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"name\\\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</nz-form-label>\\r\\n          <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzExtra=\\\"{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}\\\">\\r\\n            <input nz-input [(ngModel)]=\\\"tenant.name\\\" id=\\\"name\\\" name=\\\"name\\\" />\\r\\n          </nz-form-control>\\r\\n        </nz-form-item>\\r\\n      </form>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #modalFooter>\\r\\n      <button nz-button nzType=\\\"default\\\" (click)=\\\"isModalVisible=false\\\">\\r\\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\\r\\n      </button>\\r\\n      <button nz-button nzType=\\\"primary\\\" (click)=\\\"save()\\\">\\r\\n        {{\\r\\n      'AbpTenantManagement::Save' | abpLocalization\\r\\n        }}\\r\\n      </button>\\r\\n    </ng-template>\\r\\n  </nz-modal>\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"mx-auto col col-md-5\\\">\\r\\n    <abp-tenant-box\\r\\n      *abpReplaceableTemplate=\\\"{ componentKey: 'Account.TenantBoxComponent' }\\\"\\r\\n    ></abp-tenant-box>\\r\\n\\r\\n    <div class=\\\"abp-account-container\\\">\\r\\n      <div class=\\\"card mt-3 shadow-sm rounded\\\">\\r\\n        <div class=\\\"card-body p-5\\\">\\r\\n          <ng-content *ngTemplateOutlet=\\\"mainContentRef\\\"></ng-content>\\r\\n        </div>\\r\\n        <ng-content *ngTemplateOutlet=\\\"cancelContentRef\\\"></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" [mapErrorsFn]=\\\"mapErrorsFn\\\" validateOnSubmit>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"current-password\\\">{{\\r\\n      'AbpIdentity::DisplayName:CurrentPassword' | abpLocalization\\r\\n    }}</label\\r\\n    ><span> * </span\\r\\n    ><input\\r\\n      type=\\\"password\\\"\\r\\n      id=\\\"current-password\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"password\\\"\\r\\n      autofocus\\r\\n      autocomplete=\\\"current-password\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"new-password\\\">{{ 'AbpIdentity::DisplayName:NewPassword' | abpLocalization }}</label\\r\\n    ><span> * </span\\r\\n    ><input\\r\\n      type=\\\"password\\\"\\r\\n      id=\\\"new-password\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"newPassword\\\"\\r\\n      autocomplete=\\\"new-password\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirm-new-password\\\">{{\\r\\n      'AbpIdentity::DisplayName:NewPasswordConfirm' | abpLocalization\\r\\n    }}</label\\r\\n    ><span> * </span\\r\\n    ><input\\r\\n      type=\\\"password\\\"\\r\\n      id=\\\"confirm-new-password\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"repeatNewPassword\\\"\\r\\n      autocomplete=\\\"new-password\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <abp-button\\r\\n    iconClass=\\\"fa fa-check\\\"\\r\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\r\\n    buttonType=\\\"submit\\\"\\r\\n    [loading]=\\\"inProgress\\\"\\r\\n    [disabled]=\\\"form?.invalid\\\"\\r\\n    >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\r\\n  >\\r\\n</form>\\r\\n\"","export default \"<abp-auth-wrapper\\r\\n  *abpReplaceableTemplate=\\\"{\\r\\n    componentKey: 'Account.AuthWrapperComponent',\\r\\n    inputs: {\\r\\n      mainContentRef: { value: mainContentRef },\\r\\n      cancelContentRef: { value: cancelContentRef }\\r\\n    }\\r\\n  }\\\"\\r\\n  [mainContentRef]=\\\"mainContentRef\\\"\\r\\n  [cancelContentRef]=\\\"cancelContentRef\\\"\\r\\n>\\r\\n</abp-auth-wrapper>\\r\\n<ng-template #mainContentRef>\\r\\n  <h4>{{ 'AbpAccount::Login' | abpLocalization }}</h4>\\r\\n  <strong>\\r\\n    {{ 'AbpAccount::AreYouANewUser' | abpLocalization }}\\r\\n    <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/register\\\">{{\\r\\n      'AbpAccount::Register' | abpLocalization\\r\\n    }}</a>\\r\\n  </strong>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" validateOnSubmit class=\\\"mt-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"login-input-user-name-or-email-address\\\">{{\\r\\n        'AbpAccount::UserNameOrEmailAddress' | abpLocalization\\r\\n      }}</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        type=\\\"text\\\"\\r\\n        id=\\\"login-input-user-name-or-email-address\\\"\\r\\n        formControlName=\\\"username\\\"\\r\\n        autocomplete=\\\"username\\\"\\r\\n        autofocus\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"login-input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        type=\\\"password\\\"\\r\\n        id=\\\"login-input-password\\\"\\r\\n        formControlName=\\\"password\\\"\\r\\n        autocomplete=\\\"current-password\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-check\\\" validationTarget validationStyle>\\r\\n      <label class=\\\"form-check-label\\\" for=\\\"login-input-remember-me\\\">\\r\\n        <input\\r\\n          class=\\\"form-check-input\\\"\\r\\n          type=\\\"checkbox\\\"\\r\\n          id=\\\"login-input-remember-me\\\"\\r\\n          formControlName=\\\"remember\\\"\\r\\n        />\\r\\n        {{ 'AbpAccount::RememberMe' | abpLocalization }}\\r\\n      </label>\\r\\n    </div>\\r\\n    <abp-button\\r\\n      [loading]=\\\"inProgress\\\"\\r\\n      buttonType=\\\"submit\\\"\\r\\n      name=\\\"Action\\\"\\r\\n      buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\r\\n    >\\r\\n      {{ 'AbpAccount::Login' | abpLocalization }}\\r\\n    </abp-button>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<ng-template #cancelContentRef>\\r\\n  <div class=\\\"card-footer text-center border-0\\\">\\r\\n    <a routerLink=\\\"/\\\">\\r\\n      <button type=\\\"button\\\" name=\\\"Action\\\" value=\\\"Cancel\\\" class=\\\"px-2 py-0 btn btn-link\\\">\\r\\n        {{ 'AbpAccount::Cancel' | abpLocalization }}\\r\\n      </button>\\r\\n    </a>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<div id=\\\"AbpContentToolbar\\\"></div>\\r\\n\\r\\n<div class=\\\"card border-0 shadow-sm\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <ul class=\\\"nav flex-column nav-pills\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n          <li class=\\\"nav-item\\\" (click)=\\\"selectedTab = 0\\\">\\r\\n            <a\\r\\n              class=\\\"nav-link\\\"\\r\\n              [ngClass]=\\\"{ active: selectedTab === 0 }\\\"\\r\\n              role=\\\"tab\\\"\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              >{{ 'AbpUi::ChangePassword' | abpLocalization }}</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" (click)=\\\"selectedTab = 1\\\">\\r\\n            <a\\r\\n              class=\\\"nav-link\\\"\\r\\n              [ngClass]=\\\"{ active: selectedTab === 1 }\\\"\\r\\n              role=\\\"tab\\\"\\r\\n              href=\\\"javascript:void(0)\\\"\\r\\n              >{{ 'AbpAccount::PersonalSettings' | abpLocalization }}</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 0\\\" [@fadeIn]>\\r\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\r\\n            <h4>\\r\\n              {{ 'AbpIdentity::ChangePassword' | abpLocalization }}\\r\\n              <hr />\\r\\n            </h4>\\r\\n            <abp-change-password-form\\r\\n              *abpReplaceableTemplate=\\\"{ componentKey: 'Account.ChangePasswordComponent' }\\\"\\r\\n            ></abp-change-password-form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-content\\\" *ngIf=\\\"selectedTab === 1\\\" [@fadeIn]>\\r\\n          <div class=\\\"tab-pane active\\\" role=\\\"tabpanel\\\">\\r\\n            <h4>\\r\\n              {{ 'AbpIdentity::PersonalSettings' | abpLocalization }}\\r\\n              <hr />\\r\\n            </h4>\\r\\n            <abp-personal-settings-form\\r\\n              *abpReplaceableTemplate=\\\"{ componentKey: 'Account.PersonalSettingsComponent' }\\\"\\r\\n            ></abp-personal-settings-form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form validateOnSubmit *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">{{ 'AbpIdentity::DisplayName:UserName' | abpLocalization }}</label\\r\\n    ><span> * </span\\r\\n    ><input\\r\\n      type=\\\"text\\\"\\r\\n      id=\\\"username\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"userName\\\"\\r\\n      autofocus\\r\\n      (keydown.space)=\\\"$event.preventDefault()\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</label\\r\\n        ><input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-md-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"surname\\\">{{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</label\\r\\n        ><input type=\\\"text\\\" id=\\\"surname\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email-address\\\">{{ 'AbpIdentity::DisplayName:Email' | abpLocalization }}</label\\r\\n    ><span> * </span><input type=\\\"text\\\" id=\\\"email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"phone-number\\\">{{ 'AbpIdentity::DisplayName:PhoneNumber' | abpLocalization }}</label\\r\\n    ><input type=\\\"text\\\" id=\\\"phone-number\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\" />\\r\\n  </div>\\r\\n  <abp-button\\r\\n    buttonType=\\\"submit\\\"\\r\\n    iconClass=\\\"fa fa-check\\\"\\r\\n    buttonClass=\\\"btn btn-primary color-white\\\"\\r\\n    [loading]=\\\"inProgress\\\"\\r\\n    [disabled]=\\\"form?.invalid || form?.pristine\\\"\\r\\n  >\\r\\n    {{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\\r\\n  >\\r\\n</form>\\r\\n\"","export default \"<abp-auth-wrapper\\r\\n  *abpReplaceableTemplate=\\\"{\\r\\n    componentKey: 'Account.AuthWrapperComponent',\\r\\n    inputs: {\\r\\n      mainContentRef: { value: mainContentRef }\\r\\n    }\\r\\n  }\\\"\\r\\n  [mainContentRef]=\\\"mainContentRef\\\"\\r\\n>\\r\\n</abp-auth-wrapper>\\r\\n<ng-template #mainContentRef>\\r\\n  <h4>{{ 'AbpAccount::Register' | abpLocalization }}</h4>\\r\\n  <strong>\\r\\n    {{ 'AbpAccount::AlreadyRegistered' | abpLocalization }}\\r\\n    <a class=\\\"text-decoration-none\\\" routerLink=\\\"/account/login\\\">{{\\r\\n      'AbpAccount::Login' | abpLocalization\\r\\n    }}</a>\\r\\n  </strong>\\r\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" validateOnSubmit class=\\\"mt-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"input-user-name\\\">{{ 'AbpAccount::UserName' | abpLocalization }}</label\\r\\n      ><span> * </span\\r\\n      ><input\\r\\n        autofocus\\r\\n        type=\\\"text\\\"\\r\\n        id=\\\"input-user-name\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"username\\\"\\r\\n        autocomplete=\\\"username\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"input-email-address\\\">{{ 'AbpAccount::EmailAddress' | abpLocalization }}</label\\r\\n      ><span> * </span\\r\\n      ><input type=\\\"email\\\" id=\\\"input-email-address\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"input-password\\\">{{ 'AbpAccount::Password' | abpLocalization }}</label\\r\\n      ><span> * </span\\r\\n      ><input\\r\\n        type=\\\"password\\\"\\r\\n        id=\\\"input-password\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"password\\\"\\r\\n        autocomplete=\\\"current-password\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <abp-button\\r\\n      [loading]=\\\"inProgress\\\"\\r\\n      buttonType=\\\"submit\\\"\\r\\n      name=\\\"Action\\\"\\r\\n      buttonClass=\\\"btn-block btn-lg mt-3 btn btn-primary\\\"\\r\\n    >\\r\\n      {{ 'AbpAccount::Register' | abpLocalization }}\\r\\n    </abp-button>\\r\\n  </form>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"card shadow-sm rounded mb-3\\\">\\r\\n  <div class=\\\"card-body px-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <span style=\\\"font-size: 0.8em;\\\" class=\\\"text-uppercase text-muted\\\">{{\\r\\n          'AbpUiMultiTenancy::Tenant' | abpLocalization\\r\\n        }}</span\\r\\n        ><br />\\r\\n        <h6 class=\\\"m-0 d-inline-block\\\">\\r\\n          <span>\\r\\n            {{ tenantName || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}\\r\\n          </span>\\r\\n        </h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-auto\\\">\\r\\n        <a\\r\\n          id=\\\"AbpTenantSwitchLink\\\"\\r\\n          href=\\\"javascript:void(0);\\\"\\r\\n          class=\\\"btn btn-sm mt-3 btn-outline-primary\\\"\\r\\n          (click)=\\\"onSwitch()\\\"\\r\\n          >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<abp-modal size=\\\"md\\\" [(visible)]=\\\"isModalVisible\\\" [busy]=\\\"inProgress\\\">\\r\\n  <ng-template #abpHeader>\\r\\n    <h5>Switch Tenant</h5>\\r\\n  </ng-template>\\r\\n  <ng-template #abpBody>\\r\\n    <form (ngSubmit)=\\\"save()\\\">\\r\\n      <div class=\\\"mt-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\\r\\n          <input [(ngModel)]=\\\"tenant.name\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"tenant\\\" class=\\\"form-control\\\" autofocus />\\r\\n        </div>\\r\\n        <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n  <ng-template #abpFooter>\\r\\n    <button #abpClose type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n      {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <abp-button buttonType=\\\"button\\\" buttonClass=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">\\r\\n      <i class=\\\"fa fa-check mr-1\\\"></i> <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\\r\\n    </abp-button>\\r\\n  </ng-template>\\r\\n</abp-modal>\\r\\n\"","import {\r\n  DynamicLayoutComponent,\r\n  AuthGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.LoginComponent',\r\n            defaultComponent: LoginComponent,\r\n          } as ReplaceableComponents.RouteData<LoginComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.RegisterComponent',\r\n            defaultComponent: RegisterComponent,\r\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.ManageProfileComponent',\r\n            defaultComponent: ManageProfileComponent,\r\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { TableModule } from 'primeng/table';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS, optionsFactory } from './tokens/options.token';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    AccountRoutingModule,\r\n    ThemeSharedModule,\r\n    TableModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AccountModule {}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  exportAs: 'abpAuthWrapper',\r\n})\r\nexport class AuthWrapperComponent\r\n  implements Account.AuthWrapperComponentInputs, Account.AuthWrapperComponentOutputs {\r\n  @Input()\r\n  readonly mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  readonly cancelContentRef: TemplateRef<any>;\r\n}\r\n","import { ChangePassword, ConfigState, ABP } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { comparePasswords, Validation, PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { minLength, required, maxLength } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n  exportAs: 'abpChangePasswordForm',\r\n})\r\nexport class ChangePasswordComponent\r\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(control.name) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [\r\n              required,\r\n              validatePassword(passwordRulesArr),\r\n              minLength(requiredLength),\r\n              maxLength(32),\r\n            ],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          {\r\n            validators: [\r\n              required,\r\n              validatePassword(passwordRulesArr),\r\n              minLength(requiredLength),\r\n              maxLength(32),\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          currentPassword: this.form.get('password').value,\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', 'Success', {\r\n            life: 5000,\r\n          });\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            {\r\n              life: 7000,\r\n            },\r\n          );\r\n        },\r\n      });\r\n  }\r\n}\r\n","export * from './change-password/change-password.component';\r\nexport * from './login/login.component';\r\nexport * from './manage-profile/manage-profile.component';\r\nexport * from './register/register.component';\r\nexport * from './personal-settings/personal-settings.component';\r\nexport * from './tenant-box/tenant-box.component';\r\n","import { GetAppConfiguration, ConfigState, SessionState } from '@abp/ng.core';\r\nimport { Component, Inject, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, throwError } from 'rxjs';\r\nimport { Options } from '../../models/options';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: Options,\r\n  ) {\r\n    this.oauthService.configure(this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig);\r\n    this.oauthService.loadDiscoveryDocument();\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(32)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    // this.oauthService.setStorage(this.form.value.remember ? localStorage : sessionStorage);\r\n\r\n    this.inProgress = true;\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    from(\r\n      this.oauthService.fetchTokenUsingPasswordFlow(\r\n        this.form.get('username').value,\r\n        this.form.get('password').value,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    )\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n        tap(() => {\r\n          const redirectUrl = snq(() => window.history.state).redirectUrl || (this.options || {}).redirectUrl || '/';\r\n          this.store.dispatch(new Navigate([redirectUrl]));\r\n        }),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n})\r\nexport class ManageProfileComponent {\r\n  selectedTab = 0;\r\n}\r\n","import { GetProfile, Profile, ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take, withLatestFrom, finalize } from 'rxjs/operators';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n  exportAs: 'abpPersonalSettingsForm',\r\n})\r\nexport class PersonalSettingsComponent\r\n  implements\r\n    OnInit,\r\n    Account.PersonalSettingsComponentInputs,\r\n    Account.PersonalSettingsComponentOutputs {\r\n  @Select(ProfileState.getProfile)\r\n  profile$: Observable<Profile.Response>;\r\n\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.store\r\n      .dispatch(new GetProfile())\r\n      .pipe(withLatestFrom(this.profile$), take(1))\r\n      .subscribe(([, profile]) => {\r\n        this.form = this.fb.group({\r\n          userName: [profile.userName, [required, maxLength(256)]],\r\n          email: [profile.email, [required, email, maxLength(256)]],\r\n          name: [profile.name || '', [maxLength(64)]],\r\n          surname: [profile.surname || '', [maxLength(64)]],\r\n          phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n        });\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","import { ConfigState, GetAppConfiguration, ABP, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nconst { maxLength, minLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {\r\n    this.oauthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n    this.oauthService.loadDiscoveryDocument();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: [\r\n        '',\r\n        [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)],\r\n      ],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() =>\r\n          from(\r\n            this.oauthService.fetchTokenUsingPasswordFlow(\r\n              newUser.userName,\r\n              newUser.password,\r\n              new HttpHeaders({\r\n                ...(tenant && tenant.id && { __tenant: tenant.id }),\r\n              }),\r\n            ),\r\n          ),\r\n        ),\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n        tap(() => this.store.dispatch(new Navigate(['/']))),\r\n        take(1),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, take, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent\r\n  implements OnInit, Account.TenantBoxComponentInputs, Account.TenantBoxComponentOutputs {\r\n  tenant = {} as ABP.BasicItem;\r\n\r\n  tenantName: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private accountService: AccountService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tenant = this.store.selectSnapshot(SessionState.getTenant) || ({} as ABP.BasicItem);\r\n    this.tenantName = this.tenant.name || '';\r\n  }\r\n\r\n  onSwitch() {\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (this.tenant.name && !this.inProgress) {\r\n      this.inProgress = true;\r\n      this.accountService\r\n        .findTenant(this.tenant.name)\r\n        .pipe(\r\n          finalize(() => (this.inProgress = false)),\r\n          take(1),\r\n          catchError(err => {\r\n            this.toasterService.error(\r\n              snq(() => err.error.error_description, 'AbpUi::DefaultErrorMessage'),\r\n              'AbpUi::Error',\r\n            );\r\n            return throwError(err);\r\n          }),\r\n        )\r\n        .subscribe(({ success, tenantId }) => {\r\n          if (success) {\r\n            this.tenant = {\r\n              id: tenantId,\r\n              name: this.tenant.name,\r\n            };\r\n            this.tenantName = this.tenant.name;\r\n            this.isModalVisible = false;\r\n          } else {\r\n            this.toasterService.error(\r\n              'AbpUiMultiTenancy::GivenTenantIsNotAvailable',\r\n              'AbpUi::Error',\r\n              {\r\n                messageLocalizationParams: [this.tenant.name],\r\n              },\r\n            );\r\n            this.tenant = {} as ABP.BasicItem;\r\n          }\r\n          this.store.dispatch(new SetTenant(success ? this.tenant : null));\r\n        });\r\n    } else {\r\n      this.store.dispatch(new SetTenant(null));\r\n      this.tenantName = null;\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request);\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, { skipHandleError: true });\r\n  }\r\n}\r\n","export * from './account.service';\r\n","export * from './options.token';\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport function optionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\r\n","export * from './lib/account.module';\r\nexport * from './lib/components';\r\nexport * from './lib/tokens';\r\nexport * from './lib/models';\r\nexport * from './lib/services';\r\n","import { NgModule } from '@angular/core';\r\nimport { AccountNgAlainModule } from '@fs/account/ng-alain';\r\n\r\n@NgModule({\r\n    imports: [AccountNgAlainModule]\r\n})\r\nexport class AccountWrapperModule {\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}