{"version":3,"sources":["C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/components/roles/roles.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/components/users/users.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/identity-ng-alain-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/identity-ng-alain.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/src/lib/identity.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/lib/components/permission-management.component.less","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/lib/components/permission-management.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/lib/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/lib/permission-management-ng-alain.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/src/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/src/lib/permission-management.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/components/roles/roles.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/identity/ng-alain/src/lib/components/users/users.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/libs/permission-management/ng-alain/src/lib/components/permission-management.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/components/roles/roles.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/components/users/users.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/components/permission-management.component.html","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/actions/identity.actions.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/components/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/components/roles/roles.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/components/users/users.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/identity-routing.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/identity.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/services/identity-state.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/services/identity.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/services/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/lib/states/identity.state.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/identity/src/public-api.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/actions/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/actions/permission-management.actions.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/components/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/components/permission-management.component.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/permission-management.module.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/services/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/services/permission-management-state.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/services/permission-management.service.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/states/index.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/lib/states/permission-management.state.ts","C:/Users/YinChang/Documents/Works/GitHub/abp.ng/packages/permission-management/src/public-api.ts","./src/app/lazy-libs/identity-wrapper.module.ts"],"names":[],"mappings":"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","file":"lazy-libs-identity-wrapper-module.js","sourcesContent":["export * from './lib/index';\r\n","import { RolesComponent as AbpRolesComponent } from '@abp/ng.identity';\r\nimport { ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\n@Component({\r\n  selector: 'ng-alain-roles',\r\n  templateUrl: './roles.component.html',\r\n})\r\nexport class RolesComponent extends AbpRolesComponent implements OnInit {\r\n  constructor(\r\n    private _confirmationService: ConfirmationService,\r\n    private _fb: FormBuilder,\r\n    private _store: Store) {\r\n    super(_confirmationService, _fb, _store);\r\n  }\r\n}\r\n","import { UsersComponent as AbpUsersComponent } from '@abp/ng.identity';\r\nimport { ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\n@Component({\r\n  selector: 'ng-alain-users',\r\n  templateUrl: './users.component.html',\r\n})\r\nexport class UsersComponent extends AbpUsersComponent implements OnInit {\r\n    constructor(\r\n        private _confirmationService: ConfirmationService,\r\n        private _fb: FormBuilder,\r\n        private _store: Store) {\r\n        super(_confirmationService, _fb, _store);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DynamicLayoutComponent, AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { LayoutDefaultComponent } from '@fs/ng-alain/basic';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'roles', pathMatch: 'full' },\r\n    {\r\n        path: '',\r\n        component: LayoutDefaultComponent,\r\n        canActivate: [AuthGuard, PermissionGuard],\r\n        children: [\r\n            {\r\n                path: 'roles',\r\n                component: RolesComponent,\r\n                data: { requiredPolicy: 'AbpIdentity.Roles' },\r\n            },\r\n            {\r\n                path: 'users',\r\n                component: UsersComponent,\r\n                data: { requiredPolicy: 'AbpIdentity.Users' },\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class IdentityNgAlainRoutingModule { }\r\n","import { IdentityModule } from '@fs/identity';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgAlainBasicModule } from '@fs/ng-alain/basic';\r\nimport { IdentityNgAlainRoutingModule } from './identity-ng-alain-routing.module';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { PermissionManagementNgAlainModule } from '@fs/permission-management/ng-alain';\r\n\r\n@NgModule({\r\n    declarations: [UsersComponent,RolesComponent],\r\n    imports: [\r\n        CoreModule,\r\n        NgAlainBasicModule,\r\n        IdentityNgAlainRoutingModule,\r\n        PermissionManagementNgAlainModule,\r\n        IdentityModule\r\n    ]\r\n})\r\nexport class IdentityNgAlainModule { }\r\n","export * from './identity-ng-alain.module';\r\n","export * from './lib/identity.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { IdentityModule as AbpIdentityModule } from '@abp/ng.identity';\r\nimport { TableModule } from 'primeng/table';\r\nimport { NgbDropdownModule, NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n    imports: [AbpIdentityModule],\r\n    exports: [\r\n        AbpIdentityModule,\r\n        TableModule,\r\n        NgbDropdownModule,\r\n        PermissionManagementModule,\r\n        NgxValidateCoreModule,\r\n        NgbTabsetModule\r\n    ]\r\n})\r\nexport class IdentityModule {}\r\n","export * from './lib/index';\r\n","export default \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n:host {\\n  display: block;\\n  padding-top: 24px;\\n}\\n.main {\\n  display: flex;\\n  width: 100%;\\n  /*padding-top: 16px;\\n  padding-bottom: 16px;*/\\n  overflow: auto;\\n  background-color: #fff;\\n}\\n.menu {\\n  width: 224px;\\n  border-right: 1px solid #e8e8e8;\\n}\\n.menu ::ng-deep .ant-menu-inline {\\n  border: none;\\n}\\n.menu ::ng-deep .ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {\\n  font-weight: bold;\\n}\\n.content {\\n  flex: 1;\\n  padding-top: 8px;\\n  padding-right: 40px;\\n  padding-bottom: 8px;\\n  padding-left: 40px;\\n}\\n.content .title {\\n  margin-bottom: 12px;\\n  color: rgba(0, 0, 0, 0.85);\\n  font-weight: 500;\\n  font-size: 20px;\\n  line-height: 28px;\\n}\\n.content ::ng-deep .ant-list-split .ant-list-item:last-child {\\n  border-bottom: 1px solid #e8e8e8;\\n}\\n.content ::ng-deep .ant-list-item {\\n  padding-top: 14px;\\n  padding-bottom: 14px;\\n}\\n@media screen and (max-width: 767px) {\\n  .main {\\n    flex-direction: column;\\n  }\\n  .main .menu {\\n    width: 100%;\\n    border: none;\\n  }\\n  .main .content {\\n    padding: 40px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnMvcGVybWlzc2lvbi1tYW5hZ2VtZW50L25nLWFsYWluL3NyYy9saWIvY29tcG9uZW50cy9wZXJtaXNzaW9uLW1hbmFnZW1lbnQuY29tcG9uZW50Lmxlc3MiLCJsaWJzL3Blcm1pc3Npb24tbWFuYWdlbWVudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvQzovVXNlcnMvWWluQ2hhbmcvRG9jdW1lbnRzL1dvcmtzL0dpdEh1Yi9hYnAubmcvbGlicy9wZXJtaXNzaW9uLW1hbmFnZW1lbnQvbmctYWxhaW4vc3JjL2xpYi9jb21wb25lbnRzL3Blcm1pc3Npb24tbWFuYWdlbWVudC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RkFBNEY7QUFDNUYsNkNBQTZDO0FBQzdDLHNCQUFzQjtBQUN0Qiw2RkFBNkY7QUNEN0Y7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QURHRjtBQ0FBO0VBQ0UsYUFBQTtFQUNBLFdBQUE7RURFQTt3QkFDc0I7RUNBdEIsY0FBQTtFQUNBLHNCQUFBO0FERUY7QUNDQTtFQUNFLFlBQUE7RUFDQSwrQkFBQTtBRENGO0FDSEE7RUFLTSxZQUFBO0FEQ047QUNOQTtFQVFNLGlCQUFBO0FEQ047QUNJQTtFQUNFLE9BQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBREZGO0FDSEE7RUFPSSxtQkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QURESjtBQ1ZBO0VBZU0sZ0NBQUE7QURGTjtBQ2JBO0VBa0JNLGlCQUFBO0VBQ0Esb0JBQUE7QURGTjtBQ09BO0VBQ0U7SUFDRSxzQkFBQTtFRExGO0VDSUE7SUFHSSxXQUFBO0lBQ0EsWUFBQTtFREpKO0VDQUE7SUFPSSxhQUFBO0VESko7QUFDRiIsImZpbGUiOiJsaWJzL3Blcm1pc3Npb24tbWFuYWdlbWVudC9uZy1hbGFpbi9zcmMvbGliL2NvbXBvbmVudHMvcGVybWlzc2lvbi1tYW5hZ2VtZW50LmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3R5bGVsaW50LWRpc2FibGUgYXQtcnVsZS1lbXB0eS1saW5lLWJlZm9yZSxhdC1ydWxlLW5hbWUtc3BhY2UtYWZ0ZXIsYXQtcnVsZS1uby11bmtub3duICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBuby1kdXBsaWNhdGUtc2VsZWN0b3JzICovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSAqL1xuLyogc3R5bGVsaW50LWRpc2FibGUgZGVjbGFyYXRpb24tYmFuZy1zcGFjZS1iZWZvcmUsbm8tZHVwbGljYXRlLXNlbGVjdG9ycyxzdHJpbmctbm8tbmV3bGluZSAqL1xuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy10b3A6IDI0cHg7XG59XG4ubWFpbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICAvKnBhZGRpbmctdG9wOiAxNnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDsqL1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5tZW51IHtcbiAgd2lkdGg6IDIyNHB4O1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZThlOGU4O1xufVxuLm1lbnUgOjpuZy1kZWVwIC5hbnQtbWVudS1pbmxpbmUge1xuICBib3JkZXI6IG5vbmU7XG59XG4ubWVudSA6Om5nLWRlZXAgLmFudC1tZW51Om5vdCguYW50LW1lbnUtaG9yaXpvbnRhbCkgLmFudC1tZW51LWl0ZW0tc2VsZWN0ZWQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5jb250ZW50IHtcbiAgZmxleDogMTtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xufVxuLmNvbnRlbnQgLnRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44NSk7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG59XG4uY29udGVudCA6Om5nLWRlZXAgLmFudC1saXN0LXNwbGl0IC5hbnQtbGlzdC1pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U4ZThlODtcbn1cbi5jb250ZW50IDo6bmctZGVlcCAuYW50LWxpc3QtaXRlbSB7XG4gIHBhZGRpbmctdG9wOiAxNHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTRweDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5tYWluIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5tYWluIC5tZW51IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbiAgLm1haW4gLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJ35AZGVsb24vdGhlbWUvc3R5bGVzL2RlZmF1bHQnO1xuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXRvcDogMjRweDtcbn1cblxuLm1haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAgLypwYWRkaW5nLXRvcDogMTZweDtcbiAgcGFkZGluZy1ib3R0b206IDE2cHg7Ki9cbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6IEBib2R5LWJhY2tncm91bmQ7XG59XG5cbi5tZW51IHtcbiAgd2lkdGg6IDIyNHB4O1xuICBib3JkZXItcmlnaHQ6IEBib3JkZXItd2lkdGgtYmFzZSBAYm9yZGVyLXN0eWxlLWJhc2UgQGJvcmRlci1jb2xvci1zcGxpdDtcbiAgOjpuZy1kZWVwIHtcbiAgICAuYW50LW1lbnUtaW5saW5lIHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICB9XG4gICAgLmFudC1tZW51Om5vdCguYW50LW1lbnUtaG9yaXpvbnRhbCkgLmFudC1tZW51LWl0ZW0tc2VsZWN0ZWQge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICB9XG59XG5cbi5jb250ZW50IHtcbiAgZmxleDogMTtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICAudGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgY29sb3I6IEBoZWFkaW5nLWNvbG9yO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICB9XG4gIDo6bmctZGVlcCB7XG4gICAgLmFudC1saXN0LXNwbGl0IC5hbnQtbGlzdC1pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGU4ZTg7XG4gICAgfVxuICAgIC5hbnQtbGlzdC1pdGVtIHtcbiAgICAgIHBhZGRpbmctdG9wOiAxNHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDE0cHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBtb2JpbGUtbWF4KSB7XG4gIC5tYWluIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC5tZW51IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgIH1cbiAgICAuY29udGVudCB7XG4gICAgICBwYWRkaW5nOiA0MHB4O1xuICAgIH1cbiAgfVxufVxuIl19 */\"","import { PermissionManagementComponent as AbpPermissionManagementComponent, PermissionManagement } from '@abp/ng.permission-management';\r\nimport { Component, OnChanges, OnInit, Renderer2, Input } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { take } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'ng-alain-permission-management',\r\n  styleUrls: ['./permission-management.component.less'],\r\n  templateUrl: './permission-management.component.html'\r\n})\r\nexport class PermissionManagementComponent extends AbpPermissionManagementComponent\r\n  implements\r\n    PermissionManagement.PermissionManagementComponentInputs,\r\n    PermissionManagement.PermissionManagementComponentOutputs {\r\n  @Input()\r\n  providerName: string;\r\n\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (!this.selectedGroup) return;\r\n\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n\r\n    if (!value) {\r\n      this.selectedGroup = null;\r\n    }\r\n  }\r\n  \r\n  selectAllIndeterminate = false;\r\n  selectAllThisTabIndeterminate = false;\r\n  constructor(private _store: Store, private _renderer: Renderer2) {\r\n    super(_store, _renderer);\r\n  }\r\n  isGrantedByOtherProviderName(grantedProviders: PermissionManagement.GrantedProvider[]): boolean {\r\n    if (grantedProviders.length) {\r\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\r\n    }\r\n    return false;\r\n  }\r\n  onClickSelectAll() {\r\n    this.selectAllIndeterminate = false;\r\n    this.permissions = this.permissions.map(permission => ({\r\n      ...permission,\r\n      isGranted: this.isGrantedByOtherProviderName(permission.grantedProviders) || this.selectAllTab,\r\n    }));\r\n\r\n    this.selectThisTab = this.selectAllTab;\r\n  }\r\n  onClickSelectThisTab() {\r\n    this.selectAllThisTabIndeterminate = false;\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      permissions.forEach(permission => {\r\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders)) return;\r\n\r\n        const index = this.permissions.findIndex(per => per.name === permission.name);\r\n\r\n        this.permissions = [\r\n          ...this.permissions.slice(0, index),\r\n          { ...this.permissions[index], isGranted: this.selectThisTab },\r\n          ...this.permissions.slice(index + 1)\r\n        ];\r\n      });\r\n    });\r\n\r\n    this.setGrantCheckboxState();\r\n  }\r\n  onClickCheckbox(clickedPermission: PermissionManagement.Permission) {\r\n    if (clickedPermission.isGranted && this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)) return;\r\n    setTimeout(() => {\r\n      this.permissions = this.permissions.map(per => {\r\n        if (clickedPermission.name === per.name) {\r\n          return { ...per, isGranted: !per.isGranted };\r\n        } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\r\n          return { ...per, isGranted: false };\r\n        } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\r\n          return { ...per, isGranted: true };\r\n        }\r\n\r\n        return per;\r\n      });\r\n\r\n      this.setTabCheckboxState();\r\n      this.setGrantCheckboxState();\r\n    }, 0);\r\n  }\r\n  setTabCheckboxState() {\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      const selectedPermissions = permissions.filter(per => per.isGranted);\r\n      if (selectedPermissions.length === permissions.length) {\r\n        this.selectAllThisTabIndeterminate = false;\r\n        this.selectThisTab = true;\r\n      } else if (selectedPermissions.length === 0) {\r\n        this.selectAllThisTabIndeterminate = false;\r\n        this.selectThisTab = false;\r\n      } else {\r\n        this.selectAllThisTabIndeterminate = true;\r\n      }\r\n    });\r\n  }\r\n  setGrantCheckboxState() {\r\n    const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\r\n\r\n    if (selectedAllPermissions.length === this.permissions.length) {\r\n      this.selectAllIndeterminate = false;\r\n      this.selectAllTab = true;\r\n    } else if (selectedAllPermissions.length === 0) {\r\n      this.selectAllIndeterminate = false;\r\n      this.selectAllTab = false;\r\n    } else {\r\n      this.selectAllIndeterminate = true;\r\n    }\r\n  }\r\n}\r\n\r\n","export * from './permission-management-ng-alain.module';\r\n","import { PermissionManagementModule } from '@fs/permission-management';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgAlainBasicModule } from '@fs/ng-alain/basic';\r\nimport { PermissionManagementComponent } from './components/permission-management.component';\r\n\r\n@NgModule({\r\n    declarations: [PermissionManagementComponent],\r\n    imports: [\r\n        CoreModule,\r\n        NgAlainBasicModule,\r\n        PermissionManagementModule\r\n    ],\r\n    exports: [PermissionManagementComponent]\r\n})\r\nexport class PermissionManagementNgAlainModule { }\r\n","export * from './lib/permission-management.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionManagementModule as AbpPermissionManagementModule} from '@abp/ng.permission-management'\r\n\r\n@NgModule({\r\n    imports: [AbpPermissionManagementModule],\r\n    exports: [AbpPermissionManagementModule]\r\n})\r\nexport class PermissionManagementModule {}\r\n","export default \"<page-header [title]=\\\"'AbpIdentity::Roles' | abpLocalization\\\"></page-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n  <button nz-button [abpPermission]=\\\"'AbpIdentity.Roles.Create'\\\" (click)=\\\"add()\\\" [nzType]=\\\"'primary'\\\">\\r\\n    <i nz-icon nzType=\\\"plus\\\"></i>\\r\\n    <span>{{ 'AbpIdentity::NewRole' | abpLocalization }}</span>\\r\\n  </button>\\r\\n  <p-table *ngIf=\\\"[150, 0] as columnWidths\\\" [value]=\\\"data$ | async\\\" [abpTableSort]=\\\"{ key: sortKey, order: sortOrder }\\\"\\r\\n    [lazy]=\\\"true\\\" [lazyLoadOnInit]=\\\"false\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalCount$ | async\\\"\\r\\n    [loading]=\\\"loading\\\" [resizableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\" (onLazyLoad)=\\\"onPageChange($event)\\\">\\r\\n    <ng-template pTemplate=\\\"colgroup\\\">\\r\\n      <colgroup>\\r\\n        <col *ngFor=\\\"let width of columnWidths\\\" [ngStyle]=\\\"{ 'width.px': width || undefined }\\\" />\\r\\n      </colgroup>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"emptymessage\\\" let-columns>\\r\\n      <tr abp-table-empty-message [attr.colspan]=\\\"columnWidths.length\\\" localizationResource=\\\"AbpIdentity\\\"\\r\\n        localizationProp=\\\"NoDataAvailableInDatatable\\\"></tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n      <tr>\\r\\n        <th>{{ 'AbpIdentity::Actions' | abpLocalization }}</th>\\r\\n        <th pResizableColumn (click)=\\\"sortOrderIcon.sort('name')\\\">\\r\\n          {{ 'AbpIdentity::RoleName' | abpLocalization }}\\r\\n          <abp-sort-order-icon #sortOrderIcon key=\\\"name\\\" [(selectedSortKey)]=\\\"sortKey\\\" [(order)]=\\\"sortOrder\\\">\\r\\n          </abp-sort-order-icon>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-data>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <a nz-dropdown [nzDropdownMenu]=\\\"opMenu\\\">\\r\\n            {{ 'AbpIdentity::Actions' | abpLocalization }}\\r\\n            <i nz-icon nzType=\\\"down\\\"></i>\\r\\n          </a>\\r\\n          <nz-dropdown-menu #opMenu=\\\"nzDropdownMenu\\\">\\r\\n            <ul nz-menu>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Roles.Update'\\\" (click)=\\\"edit(data.id)\\\">\\r\\n                {{ 'AbpIdentity::Edit' | abpLocalization }}</li>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Roles.ManagePermissions'\\\"\\r\\n                (click)=\\\"providerKey = data.name; visiblePermissions = true\\\">\\r\\n                {{ 'AbpIdentity::Permissions' | abpLocalization }}</li>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Roles.Delete'\\\" (click)=\\\"delete(data.id, data.name)\\\">\\r\\n                {{ 'AbpIdentity::Delete' | abpLocalization }}</li>\\r\\n            </ul>\\r\\n          </nz-dropdown-menu>\\r\\n        </td>\\r\\n        <td>\\r\\n          {{ data.name }}\\r\\n          <nz-tag [nzColor]=\\\"'#17a2b8'\\\" *ngIf=\\\"data.isPublic\\\">Public</nz-tag>\\r\\n          <nz-tag [nzColor]=\\\"'#28a745'\\\" *ngIf=\\\"data.isDefault\\\">Default</nz-tag>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</nz-card>\\r\\n<nz-modal [nzStyle]=\\\"{ top: '20px' }\\\" [(nzVisible)]=\\\"isModalVisible\\\" [nzTitle]=\\\"modalTitle\\\" [nzContent]=\\\"modalContent\\\"\\r\\n  [nzFooter]=\\\"modalFooter\\\" (nzOnCancel)=\\\"isModalVisible=false\\\">\\r\\n  <ng-template #modalTitle>\\r\\n    {{(selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewRole') | abpLocalization}}\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #modalContent>\\r\\n    <ng-template #loaderRef>\\r\\n      <div class=\\\"text-center\\\"><i class=\\\"fa fa-pulse fa-spinner\\\"></i></div>\\r\\n    </ng-template>\\r\\n\\r\\n    <form nz-form *ngIf=\\\"form; else loaderRef\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n\\r\\n      <nz-form-item>\\r\\n        <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"role-name\\\">\\r\\n          {{ 'AbpIdentity::RoleName' | abpLocalization }}</nz-form-label>\\r\\n        <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n          <input nz-input formControlName=\\\"name\\\" id=\\\"role-name\\\" />\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n      <nz-form-item>\\r\\n        <nz-form-control [nzSpan]=\\\"14\\\" [nzOffset]=\\\"6\\\">\\r\\n          <label nz-checkbox formControlName=\\\"isDefault\\\">\\r\\n            <span>\\r\\n              {{\\r\\n                  'AbpIdentity::DisplayName:IsDefault' | abpLocalization\\r\\n              }}\\r\\n            </span>\\r\\n          </label>\\r\\n          <label nz-checkbox formControlName=\\\"isPublic\\\">\\r\\n            <span>\\r\\n              {{\\r\\n                  'AbpIdentity::DisplayName:IsPublic' | abpLocalization\\r\\n              }}\\r\\n            </span>\\r\\n          </label>\\r\\n        </nz-form-control>\\r\\n      </nz-form-item>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #modalFooter>\\r\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"isModalVisible=false\\\">\\r\\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"form?.invalid\\\">\\r\\n      {{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n      }}\\r\\n    </button>\\r\\n  </ng-template>\\r\\n</nz-modal>\\r\\n<ng-alain-permission-management [(visible)]=\\\"visiblePermissions\\\" providerName=\\\"R\\\" [providerKey]=\\\"providerKey\\\">\\r\\n</ng-alain-permission-management>\"","export default \"<page-header [title]=\\\"'AbpIdentity::NewUser' | abpLocalization\\\"></page-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n  <button nz-button [abpPermission]=\\\"'AbpIdentity.Users.Create'\\\" (click)=\\\"add()\\\" [nzType]=\\\"'primary'\\\">\\r\\n    <i nz-icon nzType=\\\"plus\\\"></i>\\r\\n    <span>{{ 'AbpIdentity::NewUser' | abpLocalization }}</span>\\r\\n  </button>\\r\\n  <p-table *ngIf=\\\"[150, 250, 250, 250] as columnWidths\\\" [value]=\\\"data$ | async\\\"\\r\\n    [abpTableSort]=\\\"{ key: sortKey, order: sortOrder }\\\" [lazy]=\\\"true\\\" [lazyLoadOnInit]=\\\"false\\\" [paginator]=\\\"true\\\"\\r\\n    [rows]=\\\"10\\\" [totalRecords]=\\\"totalCount$ | async\\\" [loading]=\\\"loading\\\" [resizableColumns]=\\\"true\\\" [scrollable]=\\\"true\\\"\\r\\n    (onLazyLoad)=\\\"onPageChange($event)\\\">\\r\\n    <ng-template pTemplate=\\\"colgroup\\\">\\r\\n      <colgroup>\\r\\n        <col *ngFor=\\\"let width of columnWidths\\\" [ngStyle]=\\\"{ 'width.px': width || undefined }\\\" />\\r\\n      </colgroup>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"emptymessage\\\" let-columns>\\r\\n      <tr abp-table-empty-message [attr.colspan]=\\\"columnWidths.length\\\" localizationResource=\\\"AbpIdentity\\\"\\r\\n        localizationProp=\\\"NoDataAvailableInDatatable\\\"></tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n      <tr>\\r\\n        <th>{{ 'AbpIdentity::Actions' | abpLocalization }}</th>\\r\\n        <th pResizableColumn (click)=\\\"sortOrderIcon.sort('userName')\\\">\\r\\n          {{ 'AbpIdentity::UserName' | abpLocalization }}\\r\\n          <abp-sort-order-icon #sortOrderIcon key=\\\"userName\\\" [(selectedSortKey)]=\\\"sortKey\\\" [(order)]=\\\"sortOrder\\\">\\r\\n          </abp-sort-order-icon>\\r\\n        </th>\\r\\n        <th pResizableColumn (click)=\\\"sortOrderIcon.sort('email')\\\">\\r\\n          {{ 'AbpIdentity::EmailAddress' | abpLocalization }}\\r\\n          <abp-sort-order-icon key=\\\"email\\\" [(selectedSortKey)]=\\\"sortKey\\\" [(order)]=\\\"sortOrder\\\"></abp-sort-order-icon>\\r\\n        </th>\\r\\n        <th pResizableColumn (click)=\\\"sortOrderIcon.sort('phoneNumber')\\\">\\r\\n          {{ 'AbpIdentity::PhoneNumber' | abpLocalization }}\\r\\n          <abp-sort-order-icon key=\\\"phoneNumber\\\" [(selectedSortKey)]=\\\"sortKey\\\" [(order)]=\\\"sortOrder\\\">\\r\\n          </abp-sort-order-icon>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-data>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <a class=\\\"ant-dropdown-link\\\" nz-dropdown [nzDropdownMenu]=\\\"opMenu\\\">\\r\\n            {{ 'AbpIdentity::Actions' | abpLocalization }}\\r\\n            <i nz-icon nzType=\\\"down\\\"></i>\\r\\n          </a>\\r\\n          <nz-dropdown-menu #opMenu=\\\"nzDropdownMenu\\\">\\r\\n            <ul nz-menu>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Users.Update'\\\" (click)=\\\"edit(data.id)\\\">\\r\\n                {{ 'AbpIdentity::Edit' | abpLocalization }}</li>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Users.ManagePermissions'\\\"\\r\\n                (click)=\\\"providerKey = data.id; visiblePermissions = true\\\">\\r\\n                {{ 'AbpIdentity::Permissions' | abpLocalization }}</li>\\r\\n              <li nz-menu-item [abpPermission]=\\\"'AbpIdentity.Users.Delete'\\\" (click)=\\\"delete(data.id, data.userName)\\\">\\r\\n                {{ 'AbpIdentity::Delete' | abpLocalization }}</li>\\r\\n            </ul>\\r\\n          </nz-dropdown-menu>\\r\\n        </td>\\r\\n        <td>{{ data.userName }}</td>\\r\\n        <td>{{ data.email }}</td>\\r\\n        <td>{{ data.phoneNumber }}</td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</nz-card>\\r\\n<nz-modal [nzStyle]=\\\"{ top: '20px' }\\\" [(nzVisible)]=\\\"isModalVisible\\\" [nzTitle]=\\\"modalTitle\\\" [nzContent]=\\\"modalContent\\\"\\r\\n  [nzFooter]=\\\"modalFooter\\\" (nzOnCancel)=\\\"isModalVisible=false\\\">\\r\\n  <ng-template #modalTitle>\\r\\n    {{(selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewUser') | abpLocalization}}\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #modalContent>\\r\\n    <ng-template #loaderRef>\\r\\n      <div class=\\\"text-center\\\"><i class=\\\"fa fa-pulse fa-spinner\\\"></i></div>\\r\\n    </ng-template>\\r\\n\\r\\n    <form nz-form *ngIf=\\\"form; else loaderRef\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n      <nz-tabset>\\r\\n        <nz-tab nzTitle=\\\"{{'AbpIdentity::UserInformations' | abpLocalization}}\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"user-name\\\">\\r\\n              {{ 'AbpIdentity::UserName' | abpLocalization }}</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input formControlName=\\\"userName\\\" id=\\\"user-name\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}\\r\\n            </nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input formControlName=\\\"name\\\" id=\\\"name\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"surname\\\">\\r\\n              {{ 'AbpIdentity::DisplayName:Surname' | abpLocalization }}</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input formControlName=\\\"surname\\\" id=\\\"surname\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"password\\\" nzRequired>\\r\\n              {{ 'AbpIdentity::Password' | abpLocalization }}</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">\\r\\n              {{ 'AbpIdentity::EmailAddress' | abpLocalization }}</nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input formControlName=\\\"email\\\" id=\\\"email\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"phoneNumber\\\">{{ 'AbpIdentity::PhoneNumber' | abpLocalization }}\\r\\n            </nz-form-label>\\r\\n            <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\">\\r\\n              <input nz-input formControlName=\\\"phoneNumber\\\" id=\\\"phoneNumber\\\" />\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-control>\\r\\n              <label nz-checkbox formControlName=\\\"lockoutEnabled\\\">\\r\\n                <span>\\r\\n                  {{\\r\\n                  'AbpIdentity::DisplayName:LockoutEnabled' | abpLocalization\\r\\n                  }}\\r\\n                </span>\\r\\n              </label>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n          <nz-form-item>\\r\\n            <nz-form-control>\\r\\n              <label nz-checkbox formControlName=\\\"twoFactorEnabled\\\">\\r\\n                <span>\\r\\n                  {{\\r\\n                  'AbpIdentity::DisplayName:TwoFactorEnabled' | abpLocalization\\r\\n                  }}\\r\\n                </span>\\r\\n              </label>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </nz-tab>\\r\\n        <nz-tab nzTitle=\\\"{{'AbpIdentity::Roles' | abpLocalization}}\\\">\\r\\n          <nz-form-item>\\r\\n            <nz-form-control *ngFor=\\\"let roleGroup of roleGroups; let i = index; trackBy: trackByFn\\\">\\r\\n              <label nz-checkbox [formControl]=\\\"roleGroup.controls[roles[i].name]\\\">\\r\\n                <span>\\r\\n                  {{ roles[i].name }}\\r\\n                </span>\\r\\n              </label>\\r\\n            </nz-form-control>\\r\\n          </nz-form-item>\\r\\n        </nz-tab>\\r\\n      </nz-tabset>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #modalFooter>\\r\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"isModalVisible=false\\\">\\r\\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"form?.invalid\\\">\\r\\n      {{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n      }}\\r\\n    </button>\\r\\n  </ng-template>\\r\\n</nz-modal>\\r\\n<ng-alain-permission-management [(visible)]=\\\"visiblePermissions\\\" providerName=\\\"U\\\" [providerKey]=\\\"providerKey\\\">\\r\\n</ng-alain-permission-management>\"","export default \"<ng-container *ngIf=\\\"{ entityName: entityName$ | async } as data\\\">\\r\\n  <nz-modal [(nzVisible)]=\\\"visible\\\"\\r\\n            (nzAfterOpen)=\\\"initModal()\\\"\\r\\n            [nzTitle]=\\\"modalTitle\\\"\\r\\n            [nzContent]=\\\"modalContent\\\"\\r\\n            [nzFooter]=\\\"modalFooter\\\"\\r\\n            (nzOnCancel)=\\\"visible=false\\\"\\r\\n            nzWidth=\\\"1040\\\"\\r\\n  >\\r\\n\\r\\n    <ng-template #modalTitle>\\r\\n      {{ 'AbpPermissionManagement::Permissions' | abpLocalization }} - {{ data.entityName }}\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #modalContent>\\r\\n      <nz-checkbox-wrapper >\\r\\n        <label nz-checkbox [(ngModel)]=\\\"selectAllTab\\\" (ngModelChange)=\\\"onClickSelectAll()\\\" [nzIndeterminate]=\\\"selectAllIndeterminate\\\">\\r\\n          {{'AbpPermissionManagement::SelectAllInAllTabs' | abpLocalization}}\\r\\n        </label>\\r\\n      </nz-checkbox-wrapper>\\r\\n\\r\\n\\r\\n      <div class=\\\"main\\\">\\r\\n        <div class=\\\"menu\\\">\\r\\n          <ul nz-menu nzMode=\\\"inline\\\">\\r\\n            <li *ngFor=\\\"let group of groups$ | async; trackBy: trackByFn\\\" nz-menu-item [nzSelected]=\\\"selectedGroup?.name === group?.name\\\" (click)=\\\"onChangeGroup(group)\\\">{{ group?.displayName }}</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"content\\\">\\r\\n          <div class=\\\"title\\\">{{ selectedGroup?.displayName }}</div>\\r\\n          <nz-checkbox-wrapper>\\r\\n            <label nz-checkbox [(ngModel)]=\\\"selectThisTab\\\" (ngModelChange)=\\\"onClickSelectThisTab()\\\" [nzIndeterminate]=\\\"selectAllThisTabIndeterminate\\\">\\r\\n              {{'AbpPermissionManagement::SelectAllInThisTab' | abpLocalization}}\\r\\n            </label>\\r\\n          </nz-checkbox-wrapper>\\r\\n          <div *ngFor=\\\"let permission of selectedGroupPermissions$ | async; let i = index; trackBy: trackByFn\\\"\\r\\n               [style.margin-left]=\\\"permission.margin + 'px'\\\">\\r\\n            <nz-checkbox-wrapper>\\r\\n              <label nz-checkbox\\r\\n                     [ngModel]=\\\"getChecked(permission.name)\\\"\\r\\n                     [nzDisabled]=\\\"isGrantedByOtherProviderName(permission.grantedProviders)\\\"\\r\\n                     (ngModelChange)=\\\"onClickCheckbox(permission)\\\"\\r\\n                     >\\r\\n                {{ permission.displayName }}\\r\\n                <span *ngFor=\\\"let provider of permission.grantedProviders\\\">{{ provider.providerName }}: {{ provider.providerKey }}</span>\\r\\n              </label>\\r\\n            </nz-checkbox-wrapper>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #modalFooter>\\r\\n      <button nz-button nzType=\\\"default\\\" (click)=\\\"visible=false\\\">\\r\\n        {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n      </button>\\r\\n      <button nz-button nzType=\\\"primary\\\" (click)=\\\"submit()\\\">\\r\\n        {{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n        }}\\r\\n      </button>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n  </nz-modal>\\r\\n</ng-container>\\r\\n\"","export default \"<div id=\\\"identity-roles-wrapper\\\" class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col col-md-6\\\">\\r\\n        <h5 class=\\\"card-title\\\">{{ 'AbpIdentity::Roles' | abpLocalization }}</h5>\\r\\n      </div>\\r\\n      <div class=\\\"text-right col col-md-6\\\">\\r\\n        <button\\r\\n          *abpPermission=\\\"'AbpIdentity.Roles.Create'\\\"\\r\\n          id=\\\"create-role\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          type=\\\"button\\\"\\r\\n          (click)=\\\"add()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-plus mr-1\\\"></i>\\r\\n          <span>{{ 'AbpIdentity::NewRole' | abpLocalization }}</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <p-table\\r\\n      *ngIf=\\\"[150, 0] as columnWidths\\\"\\r\\n      [value]=\\\"data$ | async\\\"\\r\\n      [abpTableSort]=\\\"{ key: sortKey, order: sortOrder }\\\"\\r\\n      [lazy]=\\\"true\\\"\\r\\n      [lazyLoadOnInit]=\\\"false\\\"\\r\\n      [paginator]=\\\"true\\\"\\r\\n      [rows]=\\\"10\\\"\\r\\n      [totalRecords]=\\\"totalCount$ | async\\\"\\r\\n      [loading]=\\\"loading\\\"\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n      (onLazyLoad)=\\\"onPageChange($event)\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"colgroup\\\">\\r\\n        <colgroup>\\r\\n          <col *ngFor=\\\"let width of columnWidths\\\" [ngStyle]=\\\"{ 'width.px': width || undefined }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"emptymessage\\\" let-columns>\\r\\n        <tr\\r\\n          abp-table-empty-message\\r\\n          [attr.colspan]=\\\"columnWidths.length\\\"\\r\\n          localizationResource=\\\"AbpIdentity\\\"\\r\\n          localizationProp=\\\"NoDataAvailableInDatatable\\\"\\r\\n        ></tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th>{{ 'AbpIdentity::Actions' | abpLocalization }}</th>\\r\\n          <th pResizableColumn (click)=\\\"sortOrderIcon.sort('name')\\\">\\r\\n            {{ 'AbpIdentity::RoleName' | abpLocalization }}\\r\\n            <abp-sort-order-icon\\r\\n              #sortOrderIcon\\r\\n              sortKey=\\\"name\\\"\\r\\n              [(selectedSortKey)]=\\\"sortKey\\\"\\r\\n              [(order)]=\\\"sortOrder\\\"\\r\\n            ></abp-sort-order-icon>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\r\\n        <tr>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <div ngbDropdown container=\\\"body\\\" class=\\\"d-inline-block\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary btn-sm dropdown-toggle\\\"\\r\\n                data-toggle=\\\"dropdown\\\"\\r\\n                aria-haspopup=\\\"true\\\"\\r\\n                ngbDropdownToggle\\r\\n              >\\r\\n                <i class=\\\"fa fa-cog mr-1\\\"></i>{{ 'AbpIdentity::Actions' | abpLocalization }}\\r\\n              </button>\\r\\n              <div ngbDropdownMenu>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Roles.Update'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"edit(data.id)\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Edit' | abpLocalization }}\\r\\n                </button>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Roles.ManagePermissions'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"providerKey = data.name; visiblePermissions = true\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Permissions' | abpLocalization }}\\r\\n                </button>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Roles.Delete'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"delete(data.id, data.name)\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Delete' | abpLocalization }}\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>\\r\\n            {{ data.name\\r\\n            }}<span *ngIf=\\\"data.isDefault\\\" class=\\\"badge badge-pill badge-success ml-1\\\">{{\\r\\n              'AbpIdentity::DisplayName:IsDefault' | abpLocalization\\r\\n            }}</span>\\r\\n            <span *ngIf=\\\"data.isPublic\\\" class=\\\"badge badge-pill badge-info ml-1\\\">{{\\r\\n              'AbpIdentity::DisplayName:IsPublic' | abpLocalization\\r\\n            }}</span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<abp-modal size=\\\"md\\\" [(visible)]=\\\"isModalVisible\\\" [busy]=\\\"modalBusy\\\">\\r\\n  <ng-template #abpHeader>\\r\\n    <h3>{{ (selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewRole') | abpLocalization }}</h3>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #abpBody>\\r\\n    <form #formRef [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\" validateOnSubmit>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"role-name\\\">{{ 'AbpIdentity::RoleName' | abpLocalization }}</label\\r\\n        ><span> * </span>\\r\\n        <input autofocus type=\\\"text\\\" id=\\\"role-name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n        <input\\r\\n          type=\\\"checkbox\\\"\\r\\n          id=\\\"role-is-default\\\"\\r\\n          class=\\\"custom-control-input\\\"\\r\\n          formControlName=\\\"isDefault\\\"\\r\\n        />\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"role-is-default\\\">{{\\r\\n          'AbpIdentity::DisplayName:IsDefault' | abpLocalization\\r\\n        }}</label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n        <input\\r\\n          type=\\\"checkbox\\\"\\r\\n          id=\\\"role-is-public\\\"\\r\\n          class=\\\"custom-control-input\\\"\\r\\n          formControlName=\\\"isPublic\\\"\\r\\n        />\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"role-is-public\\\">{{\\r\\n          'AbpIdentity::DisplayName:IsPublic' | abpLocalization\\r\\n        }}</label>\\r\\n      </div>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #abpFooter>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" #abpClose>\\r\\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <abp-button iconClass=\\\"fa fa-check\\\" [disabled]=\\\"form?.invalid\\\" (click)=\\\"onClickSaveButton()\\\">{{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n    }}</abp-button>\\r\\n  </ng-template>\\r\\n</abp-modal>\\r\\n\\r\\n<abp-permission-management\\r\\n  #abpPermissionManagement=\\\"abpPermissionManagement\\\"\\r\\n  *abpReplaceableTemplate=\\\"\\r\\n    {\\r\\n      inputs: {\\r\\n        providerName: { value: 'R' },\\r\\n        providerKey: { value: providerKey },\\r\\n        visible: { value: visiblePermissions, twoWay: true },\\r\\n        hideBadges: { value: true }\\r\\n      },\\r\\n      outputs: { visibleChange: onVisiblePermissionChange },\\r\\n      componentKey: 'PermissionManagement.PermissionManagementComponent'\\r\\n    };\\r\\n    let init = initTemplate\\r\\n  \\\"\\r\\n  (abpInit)=\\\"init(abpPermissionManagement)\\\"\\r\\n>\\r\\n</abp-permission-management>\\r\\n\\r\\n<!-- <abp-permission-management\\r\\n  #abpPermissionManagement=\\\"abpPermissionManagement\\\"\\r\\n  *abpReplaceableTemplate=\\\"{\\r\\n    inputs: {\\r\\n      providerName: { value: 'R' },\\r\\n      providerKey: { value: providerKey },\\r\\n      visible: { value: visiblePermissions, twoWay: true },\\r\\n      hideBadges: { value: true }\\r\\n    },\\r\\n    outputs: { visibleChange: onVisiblePermissionChange },\\r\\n    componentKey: 'PermissionManagement.PermissionManagementComponent'\\r\\n  }\\\"\\r\\n  [(visible)]=\\\"visiblePermissions\\\"\\r\\n  [providerKey]=\\\"providerKey\\\"\\r\\n  [hideBadges]=\\\"true\\\"\\r\\n  providerName=\\\"R\\\"\\r\\n>\\r\\n</abp-permission-management> -->\\r\\n\"","export default \"<div id=\\\"identity-roles-wrapper\\\" class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col col-md-6\\\">\\r\\n        <h5 class=\\\"card-title\\\">{{ 'AbpIdentity::Users' | abpLocalization }}</h5>\\r\\n      </div>\\r\\n      <div class=\\\"text-right col col-md-6\\\">\\r\\n        <button\\r\\n          *abpPermission=\\\"'AbpIdentity.Users.Create'\\\"\\r\\n          id=\\\"create-role\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          type=\\\"button\\\"\\r\\n          (click)=\\\"add()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-plus mr-1\\\"></i>\\r\\n          <span>{{ 'AbpIdentity::NewUser' | abpLocalization }}</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div id=\\\"data-tables-table-filter\\\" class=\\\"data-tables-filter\\\">\\r\\n      <label\\r\\n        ><input\\r\\n          type=\\\"search\\\"\\r\\n          class=\\\"form-control form-control-sm\\\"\\r\\n          [placeholder]=\\\"'AbpUi::PagerSearch' | abpLocalization\\\"\\r\\n          (input.debounce)=\\\"onSearch($event.target.value)\\\"\\r\\n      /></label>\\r\\n    </div>\\r\\n    <p-table\\r\\n      *ngIf=\\\"[150, 250, 250, 250] as columnWidths\\\"\\r\\n      [value]=\\\"data$ | async\\\"\\r\\n      [abpTableSort]=\\\"{ key: sortKey, order: sortOrder }\\\"\\r\\n      [lazy]=\\\"true\\\"\\r\\n      [lazyLoadOnInit]=\\\"false\\\"\\r\\n      [paginator]=\\\"true\\\"\\r\\n      [rows]=\\\"10\\\"\\r\\n      [totalRecords]=\\\"totalCount$ | async\\\"\\r\\n      [loading]=\\\"loading\\\"\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n      (onLazyLoad)=\\\"onPageChange($event)\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"colgroup\\\">\\r\\n        <colgroup>\\r\\n          <col *ngFor=\\\"let width of columnWidths\\\" [ngStyle]=\\\"{ 'width.px': width || undefined }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"emptymessage\\\" let-columns>\\r\\n        <tr\\r\\n          abp-table-empty-message\\r\\n          [attr.colspan]=\\\"columnWidths.length\\\"\\r\\n          localizationResource=\\\"AbpIdentity\\\"\\r\\n          localizationProp=\\\"NoDataAvailableInDatatable\\\"\\r\\n        ></tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>{{ 'AbpIdentity::Actions' | abpLocalization }}</th>\\r\\n          <th pResizableColumn (click)=\\\"sortOrderIcon.sort('userName')\\\">\\r\\n            {{ 'AbpIdentity::UserName' | abpLocalization }}\\r\\n            <abp-sort-order-icon\\r\\n              #sortOrderIcon\\r\\n              sortKey=\\\"userName\\\"\\r\\n              [(selectedSortKey)]=\\\"sortKey\\\"\\r\\n              [(order)]=\\\"sortOrder\\\"\\r\\n            >\\r\\n            </abp-sort-order-icon>\\r\\n          </th>\\r\\n          <th pResizableColumn (click)=\\\"sortOrderIcon.sort('email')\\\">\\r\\n            {{ 'AbpIdentity::EmailAddress' | abpLocalization }}\\r\\n            <abp-sort-order-icon\\r\\n              sortKey=\\\"email\\\"\\r\\n              [(selectedSortKey)]=\\\"sortKey\\\"\\r\\n              [(order)]=\\\"sortOrder\\\"\\r\\n            ></abp-sort-order-icon>\\r\\n          </th>\\r\\n          <th pResizableColumn (click)=\\\"sortOrderIcon.sort('phoneNumber')\\\">\\r\\n            {{ 'AbpIdentity::PhoneNumber' | abpLocalization }}\\r\\n            <abp-sort-order-icon\\r\\n              sortKey=\\\"phoneNumber\\\"\\r\\n              [(selectedSortKey)]=\\\"sortKey\\\"\\r\\n              [(order)]=\\\"sortOrder\\\"\\r\\n            >\\r\\n            </abp-sort-order-icon>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-data>\\r\\n        <tr>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <div ngbDropdown container=\\\"body\\\" class=\\\"d-inline-block\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-primary btn-sm dropdown-toggle\\\"\\r\\n                data-toggle=\\\"dropdown\\\"\\r\\n                aria-haspopup=\\\"true\\\"\\r\\n                ngbDropdownToggle\\r\\n              >\\r\\n                <i class=\\\"fa fa-cog mr-1\\\"></i>{{ 'AbpIdentity::Actions' | abpLocalization }}\\r\\n              </button>\\r\\n              <div ngbDropdownMenu>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Users.Update'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"edit(data.id)\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Edit' | abpLocalization }}\\r\\n                </button>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Users.ManagePermissions'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"providerKey = data.id; visiblePermissions = true\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Permissions' | abpLocalization }}\\r\\n                </button>\\r\\n                <button\\r\\n                  *abpPermission=\\\"'AbpIdentity.Users.Delete'\\\"\\r\\n                  ngbDropdownItem\\r\\n                  (click)=\\\"delete(data.id, data.userName)\\\"\\r\\n                >\\r\\n                  {{ 'AbpIdentity::Delete' | abpLocalization }}\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{ data.userName }}</td>\\r\\n          <td>{{ data.email }}</td>\\r\\n          <td>{{ data.phoneNumber }}</td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<abp-modal [(visible)]=\\\"isModalVisible\\\" [busy]=\\\"modalBusy\\\" (disappear)=\\\"form = null\\\">\\r\\n  <ng-template #abpHeader>\\r\\n    <h3>{{ (selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewUser') | abpLocalization }}</h3>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #abpBody>\\r\\n    <ng-template #loaderRef\\r\\n      ><div class=\\\"text-center\\\"><i class=\\\"fa fa-pulse fa-spinner\\\"></i></div\\r\\n    ></ng-template>\\r\\n\\r\\n    <form *ngIf=\\\"form; else loaderRef\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n      <ngb-tabset>\\r\\n        <ngb-tab [title]=\\\"'AbpIdentity::UserInformations' | abpLocalization\\\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\\\"mt-2 fade-in-top\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"user-name\\\">{{ 'AbpIdentity::UserName' | abpLocalization }}</label\\r\\n                ><span> * </span>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  id=\\\"user-name\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"userName\\\"\\r\\n                  autofocus\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">{{ 'AbpIdentity::DisplayName:Name' | abpLocalization }}</label>\\r\\n                <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"surname\\\">{{\\r\\n                  'AbpIdentity::DisplayName:Surname' | abpLocalization\\r\\n                }}</label>\\r\\n                <input type=\\\"text\\\" id=\\\"surname\\\" class=\\\"form-control\\\" formControlName=\\\"surname\\\" />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">{{ 'AbpIdentity::Password' | abpLocalization }}</label\\r\\n                ><span *ngIf=\\\"!selected.userName\\\"> * </span>\\r\\n                <input\\r\\n                  type=\\\"password\\\"\\r\\n                  id=\\\"password\\\"\\r\\n                  autocomplete=\\\"new-password\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"password\\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"email\\\">{{ 'AbpIdentity::EmailAddress' | abpLocalization }}</label\\r\\n                ><span> * </span>\\r\\n                <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"phone-number\\\">{{ 'AbpIdentity::PhoneNumber' | abpLocalization }}</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  id=\\\"phone-number\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  formControlName=\\\"phoneNumber\\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n                <input\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  id=\\\"lockout-checkbox\\\"\\r\\n                  class=\\\"custom-control-input\\\"\\r\\n                  formControlName=\\\"lockoutEnabled\\\"\\r\\n                />\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"lockout-checkbox\\\">{{\\r\\n                  'AbpIdentity::DisplayName:LockoutEnabled' | abpLocalization\\r\\n                }}</label>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n                <input\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  id=\\\"two-factor-checkbox\\\"\\r\\n                  class=\\\"custom-control-input\\\"\\r\\n                  formControlName=\\\"twoFactorEnabled\\\"\\r\\n                />\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"two-factor-checkbox\\\">{{\\r\\n                  'AbpIdentity::DisplayName:TwoFactorEnabled' | abpLocalization\\r\\n                }}</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab [title]=\\\"'AbpIdentity::Roles' | abpLocalization\\\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\\\"mt-2 fade-in-top\\\">\\r\\n              <div\\r\\n                *ngFor=\\\"let roleGroup of roleGroups; let i = index; trackBy: trackByFn\\\"\\r\\n                class=\\\"custom-checkbox custom-control mb-2\\\"\\r\\n              >\\r\\n                <input\\r\\n                  type=\\\"checkbox\\\"\\r\\n                  name=\\\"Roles[0].IsAssigned\\\"\\r\\n                  value=\\\"true\\\"\\r\\n                  class=\\\"custom-control-input\\\"\\r\\n                  [attr.id]=\\\"'roles-' + i\\\"\\r\\n                  [formControl]=\\\"roleGroup.controls[roles[i].name]\\\"\\r\\n                />\\r\\n                <label class=\\\"custom-control-label\\\" [attr.for]=\\\"'roles-' + i\\\">{{\\r\\n                  roles[i].name\\r\\n                }}</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n      </ngb-tabset>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #abpFooter>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" #abpClose>\\r\\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n    </button>\\r\\n    <abp-button iconClass=\\\"fa fa-check\\\" (click)=\\\"save()\\\" [disabled]=\\\"form?.invalid\\\">{{\\r\\n      'AbpIdentity::Save' | abpLocalization\\r\\n    }}</abp-button>\\r\\n  </ng-template>\\r\\n</abp-modal>\\r\\n\\r\\n<abp-permission-management\\r\\n  #abpPermissionManagement=\\\"abpPermissionManagement\\\"\\r\\n  *abpReplaceableTemplate=\\\"\\r\\n    {\\r\\n      inputs: {\\r\\n        providerName: { value: 'U' },\\r\\n        providerKey: { value: providerKey },\\r\\n        visible: { value: visiblePermissions, twoWay: true }\\r\\n      },\\r\\n      outputs: { visibleChange: onVisiblePermissionChange },\\r\\n      componentKey: 'PermissionManagement.PermissionManagementComponent'\\r\\n    };\\r\\n    let init = initTemplate\\r\\n  \\\"\\r\\n  (abpInit)=\\\"init(abpPermissionManagement)\\\"\\r\\n>\\r\\n</abp-permission-management>\\r\\n\"","export default \"<abp-modal [(visible)]=\\\"visible\\\" (init)=\\\"initModal()\\\" [busy]=\\\"modalBusy\\\">\\r\\n  <ng-container *ngIf=\\\"{ entityName: entityName$ | async } as data\\\">\\r\\n    <ng-template #abpHeader>\\r\\n      <h4>\\r\\n        {{ 'AbpPermissionManagement::Permissions' | abpLocalization }} - {{ data.entityName }}\\r\\n      </h4>\\r\\n    </ng-template>\\r\\n    <ng-template #abpBody>\\r\\n      <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n        <input\\r\\n          type=\\\"checkbox\\\"\\r\\n          id=\\\"select-all-in-all-tabs\\\"\\r\\n          name=\\\"select-all-in-all-tabs\\\"\\r\\n          class=\\\"custom-control-input\\\"\\r\\n          [(ngModel)]=\\\"selectAllTab\\\"\\r\\n          (click)=\\\"onClickSelectAll()\\\"\\r\\n        />\\r\\n        <label class=\\\"custom-control-label\\\" for=\\\"select-all-in-all-tabs\\\">{{\\r\\n          'AbpPermissionManagement::SelectAllInAllTabs' | abpLocalization\\r\\n        }}</label>\\r\\n      </div>\\r\\n\\r\\n      <hr class=\\\"mt-2 mb-2\\\" />\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <ul class=\\\"nav nav-pills flex-column\\\">\\r\\n            <li *ngFor=\\\"let group of groups$ | async; trackBy: trackByFn\\\" class=\\\"nav-item\\\">\\r\\n              <a\\r\\n                class=\\\"nav-link pointer\\\"\\r\\n                [class.active]=\\\"selectedGroup?.name === group?.name\\\"\\r\\n                (click)=\\\"onChangeGroup(group)\\\"\\r\\n                >{{ group?.displayName }}</a\\r\\n              >\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"col-8\\\">\\r\\n          <h4>{{ selectedGroup?.displayName }}</h4>\\r\\n          <hr class=\\\"mt-2 mb-3\\\" />\\r\\n          <div class=\\\"pl-1 pt-1\\\">\\r\\n            <div class=\\\"custom-checkbox custom-control mb-2\\\">\\r\\n              <input\\r\\n                type=\\\"checkbox\\\"\\r\\n                id=\\\"select-all-in-this-tabs\\\"\\r\\n                name=\\\"select-all-in-this-tabs\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                [(ngModel)]=\\\"selectThisTab\\\"\\r\\n                (click)=\\\"onClickSelectThisTab()\\\"\\r\\n              />\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\"select-all-in-this-tabs\\\">{{\\r\\n                'AbpPermissionManagement::SelectAllInThisTab' | abpLocalization\\r\\n              }}</label>\\r\\n            </div>\\r\\n            <hr class=\\\"mb-3\\\" />\\r\\n            <div\\r\\n              *ngFor=\\\"\\r\\n                let permission of selectedGroupPermissions$ | async;\\r\\n                let i = index;\\r\\n                trackBy: trackByFn\\r\\n              \\\"\\r\\n              [style.margin-left]=\\\"permission.margin + 'px'\\\"\\r\\n              class=\\\"custom-checkbox custom-control mb-2\\\"\\r\\n            >\\r\\n              <input\\r\\n                #permissionCheckbox\\r\\n                type=\\\"checkbox\\\"\\r\\n                [checked]=\\\"getChecked(permission.name)\\\"\\r\\n                [value]=\\\"getChecked(permission.name)\\\"\\r\\n                [attr.id]=\\\"permission.name\\\"\\r\\n                class=\\\"custom-control-input\\\"\\r\\n                [disabled]=\\\"isGrantedByOtherProviderName(permission.grantedProviders)\\\"\\r\\n              />\\r\\n              <label\\r\\n                class=\\\"custom-control-label\\\"\\r\\n                [attr.for]=\\\"permission.name\\\"\\r\\n                (click)=\\\"onClickCheckbox(permission, permissionCheckbox.value)\\\"\\r\\n                >{{ permission.displayName }}\\r\\n                <ng-container *ngIf=\\\"!hideBadges\\\">\\r\\n                  <span\\r\\n                    *ngFor=\\\"let provider of permission.grantedProviders\\\"\\r\\n                    class=\\\"badge badge-light\\\"\\r\\n                    >{{ provider.providerName }}: {{ provider.providerKey }}</span\\r\\n                  >\\r\\n                </ng-container>\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template #abpFooter>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" #abpClose>\\r\\n        {{ 'AbpIdentity::Cancel' | abpLocalization }}\\r\\n      </button>\\r\\n      <abp-button iconClass=\\\"fa fa-check\\\" (click)=\\\"submit()\\\">{{\\r\\n        'AbpIdentity::Save' | abpLocalization\\r\\n      }}</abp-button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n</abp-modal>\\r\\n\"","import { Identity } from '../models/identity';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\nexport class GetRoles {\r\n  static readonly type = '[Identity] Get Roles';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetRoleById {\r\n  static readonly type = '[Identity] Get Role By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteRole {\r\n  static readonly type = '[Identity] Delete Role';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateRole {\r\n  static readonly type = '[Identity] Create Role';\r\n  constructor(public payload: Identity.RoleSaveRequest) {}\r\n}\r\n\r\nexport class UpdateRole {\r\n  static readonly type = '[Identity] Update Role';\r\n  constructor(public payload: Identity.RoleItem) {}\r\n}\r\n\r\nexport class GetUsers {\r\n  static readonly type = '[Identity] Get Users';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetUserById {\r\n  static readonly type = '[Identity] Get User By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteUser {\r\n  static readonly type = '[Identity] Delete User';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateUser {\r\n  static readonly type = '[Identity] Create User';\r\n  constructor(public payload: Identity.UserSaveRequest) {}\r\n}\r\n\r\nexport class UpdateUser {\r\n  static readonly type = '[Identity] Update User';\r\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\r\n}\r\n\r\nexport class GetUserRoles {\r\n  static readonly type = '[Identity] Get User Roles';\r\n  constructor(public payload: string) {}\r\n}\r\n","export * from './roles/roles.component';\r\nexport * from './users/users.component';\r\n","import { ABP } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  DeleteRole,\r\n  GetRoleById,\r\n  GetRoles,\r\n  UpdateRole,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-roles',\r\n  templateUrl: './roles.component.html',\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  @Select(IdentityState.getRoles)\r\n  data$: Observable<Identity.RoleItem[]>;\r\n\r\n  @Select(IdentityState.getRolesTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.RoleItem;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  pageQuery: ABP.PageQueryParams = {};\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  @ViewChild('formRef', { static: false, read: ElementRef })\r\n  formRef: ElementRef<HTMLFormElement>;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.fb.group({\r\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\r\n        Validators.required,\r\n        Validators.maxLength(256),\r\n      ]),\r\n      isDefault: [this.selected.isDefault || false],\r\n      isPublic: [this.selected.isPublic || false],\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.RoleItem;\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetRoleById(id))\r\n      .pipe(pluck('IdentityState', 'selectedRole'))\r\n      .subscribe(selectedRole => {\r\n        this.selected = selectedRole;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\r\n          : new CreateRole(this.form.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [name],\r\n      })\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteRole(id)).subscribe(() => this.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(data) {\r\n    this.pageQuery.skipCount = data.first;\r\n    this.pageQuery.maxResultCount = data.rows;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetRoles(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n\r\n  onClickSaveButton() {\r\n    this.formRef.nativeElement.dispatchEvent(\r\n      new Event('submit', { bubbles: true, cancelable: true }),\r\n    );\r\n  }\r\n}\r\n","import { ABP, ConfigState } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, TrackByFunction, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  CreateUser,\r\n  DeleteUser,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUserRoles,\r\n  GetUsers,\r\n  UpdateUser,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityState } from '../../states/identity.state';\r\n@Component({\r\n  selector: 'abp-users',\r\n  templateUrl: './users.component.html',\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  @Select(IdentityState.getUsers)\r\n  data$: Observable<Identity.UserItem[]>;\r\n\r\n  @Select(IdentityState.getUsersTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  @ViewChild('modalContent', { static: false })\r\n  modalContent: TemplateRef<any>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.UserItem;\r\n\r\n  selectedUserRoles: Identity.RoleItem[];\r\n\r\n  roles: Identity.RoleItem[];\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  pageQuery: ABP.PageQueryParams = {};\r\n\r\n  isModalVisible: boolean;\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  passwordRulesArr = [] as PasswordRules;\r\n\r\n  requiredPasswordLength = 1;\r\n\r\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  get roleGroups(): FormGroup[] {\r\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\r\n  }\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      this.passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      this.requiredPasswordLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n  }\r\n\r\n  onSearch(value) {\r\n    this.pageQuery.filter = value;\r\n    this.get();\r\n  }\r\n\r\n  buildForm() {\r\n    this.store.dispatch(new GetRoles()).subscribe(() => {\r\n      this.roles = this.store.selectSnapshot(IdentityState.getRoles);\r\n      this.form = this.fb.group({\r\n        userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\r\n        email: [\r\n          this.selected.email || '',\r\n          [Validators.required, Validators.email, Validators.maxLength(256)],\r\n        ],\r\n        name: [this.selected.name || '', [Validators.maxLength(64)]],\r\n        surname: [this.selected.surname || '', [Validators.maxLength(64)]],\r\n        phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\r\n        lockoutEnabled: [this.selected.lockoutEnabled || (this.selected.id ? false : true)],\r\n        twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\r\n        roleNames: this.fb.array(\r\n          this.roles.map(role =>\r\n            this.fb.group({\r\n              [role.name]: [\r\n                !!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id)),\r\n              ],\r\n            }),\r\n          ),\r\n        ),\r\n      });\r\n\r\n      const passwordValidators = [\r\n        validatePassword(this.passwordRulesArr),\r\n        Validators.minLength(this.requiredPasswordLength),\r\n        Validators.maxLength(32),\r\n      ];\r\n\r\n      this.form.addControl('password', new FormControl('', [...passwordValidators]));\r\n\r\n      if (!this.selected.userName) {\r\n        this.form.get('password').setValidators([...passwordValidators, Validators.required]);\r\n        this.form.get('password').updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.UserItem;\r\n    this.selectedUserRoles = [] as Identity.RoleItem[];\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetUserById(id))\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\r\n        pluck('IdentityState'),\r\n        take(1),\r\n      )\r\n      .subscribe((state: Identity.State) => {\r\n        this.selected = state.selectedUser;\r\n        this.selectedUserRoles = state.selectedUserRoles;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { roleNames } = this.form.value;\r\n    const mappedRoleNames = snq(\r\n      () =>\r\n        roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\r\n      [],\r\n    );\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateUser({\r\n              ...this.selected,\r\n              ...this.form.value,\r\n              id: this.selected.id,\r\n              roleNames: mappedRoleNames,\r\n            })\r\n          : new CreateUser({\r\n              ...this.form.value,\r\n              roleNames: mappedRoleNames,\r\n            }),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, userName: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [userName],\r\n      })\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteUser(id)).subscribe(() => this.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(data) {\r\n    this.pageQuery.skipCount = data.first;\r\n    this.pageQuery.maxResultCount = data.rows;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetUsers(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  DynamicLayoutComponent,\r\n  PermissionGuard,\r\n  CoreModule,\r\n  ReplaceableRouteContainerComponent,\r\n  ReplaceableComponents,\r\n} from '@abp/ng.core';\r\nimport { NgModule, Type } from '@angular/core';\r\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'roles',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Roles',\r\n          replaceableComponent: {\r\n            key: 'Identity.RolesComponent',\r\n            defaultComponent: RolesComponent,\r\n          } as ReplaceableComponents.RouteData<RolesComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Users',\r\n          replaceableComponent: {\r\n            key: 'Identity.UsersComponent',\r\n            defaultComponent: UsersComponent,\r\n          } as ReplaceableComponents.RouteData<UsersComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes), CoreModule],\r\n  exports: [RouterModule],\r\n})\r\nexport class IdentityRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { IdentityRoutingModule } from './identity-routing.module';\r\nimport { IdentityState } from './states/identity.state';\r\nimport { NgbTabsetModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\r\nimport { TableModule } from 'primeng/table';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent, UsersComponent],\r\n  imports: [\r\n    NgxsModule.forFeature([IdentityState]),\r\n    CoreModule,\r\n    IdentityRoutingModule,\r\n    NgbTabsetModule,\r\n    ThemeSharedModule,\r\n    TableModule,\r\n    NgbDropdownModule,\r\n    PermissionManagementModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n})\r\nexport class IdentityModule {}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityState } from '../states/identity.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getRoles() {\r\n    return this.store.selectSnapshot(IdentityState.getRoles);\r\n  }\r\n  getRolesTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getRolesTotalCount);\r\n  }\r\n  getUsers() {\r\n    return this.store.selectSnapshot(IdentityState.getUsers);\r\n  }\r\n  getUsersTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getUsersTotalCount);\r\n  }\r\n\r\n  dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>) {\r\n    return this.store.dispatch(new GetRoles(...args));\r\n  }\r\n\r\n  dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>) {\r\n    return this.store.dispatch(new GetRoleById(...args));\r\n  }\r\n\r\n  dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>) {\r\n    return this.store.dispatch(new DeleteRole(...args));\r\n  }\r\n\r\n  dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>) {\r\n    return this.store.dispatch(new CreateRole(...args));\r\n  }\r\n\r\n  dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>) {\r\n    return this.store.dispatch(new UpdateRole(...args));\r\n  }\r\n\r\n  dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>) {\r\n    return this.store.dispatch(new GetUsers(...args));\r\n  }\r\n\r\n  dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>) {\r\n    return this.store.dispatch(new GetUserById(...args));\r\n  }\r\n\r\n  dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>) {\r\n    return this.store.dispatch(new DeleteUser(...args));\r\n  }\r\n\r\n  dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>) {\r\n    return this.store.dispatch(new CreateUser(...args));\r\n  }\r\n\r\n  dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>) {\r\n    return this.store.dispatch(new UpdateUser(...args));\r\n  }\r\n\r\n  dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>) {\r\n    return this.store.dispatch(new GetUserRoles(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { Identity } from '../models/identity';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request);\r\n  }\r\n\r\n  getRoleById(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request);\r\n  }\r\n\r\n  deleteRole(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request);\r\n  }\r\n\r\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request);\r\n  }\r\n\r\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\r\n    const url = `/api/identity/roles/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.RoleItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request);\r\n  }\r\n\r\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserResponse>(request);\r\n  }\r\n\r\n  getUserById(id: string): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserItem>(request);\r\n  }\r\n\r\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, null>(request);\r\n  }\r\n\r\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<Identity.UserSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request);\r\n  }\r\n\r\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\r\n    const url = `/api/identity/users/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.UserItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request);\r\n  }\r\n}\r\n","export * from './identity.service';\r\nexport * from './identity-state.service';\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { switchMap, tap, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityService } from '../services/identity.service';\r\n\r\n@State<Identity.State>({\r\n  name: 'IdentityState',\r\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\r\n})\r\nexport class IdentityState {\r\n  @Selector()\r\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\r\n    return roles.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getRolesTotalCount({ roles }: Identity.State): number {\r\n    return roles.totalCount || 0;\r\n  }\r\n\r\n  @Selector()\r\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\r\n    return users.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getUsersTotalCount({ users }: Identity.State): number {\r\n    return users.totalCount || 0;\r\n  }\r\n\r\n  constructor(private identityService: IdentityService) {}\r\n\r\n  @Action(GetRoles)\r\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\r\n    return this.identityService.getRoles(payload).pipe(\r\n      tap(roles =>\r\n        patchState({\r\n          roles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetRoleById)\r\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\r\n    return this.identityService.getRoleById(payload).pipe(\r\n      tap(selectedRole =>\r\n        patchState({\r\n          selectedRole,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteRole)\r\n  deleteRole(_, { payload }: GetRoleById) {\r\n    return this.identityService.deleteRole(payload);\r\n  }\r\n\r\n  @Action(CreateRole)\r\n  addRole(_, { payload }: CreateRole) {\r\n    return this.identityService.createRole(payload);\r\n  }\r\n\r\n  @Action(UpdateRole)\r\n  updateRole({ getState }: StateContext<Identity.State>, { payload }: UpdateRole) {\r\n    return this.identityService.updateRole({ ...getState().selectedRole, ...payload });\r\n  }\r\n\r\n  @Action(GetUsers)\r\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\r\n    return this.identityService.getUsers(payload).pipe(\r\n      tap(users =>\r\n        patchState({\r\n          users,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetUserById)\r\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\r\n    return this.identityService.getUserById(payload).pipe(\r\n      tap(selectedUser =>\r\n        patchState({\r\n          selectedUser,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteUser)\r\n  deleteUser(_, { payload }: GetUserById) {\r\n    return this.identityService.deleteUser(payload);\r\n  }\r\n\r\n  @Action(CreateUser)\r\n  addUser(_, { payload }: CreateUser) {\r\n    return this.identityService.createUser(payload);\r\n  }\r\n\r\n  @Action(UpdateUser)\r\n  updateUser({ getState }: StateContext<Identity.State>, { payload }: UpdateUser) {\r\n    return this.identityService.updateUser({ ...getState().selectedUser, ...payload });\r\n  }\r\n\r\n  @Action(GetUserRoles)\r\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\r\n    return this.identityService.getUserRoles(payload).pipe(\r\n      pluck('items'),\r\n      tap(selectedUserRoles =>\r\n        patchState({\r\n          selectedUserRoles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of identity\r\n */\r\n\r\nexport * from './lib/identity.module';\r\nexport * from './lib/actions/identity.actions';\r\nexport * from './lib/components';\r\nexport * from './lib/models/identity';\r\nexport * from './lib/services';\r\nexport * from './lib/states/identity.state';\r\n","export * from './permission-management.actions';\r\n","import { PermissionManagement } from '../models/permission-management';\r\n\r\nexport class GetPermissions {\r\n  static readonly type = '[PermissionManagement] Get Permissions';\r\n  constructor(public payload: PermissionManagement.GrantedProvider) {}\r\n}\r\n\r\nexport class UpdatePermissions {\r\n  static readonly type = '[PermissionManagement] Update Permissions';\r\n  constructor(public payload: PermissionManagement.GrantedProvider & PermissionManagement.UpdateRequest) {}\r\n}\r\n","export * from './permission-management.component';\r\n","import { Component, EventEmitter, Input, Output, Renderer2, TrackByFunction } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map, pluck, take, tap } from 'rxjs/operators';\r\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\r\nimport { PermissionManagement } from '../models/permission-management';\r\nimport { PermissionManagementState } from '../states/permission-management.state';\r\n\r\ntype PermissionWithMargin = PermissionManagement.Permission & {\r\n  margin: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'abp-permission-management',\r\n  templateUrl: './permission-management.component.html',\r\n  exportAs: 'abpPermissionManagement',\r\n})\r\nexport class PermissionManagementComponent\r\n  implements\r\n    PermissionManagement.PermissionManagementComponentInputs,\r\n    PermissionManagement.PermissionManagementComponentOutputs {\r\n  @Input()\r\n  readonly providerName: string;\r\n\r\n  @Input()\r\n  readonly providerKey: string;\r\n\r\n  @Input()\r\n  readonly hideBadges = false;\r\n\r\n  protected _visible = false;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (value === this._visible) return;\r\n\r\n    if (value) {\r\n      this.openModal().subscribe(() => {\r\n        this._visible = true;\r\n        this.visibleChange.emit(true);\r\n      });\r\n    } else {\r\n      this.selectedGroup = null;\r\n      this._visible = false;\r\n      this.visibleChange.emit(false);\r\n    }\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  @Select(PermissionManagementState.getPermissionGroups)\r\n  groups$: Observable<PermissionManagement.Group[]>;\r\n\r\n  @Select(PermissionManagementState.getEntityDisplayName)\r\n  entityName$: Observable<string>;\r\n\r\n  selectedGroup: PermissionManagement.Group;\r\n\r\n  permissions: PermissionManagement.Permission[] = [];\r\n\r\n  selectThisTab = false;\r\n\r\n  selectAllTab = false;\r\n\r\n  modalBusy = false;\r\n\r\n  trackByFn: TrackByFunction<PermissionManagement.Group> = (_, item) => item.name;\r\n\r\n  get selectedGroupPermissions$(): Observable<PermissionWithMargin[]> {\r\n    return this.groups$.pipe(\r\n      map(groups =>\r\n        this.selectedGroup\r\n          ? groups.find(group => group.name === this.selectedGroup.name).permissions\r\n          : [],\r\n      ),\r\n      map<PermissionManagement.Permission[], PermissionWithMargin[]>(permissions =>\r\n        permissions.map(\r\n          permission =>\r\n            (({\r\n              ...permission,\r\n              margin: findMargin(permissions, permission),\r\n              isGranted: this.permissions.find(per => per.name === permission.name).isGranted,\r\n            } as any) as PermissionWithMargin),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  constructor(private store: Store, private renderer: Renderer2) {}\r\n\r\n  getChecked(name: string) {\r\n    return (this.permissions.find(per => per.name === name) || { isGranted: false }).isGranted;\r\n  }\r\n\r\n  isGrantedByOtherProviderName(grantedProviders: PermissionManagement.GrantedProvider[]): boolean {\r\n    if (grantedProviders.length) {\r\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onClickCheckbox(clickedPermission: PermissionManagement.Permission, value) {\r\n    if (\r\n      clickedPermission.isGranted &&\r\n      this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)\r\n    )\r\n      return;\r\n\r\n    setTimeout(() => {\r\n      this.permissions = this.permissions.map(per => {\r\n        if (clickedPermission.name === per.name) {\r\n          return { ...per, isGranted: !per.isGranted };\r\n        } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\r\n          return { ...per, isGranted: false };\r\n        } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\r\n          return { ...per, isGranted: true };\r\n        }\r\n\r\n        return per;\r\n      });\r\n\r\n      this.setTabCheckboxState();\r\n      this.setGrantCheckboxState();\r\n    }, 0);\r\n  }\r\n\r\n  setTabCheckboxState() {\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      const selectedPermissions = permissions.filter(per => per.isGranted);\r\n      const element = document.querySelector('#select-all-in-this-tabs') as any;\r\n\r\n      if (selectedPermissions.length === permissions.length) {\r\n        element.indeterminate = false;\r\n        this.selectThisTab = true;\r\n      } else if (selectedPermissions.length === 0) {\r\n        element.indeterminate = false;\r\n        this.selectThisTab = false;\r\n      } else {\r\n        element.indeterminate = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  setGrantCheckboxState() {\r\n    const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\r\n    const checkboxElement = document.querySelector('#select-all-in-all-tabs') as any;\r\n\r\n    if (selectedAllPermissions.length === this.permissions.length) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = true;\r\n    } else if (selectedAllPermissions.length === 0) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = false;\r\n    } else {\r\n      checkboxElement.indeterminate = true;\r\n    }\r\n  }\r\n\r\n  onClickSelectThisTab() {\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      permissions.forEach(permission => {\r\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders))\r\n          return;\r\n\r\n        const index = this.permissions.findIndex(per => per.name === permission.name);\r\n\r\n        this.permissions = [\r\n          ...this.permissions.slice(0, index),\r\n          { ...this.permissions[index], isGranted: !this.selectThisTab },\r\n          ...this.permissions.slice(index + 1),\r\n        ];\r\n      });\r\n    });\r\n\r\n    this.setGrantCheckboxState();\r\n  }\r\n\r\n  onClickSelectAll() {\r\n    this.permissions = this.permissions.map(permission => ({\r\n      ...permission,\r\n      isGranted:\r\n        this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab,\r\n    }));\r\n\r\n    this.selectThisTab = !this.selectAllTab;\r\n  }\r\n\r\n  onChangeGroup(group: PermissionManagement.Group) {\r\n    this.selectedGroup = group;\r\n    this.setTabCheckboxState();\r\n  }\r\n\r\n  submit() {\r\n    this.modalBusy = true;\r\n    const unchangedPermissions = getPermissions(\r\n      this.store.selectSnapshot(PermissionManagementState.getPermissionGroups),\r\n    );\r\n\r\n    const changedPermissions: PermissionManagement.MinimumPermission[] = this.permissions\r\n      .filter(per =>\r\n        unchangedPermissions.find(unchanged => unchanged.name === per.name).isGranted ===\r\n        per.isGranted\r\n          ? false\r\n          : true,\r\n      )\r\n      .map(({ name, isGranted }) => ({ name, isGranted }));\r\n\r\n    if (changedPermissions.length) {\r\n      this.store\r\n        .dispatch(\r\n          new UpdatePermissions({\r\n            providerKey: this.providerKey,\r\n            providerName: this.providerName,\r\n            permissions: changedPermissions,\r\n          }),\r\n        )\r\n        .pipe(finalize(() => (this.modalBusy = false)))\r\n        .subscribe(() => {\r\n          this.visible = false;\r\n        });\r\n    } else {\r\n      this.modalBusy = false;\r\n      this.visible = false;\r\n    }\r\n  }\r\n\r\n  openModal() {\r\n    if (!this.providerKey || !this.providerName) {\r\n      throw new Error('Provider Key and Provider Name are required.');\r\n    }\r\n\r\n    return this.store\r\n      .dispatch(\r\n        new GetPermissions({\r\n          providerKey: this.providerKey,\r\n          providerName: this.providerName,\r\n        }),\r\n      )\r\n      .pipe(\r\n        pluck('PermissionManagementState', 'permissionRes'),\r\n        tap((permissionRes: PermissionManagement.Response) => {\r\n          this.selectedGroup = permissionRes.groups[0];\r\n          this.permissions = getPermissions(permissionRes.groups);\r\n        }),\r\n      );\r\n  }\r\n\r\n  initModal() {\r\n    this.setTabCheckboxState();\r\n    this.setGrantCheckboxState();\r\n  }\r\n}\r\n\r\nfunction findMargin(\r\n  permissions: PermissionManagement.Permission[],\r\n  permission: PermissionManagement.Permission,\r\n) {\r\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\r\n\r\n  if (parentPermission && parentPermission.parentName) {\r\n    let margin = 20;\r\n    return (margin += findMargin(permissions, parentPermission));\r\n  }\r\n\r\n  return parentPermission ? 20 : 0;\r\n}\r\n\r\nfunction getPermissions(groups: PermissionManagement.Group[]): PermissionManagement.Permission[] {\r\n  return groups.reduce((acc, val) => [...acc, ...val.permissions], []);\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { PermissionManagementComponent } from './components/permission-management.component';\r\nimport { PermissionManagementState } from './states/permission-management.state';\r\n\r\n@NgModule({\r\n  declarations: [PermissionManagementComponent],\r\n  imports: [CoreModule, ThemeSharedModule, NgxsModule.forFeature([PermissionManagementState])],\r\n  exports: [PermissionManagementComponent],\r\n})\r\nexport class PermissionManagementModule {}\r\n","export * from './permission-management.service';\r\nexport * from './permission-management-state.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { PermissionManagementState } from '../states/permission-management.state';\r\nimport { PermissionManagement } from '../models';\r\nimport { GetPermissions, UpdatePermissions } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionManagementStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getPermissionGroups() {\r\n    return this.store.selectSnapshot(PermissionManagementState.getPermissionGroups);\r\n  }\r\n  getEntityDisplayName() {\r\n    return this.store.selectSnapshot(PermissionManagementState.getEntityDisplayName);\r\n  }\r\n\r\n  dispatchGetPermissions(...args: ConstructorParameters<typeof GetPermissions>) {\r\n    return this.store.dispatch(new GetPermissions(...args));\r\n  }\r\n\r\n  dispatchUpdatePermissions(...args: ConstructorParameters<typeof UpdatePermissions>) {\r\n    return this.store.dispatch(new UpdatePermissions(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionManagement } from '../models/permission-management';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionManagementService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getPermissions(params: PermissionManagement.GrantedProvider): Observable<PermissionManagement.Response> {\r\n    const request: Rest.Request<PermissionManagement.GrantedProvider> = {\r\n      method: 'GET',\r\n      url: '/api/abp/permissions',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<PermissionManagement.GrantedProvider, PermissionManagement.Response>(request);\r\n  }\r\n\r\n  updatePermissions({\r\n    permissions,\r\n    providerKey,\r\n    providerName,\r\n  }: PermissionManagement.GrantedProvider & PermissionManagement.UpdateRequest): Observable<null> {\r\n    const request: Rest.Request<PermissionManagement.UpdateRequest> = {\r\n      method: 'PUT',\r\n      url: '/api/abp/permissions',\r\n      body: { permissions },\r\n      params: { providerKey, providerName },\r\n    };\r\n\r\n    return this.rest.request<PermissionManagement.UpdateRequest, null>(request);\r\n  }\r\n}\r\n","export * from './permission-management.state';\r\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\r\nimport { PermissionManagement } from '../models/permission-management';\r\nimport { PermissionManagementService } from '../services/permission-management.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@State<PermissionManagement.State>({\r\n  name: 'PermissionManagementState',\r\n  defaults: { permissionRes: {} } as PermissionManagement.State,\r\n})\r\nexport class PermissionManagementState {\r\n  @Selector()\r\n  static getPermissionGroups({ permissionRes }: PermissionManagement.State) {\r\n    return permissionRes.groups || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getEntityDisplayName({ permissionRes }: PermissionManagement.State): string {\r\n    return permissionRes.entityDisplayName;\r\n  }\r\n\r\n  constructor(private permissionManagementService: PermissionManagementService) {}\r\n\r\n  @Action(GetPermissions)\r\n  permissionManagementGet({ patchState }: StateContext<PermissionManagement.State>, { payload }: GetPermissions) {\r\n    return this.permissionManagementService.getPermissions(payload).pipe(\r\n      tap(permissionResponse =>\r\n        patchState({\r\n          permissionRes: permissionResponse,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdatePermissions)\r\n  permissionManagementUpdate(_, { payload }: UpdatePermissions) {\r\n    return this.permissionManagementService.updatePermissions(payload);\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of permission-management\r\n */\r\n\r\nexport * from './lib/permission-management.module';\r\nexport * from './lib/actions';\r\nexport * from './lib/components';\r\nexport * from './lib/models';\r\nexport * from './lib/services';\r\nexport * from './lib/states';\r\n","import { NgModule } from '@angular/core';\r\nimport { IdentityNgAlainModule } from '@fs/identity/ng-alain';\r\n\r\n@NgModule({\r\n    imports: [IdentityNgAlainModule],\r\n})\r\nexport class IdentityWrapperModule {}\r\n"],"sourceRoot":"webpack:///"}