import { __decorate } from "tslib";
import { CoreModule } from '@abp/ng.core';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { DelonACLModule } from '@delon/acl';
import { DelonFormModule } from '@delon/form';
import { AlainThemeModule } from '@delon/theme';
import { TranslateModule } from '@ngx-translate/core';
import { SHARED_DELON_MODULES } from './shared-delon.module';
import { SHARED_ZORRO_MODULES } from './shared-zorro.module';
// #region third libs
import { CountdownModule } from 'ngx-countdown';
import { NgxTinymceModule } from 'ngx-tinymce';
import { UEditorModule } from 'ngx-ueditor';
const THIRDMODULES = [CountdownModule, UEditorModule, NgxTinymceModule];
// #endregion
// #region your componets & directives
const COMPONENTS = [];
const DIRECTIVES = [];
// #endregion
let SharedModule = class SharedModule {
};
SharedModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            CoreModule,
            FormsModule,
            RouterModule,
            ReactiveFormsModule,
            AlainThemeModule.forChild(),
            DelonACLModule,
            DelonFormModule,
            ...SHARED_DELON_MODULES,
            ...SHARED_ZORRO_MODULES,
            // third libs
            ...THIRDMODULES,
        ],
        declarations: [
            // your components
            ...COMPONENTS,
            ...DIRECTIVES,
        ],
        exports: [
            CommonModule,
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            RouterModule,
            AlainThemeModule,
            DelonACLModule,
            DelonFormModule,
            TranslateModule,
            ...SHARED_DELON_MODULES,
            ...SHARED_ZORRO_MODULES,
            // third libs
            ...THIRDMODULES,
            // your components
            ...COMPONENTS,
            ...DIRECTIVES,
        ],
    })
], SharedModule);
export { SharedModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RoZW1lcy9uZy1hbGFpbi9zaGFyZWQvc3JjL2xpYi9zaGFyZWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFN0QscUJBQXFCO0FBQ3JCLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFNUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxlQUFlLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFDeEUsYUFBYTtBQUViLHNDQUFzQztBQUN0QyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLGFBQWE7QUF5Q2IsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtDQUFHLENBQUE7QUFBZixZQUFZO0lBdkN4QixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osVUFBVTtZQUNWLFdBQVc7WUFDWCxZQUFZO1lBQ1osbUJBQW1CO1lBQ25CLGdCQUFnQixDQUFDLFFBQVEsRUFBRTtZQUMzQixjQUFjO1lBQ2QsZUFBZTtZQUNmLEdBQUcsb0JBQW9CO1lBQ3ZCLEdBQUcsb0JBQW9CO1lBQ3ZCLGFBQWE7WUFDYixHQUFHLFlBQVk7U0FDaEI7UUFDRCxZQUFZLEVBQUU7WUFDWixrQkFBa0I7WUFDbEIsR0FBRyxVQUFVO1lBQ2IsR0FBRyxVQUFVO1NBQ2Q7UUFDRCxPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osVUFBVTtZQUNWLFdBQVc7WUFDWCxtQkFBbUI7WUFDbkIsWUFBWTtZQUNaLGdCQUFnQjtZQUNoQixjQUFjO1lBQ2QsZUFBZTtZQUNmLGVBQWU7WUFDZixHQUFHLG9CQUFvQjtZQUN2QixHQUFHLG9CQUFvQjtZQUN2QixhQUFhO1lBQ2IsR0FBRyxZQUFZO1lBQ2Ysa0JBQWtCO1lBQ2xCLEdBQUcsVUFBVTtZQUNiLEdBQUcsVUFBVTtTQUNkO0tBQ0YsQ0FBQztHQUNXLFlBQVksQ0FBRztTQUFmLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IERlbG9uQUNMTW9kdWxlIH0gZnJvbSAnQGRlbG9uL2FjbCc7XHJcbmltcG9ydCB7IERlbG9uRm9ybU1vZHVsZSB9IGZyb20gJ0BkZWxvbi9mb3JtJztcclxuaW1wb3J0IHsgQWxhaW5UaGVtZU1vZHVsZSB9IGZyb20gJ0BkZWxvbi90aGVtZSc7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgU0hBUkVEX0RFTE9OX01PRFVMRVMgfSBmcm9tICcuL3NoYXJlZC1kZWxvbi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBTSEFSRURfWk9SUk9fTU9EVUxFUyB9IGZyb20gJy4vc2hhcmVkLXpvcnJvLm1vZHVsZSc7XHJcblxyXG4vLyAjcmVnaW9uIHRoaXJkIGxpYnNcclxuaW1wb3J0IHsgQ291bnRkb3duTW9kdWxlIH0gZnJvbSAnbmd4LWNvdW50ZG93bic7XHJcbmltcG9ydCB7IE5neFRpbnltY2VNb2R1bGUgfSBmcm9tICduZ3gtdGlueW1jZSc7XHJcbmltcG9ydCB7IFVFZGl0b3JNb2R1bGUgfSBmcm9tICduZ3gtdWVkaXRvcic7XHJcblxyXG5jb25zdCBUSElSRE1PRFVMRVMgPSBbQ291bnRkb3duTW9kdWxlLCBVRWRpdG9yTW9kdWxlLCBOZ3hUaW55bWNlTW9kdWxlXTtcclxuLy8gI2VuZHJlZ2lvblxyXG5cclxuLy8gI3JlZ2lvbiB5b3VyIGNvbXBvbmV0cyAmIGRpcmVjdGl2ZXNcclxuY29uc3QgQ09NUE9ORU5UUyA9IFtdO1xyXG5jb25zdCBESVJFQ1RJVkVTID0gW107XHJcbi8vICNlbmRyZWdpb25cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgQ29yZU1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUm91dGVyTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIEFsYWluVGhlbWVNb2R1bGUuZm9yQ2hpbGQoKSxcclxuICAgIERlbG9uQUNMTW9kdWxlLFxyXG4gICAgRGVsb25Gb3JtTW9kdWxlLFxyXG4gICAgLi4uU0hBUkVEX0RFTE9OX01PRFVMRVMsXHJcbiAgICAuLi5TSEFSRURfWk9SUk9fTU9EVUxFUyxcclxuICAgIC8vIHRoaXJkIGxpYnNcclxuICAgIC4uLlRISVJETU9EVUxFUyxcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgLy8geW91ciBjb21wb25lbnRzXHJcbiAgICAuLi5DT01QT05FTlRTLFxyXG4gICAgLi4uRElSRUNUSVZFUyxcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIENvcmVNb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBSb3V0ZXJNb2R1bGUsXHJcbiAgICBBbGFpblRoZW1lTW9kdWxlLFxyXG4gICAgRGVsb25BQ0xNb2R1bGUsXHJcbiAgICBEZWxvbkZvcm1Nb2R1bGUsXHJcbiAgICBUcmFuc2xhdGVNb2R1bGUsXHJcbiAgICAuLi5TSEFSRURfREVMT05fTU9EVUxFUyxcclxuICAgIC4uLlNIQVJFRF9aT1JST19NT0RVTEVTLFxyXG4gICAgLy8gdGhpcmQgbGlic1xyXG4gICAgLi4uVEhJUkRNT0RVTEVTLFxyXG4gICAgLy8geW91ciBjb21wb25lbnRzXHJcbiAgICAuLi5DT01QT05FTlRTLFxyXG4gICAgLi4uRElSRUNUSVZFUyxcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hhcmVkTW9kdWxlIHt9XHJcbiJdfQ==