{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.account/lib/components/login/login.component.ts","ng://@abp/ng.account/lib/components/manage-profile/manage-profile.component.ts","ng://@abp/ng.account/lib/services/account.service.ts","ng://@abp/ng.account/lib/components/register/register.component.ts","ng://@abp/ng.account/lib/account-routing.module.ts","ng://@abp/ng.account/lib/components/change-password/change-password.component.ts","ng://@abp/ng.account/lib/components/personal-settings/personal-settings.component.ts","ng://@abp/ng.account/lib/components/tenant-box/tenant-box.component.ts","ng://@abp/ng.account/lib/components/auth-wrapper/auth-wrapper.component.ts","ng://@abp/ng.account/lib/account.module.ts","ng://@abp/ng.account/lib/tokens/options.token.ts","ng://@abp/ng.account/lib/models/account.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__metadata","metadataKey","metadataValue","Reflect","metadata","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","maxLength","forms","Validators","required","minLength","LoginComponent","fb","oauthService","store","toasterService","authService","isSelfRegistrationEnabled","ngOnInit","selectSnapshot","ConfigState","getSetting","toLowerCase","form","group","username","password","remember","onSubmit","_this","invalid","inProgress","login","get","pipe","catchError","err","snq","error_description","message","life","throwError","finalize","subscribe","dispatch","SetRemember","Component","args","selector","template","FormBuilder","OAuthService","Store","ToasterService","AuthService","ManageProfileComponent","selectedTab","animations","trigger","transition","useAnimation","fadeIn","AccountService","rest","findTenant","tenantName","request","method","url","register","body","skipHandleError","Injectable","providedIn","RestService","email","RegisterComponent","accountService","passwordRules","getSettings","passwordRulesArr","requiredLength","Number","isInteger","validatePassword","warn","key","defaultValue","newUser","userName","emailAddress","appName","switchMap","ɵ0","replaceableComponent","defaultComponent","ɵ1","ɵ2","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","ReplaceableRouteContainerComponent","data","canActivate","AuthGuard","AccountRoutingModule","NgModule","imports","RouterModule","forChild","exports","PASSWORD_FIELDS","ChangePasswordComponent","mapErrorsFn","errors","groupErrors","control","indexOf","name","concat","filter","_a","newPassword","validators","repeatNewPassword","comparePasswords","ChangePassword","currentPassword","reset","success","exportAs","PersonalSettingsComponent","buildForm","GetProfile","withLatestFrom","profile$","take","profile","surname","phoneNumber","submit","UpdateProfile","decorators","target","desc","d","c","getOwnPropertyDescriptor","decorate","defineProperty","tslib_1.__decorate","Select","ProfileState","getProfile","Observable","TenantBoxComponent","tenant","SessionState","getTenant","onSwitch","isModalVisible","save","tenantId","id","messageLocalizationParams","SetTenant","AuthWrapperComponent","enableLocalLogin","select","takeUntilDestroy","ngOnDestroy","Input","AccountModule","declarations","CoreModule","ThemeSharedModule","TableModule","NgbDropdownModule","NgxValidateCoreModule","Account","ACCOUNT_OPTIONS","InjectionToken","AuthWrapperComponentInputs","options","redirectUrl"],"mappings":"ylCA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YA0BzB,SAASQ,EAAWC,EAAaC,GACpC,GAAuB,iBAAZC,SAAoD,mBAArBA,QAAQC,SAAyB,OAAOD,QAAQC,SAASH,EAAaC,GAuD7G,SAASG,EAAOC,EAAGf,GACtB,IAAIgB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BrB,EAAIiB,EAAEV,KAAKS,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANrB,GAAgBA,KAAM,MAAQmB,EAAIpB,EAAEuB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIjB,EAAU,SAAIiB,EAAEV,KAAKP,GAE1D,QAAkB,GAAIqB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EC3HH,IAAAM,EAAAC,EAAAC,WAAAF,UAAsBG,GAAXF,EAAAC,WAAAE,UAAWH,EAAAC,WAAAC,UAE9BE,EAAA,WAWE,SAAAA,EACUC,EACAC,EACAC,EACAC,EACAC,GAJA7B,KAAAyB,GAAAA,EACAzB,KAAA0B,aAAAA,EACA1B,KAAA2B,MAAAA,EACA3B,KAAA4B,eAAAA,EACA5B,KAAA6B,YAAAA,EAPV7B,KAAA8B,2BAA4B,EA+C9B,OArCEN,EAAA5B,UAAAmC,SAAA,WACE/B,KAAK8B,0BAKiB,WAHjB9B,KAAK2B,MAAMK,eACVC,EAAAA,YAAYC,WAAW,2CACT,IAChBC,cAEJnC,KAAKoC,KAAOpC,KAAKyB,GAAGY,MAAM,CACxBC,SAAU,CAAC,GAAI,CAAChB,EAAUH,EAAU,OACpCoB,SAAU,CAAC,GAAI,CAACjB,EAAUH,EAAU,OACpCqB,SAAU,EAAC,MAIfhB,EAAA5B,UAAA6C,SAAA,WAAA,IAAAC,EAAA1C,KACMA,KAAKoC,KAAKO,UAEd3C,KAAK4C,YAAa,EAClB5C,KAAK6B,YACFgB,MAAM7C,KAAKoC,KAAKU,IAAI,YAAY7B,MAAOjB,KAAKoC,KAAKU,IAAI,YAAY7B,OACjE8B,KACCC,EAAAA,YAAU,SAACC,GAOT,OANAP,EAAKd,eAAeV,MAClBgC,GAAG,WAAO,OAAAD,EAAI/B,MAAMiC,sBAClBD,GAAG,WAAO,OAAAD,EAAI/B,MAAMA,MAAMkC,UAAS,mCACrC,QACA,CAAEC,KAAM,MAEHC,EAAAA,WAAWL,MAEpBM,EAAAA,UAAQ,WAAO,OAACb,EAAKE,YAAa,MAEnCY,WAAS,WACRd,EAAKf,MAAM8B,SAAS,IAAIC,EAAAA,YAAYhB,EAAKN,KAAKU,IAAI,YAAY7B,iCArDrE0C,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAA,slFAXOC,EAAAA,mBAEAC,EAAAA,oBADAC,EAAAA,aAHAC,EAAAA,sBADAC,EAAAA,eAoET3C,EAxDA,GCZA,IAAA4C,EAAA,WAIA,SAAAA,IAMEpE,KAAAqE,YAAc,EAChB,2BAPCV,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,wgEACAQ,WAAY,CAACC,EAAAA,QAAQ,SAAU,CAACC,EAAAA,WAAW,SAAUC,EAAAA,aAAaC,EAAAA,gBAIpEN,EAXA,GCAA,IAAAO,EAAA,WASE,SAAAA,EAAoBC,GAAA5E,KAAA4E,KAAAA,SAEpBD,EAAA/E,UAAAiF,WAAA,SAAWC,OACHC,EAA8B,CAClCC,OAAQ,MACRC,IAAK,0CAA0CH,GAGjD,OAAO9E,KAAK4E,KAAKG,QAAgCA,IAGnDJ,EAAA/E,UAAAsF,SAAA,SAASC,OACDJ,EAAyC,CAC7CC,OAAQ,OACRC,IAAK,wBACLE,KAAIA,GAGN,OAAOnF,KAAK4E,KAAKG,QAA2CA,EAAS,CAAEK,iBAAiB,yBAtB3FC,EAAAA,WAAUzB,KAAA,CAAC,CACV0B,WAAY,oDAJLC,EAAAA,iJAFT,GCcQ,IAAApE,EAAAA,EAAAA,WAAAA,UAAWI,EAAAA,EAAAA,WAAAA,UAAWD,EAAAA,EAAAA,WAAAA,SAAUkE,EAAApE,EAAAC,WAAAmE,MAExCC,EAAA,WAWE,SAAAA,EACUhE,EACAiE,EACAhE,EACAC,EACAC,EACAC,GALA7B,KAAAyB,GAAAA,EACAzB,KAAA0F,eAAAA,EACA1F,KAAA0B,aAAAA,EACA1B,KAAA2B,MAAAA,EACA3B,KAAA4B,eAAAA,EACA5B,KAAA6B,YAAAA,EARV7B,KAAA8B,2BAA4B,EA+F9B,OApFE2D,EAAA7F,UAAAmC,SAAA,WAOE,GANA/B,KAAK8B,0BAKiB,WAHlB9B,KAAK2B,MAAMK,eACTC,EAAAA,YAAYC,WAAW,2CACpB,IACLC,cACCnC,KAAK8B,0BAAV,KAYM6D,EAAwC3F,KAAK2B,MAAMK,eACvDC,EAAAA,YAAY2D,YAAY,sBAEpBC,EAAgB,GAClBC,EAAiB,EAE6D,UAA7EH,EAAc,uCAAyC,IAAIxD,eAC9D0D,EAAiB7E,KAAK,UAG8D,UAAjF2E,EAAc,2CAA6C,IAAIxD,eAClE0D,EAAiB7E,KAAK,SAG8D,UAAjF2E,EAAc,2CAA6C,IAAIxD,eAClE0D,EAAiB7E,KAAK,aAGlB2E,EAAc,8CAAgD,GAAK,GACvEE,EAAiB7E,KAAK,WAGpB+E,OAAOC,WAAWL,EAAc,2CAClCG,GAAkBH,EAAc,yCAGlC3F,KAAKoC,KAAOpC,KAAKyB,GAAGY,MAAM,CACxBC,SAAU,CAAC,GAAI,CAAChB,EAAUH,EAAU,OACpCoB,SAAU,CACR,GACA,CAACjB,EAAU2E,EAAAA,iBAAiBJ,GAAmBtE,EAAUuE,GAAiB3E,EAAU,OAEtFqE,MAAO,CAAC,GAAI,CAAClE,EAAUkE,WA3CvBxF,KAAK4B,eAAesE,KAClB,CACEC,IAAK,8CACLC,aAAc,kCAEhB,KACA,CAAE/C,KAAM,OAyCdoC,EAAA7F,UAAA6C,SAAA,WAAA,IAAAC,EAAA1C,KACE,IAAIA,KAAKoC,KAAKO,QAAd,CAEA3C,KAAK4C,YAAa,MAEZyD,EAAO,CACXC,SAAUtG,KAAKoC,KAAKU,IAAI,YAAY7B,MACpCsB,SAAUvC,KAAKoC,KAAKU,IAAI,YAAY7B,MACpCsF,aAAcvG,KAAKoC,KAAKU,IAAI,SAAS7B,MACrCuF,QAAS,WAGXxG,KAAK0F,eACFR,SAASmB,GACTtD,KACC0D,EAAAA,WAAS,WAAO,OAAA/D,EAAKb,YAAYgB,MAAMwD,EAAQC,SAAUD,EAAQ9D,aACjES,EAAAA,YAAU,SAACC,GAOT,OANAP,EAAKd,eAAeV,MAClBgC,GAAG,WAAO,OAAAD,EAAI/B,MAAMiC,sBAClBD,GAAG,WAAO,OAAAD,EAAI/B,MAAMA,MAAMkC,UAAS,mCACrC,QACA,CAAEC,KAAM,MAEHC,EAAAA,WAAWL,MAEpBM,EAAAA,UAAQ,WAAO,OAACb,EAAKE,YAAa,MAEnCY,kCAtGNG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAA,4iEAfOC,EAAAA,mBAQAY,SALAX,EAAAA,oBADAC,EAAAA,aAJAC,EAAAA,sBADqDC,EAAAA,eAwH9DsB,EAxGA,GChBA,IAAAiB,EAqBc,CACJC,qBAAoB,CAClBR,IAAK,yBACLS,iBAAkBpF,IAErBqF,EAKK,CACJF,qBAAoB,CAClBR,IAAK,4BACLS,iBAAkBnB,IAErBqB,EAMK,CACJH,qBAAoB,CAClBR,IAAK,iCACLS,iBAAkBxC,IAjCxB2C,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UAAW,OAAQC,WAAY,SAC3C,CACEF,KAAM,GACNG,UAAWC,EAAAA,uBACXC,SAAU,CACR,CACEL,KAAM,QACNG,UAAWG,EAAAA,mCACXC,KAAIb,GAON,CACEM,KAAM,WACNG,UAAWG,EAAAA,mCACXC,KAAIV,GAON,CACEG,KAAM,iBACNG,UAAWG,EAAAA,mCACXE,YAAa,CAACC,EAAAA,WACdF,KAAIT,MAWZY,EAAA,WAAA,SAAAA,KAImC,2BAJlCC,EAAAA,SAAQ/D,KAAA,CAAC,CACRgE,QAAS,CAACC,EAAAA,aAAaC,SAASf,IAChCgB,QAAS,CAACF,EAAAA,kBAEuBH,EAJnC,GC3CQnG,EAAAA,EAAAA,WAAAA,UAAWD,EAAAA,EAAAA,WAAAA,SAAUH,EAAAA,EAAAA,WAAAA,UAEvB6G,EAAkB,CAAC,cAAe,qBAExCC,EAAA,WAiBE,SAAAA,EACUxG,EACAE,EACAC,GAFA5B,KAAAyB,GAAAA,EACAzB,KAAA2B,MAAAA,EACA3B,KAAA4B,eAAAA,EATV5B,KAAAkI,YAAW,SAA4BC,EAAQC,EAAaC,GAC1D,OAAIL,EAAgBM,QAAQD,EAAQE,MAAQ,EAAUJ,EAE/CA,EAAOK,OAAOJ,EAAYK,QAAM,SAAEC,GAAY,MAAQ,qBAAlBA,EAAAvC,SAiG/C,OAxFE8B,EAAArI,UAAAmC,SAAA,eACQ4D,EAAwC3F,KAAK2B,MAAMK,eACvDC,EAAAA,YAAY2D,YAAY,sBAEpBC,EAAgB,GAClBC,EAAiB,EAE6D,UAA7EH,EAAc,uCAAyC,IAAIxD,eAC9D0D,EAAiB7E,KAAK,UAG8D,UAAjF2E,EAAc,2CAA6C,IAAIxD,eAClE0D,EAAiB7E,KAAK,SAG8D,UAAjF2E,EAAc,2CAA6C,IAAIxD,eAClE0D,EAAiB7E,KAAK,aAGlB2E,EAAc,8CAAgD,GAAK,GACvEE,EAAiB7E,KAAK,WAGpB+E,OAAOC,WAAWL,EAAc,2CAClCG,GAAkBH,EAAc,yCAGlC3F,KAAKoC,KAAOpC,KAAKyB,GAAGY,MAClB,CACEE,SAAU,CAAC,GAAIjB,GACfqH,YAAa,CACX,GACA,CACEC,WAAY,CACVtH,EACA2E,EAAAA,iBAAiBJ,GACjBtE,EAAUuE,GACV3E,EAAU,QAIhB0H,kBAAmB,CACjB,GACA,CACED,WAAY,CACVtH,EACA2E,EAAAA,iBAAiBJ,GACjBtE,EAAUuE,GACV3E,EAAU,SAKlB,CACEyH,WAAY,CAACE,EAAAA,iBAAiBd,OAKpCC,EAAArI,UAAA6C,SAAA,WAAA,IAAAC,EAAA1C,KACMA,KAAKoC,KAAKO,UACd3C,KAAK4C,YAAa,EAClB5C,KAAK2B,MACF8B,SACC,IAAIsF,EAAAA,eAAe,CACjBC,gBAAiBhJ,KAAKoC,KAAKU,IAAI,YAAY7B,MAC3C0H,YAAa3I,KAAKoC,KAAKU,IAAI,eAAe7B,SAG7C8B,KAAKQ,EAAAA,UAAQ,WAAO,OAACb,EAAKE,YAAa,MACvCY,UAAU,CACT1C,KAAI,WACF4B,EAAKN,KAAK6G,QACVvG,EAAKd,eAAesH,QAAQ,qCAAsC,UAAW,CAC3E7F,KAAM,OAGVnC,MAAK,SAAE+B,GACLP,EAAKd,eAAeV,MAClBgC,GAAG,WAAO,OAAAD,EAAI/B,MAAMA,MAAMkC,UAAS,mCACnC,QACA,CACEC,KAAM,+BAzGnBM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,2BACVC,SAAA,w/CACAqF,SAAU,qEAdHpF,EAAAA,mBAEAE,EAAAA,aAJAC,EAAAA,kBA4HT+D,EA/GA,GCLQ,IAAA9G,EAAAA,EAAAA,WAAAA,UAAWG,EAAAA,EAAAA,WAAAA,SAAUkE,EAAAA,EAAAA,WAAAA,MAE7B4D,EAAA,WAiBE,SAAAA,EACU3H,EACAE,EACAC,GAFA5B,KAAAyB,GAAAA,EACAzB,KAAA2B,MAAAA,EACA3B,KAAA4B,eAAAA,EAgCZ,OA7BEwH,EAAAxJ,UAAAmC,SAAA,WACE/B,KAAKqJ,aAGPD,EAAAxJ,UAAAyJ,UAAA,WAAA,IAAA3G,EAAA1C,KACEA,KAAK2B,MACF8B,SAAS,IAAI6F,EAAAA,YACbvG,KAAKwG,EAAAA,eAAevJ,KAAKwJ,UAAWC,EAAAA,KAAK,IACzCjG,WAAS,SAAEkF,OAAGgB,EAAHpJ,EAAAoI,EAAA,GAAG,GACbhG,EAAKN,KAAOM,EAAKjB,GAAGY,MAAM,CACxBiE,SAAU,CAACoD,EAAQpD,SAAU,CAAChF,EAAUH,EAAU,OAClDqE,MAAO,CAACkE,EAAQlE,MAAO,CAAClE,EAAUkE,EAAOrE,EAAU,OACnDoH,KAAM,CAACmB,EAAQnB,MAAQ,GAAI,CAACpH,EAAU,MACtCwI,QAAS,CAACD,EAAQC,SAAW,GAAI,CAACxI,EAAU,MAC5CyI,YAAa,CAACF,EAAQE,aAAe,GAAI,CAACzI,EAAU,YAK5DiI,EAAAxJ,UAAAiK,OAAA,WAAA,IAAAnH,EAAA1C,KACMA,KAAKoC,KAAKO,UACd3C,KAAK4C,YAAa,EAClB5C,KAAK2B,MACF8B,SAAS,IAAIqG,EAAAA,cAAc9J,KAAKoC,KAAKnB,QACrC8B,KAAKQ,EAAAA,UAAQ,WAAO,OAACb,EAAKE,YAAa,MACvCY,WAAS,WACRd,EAAKd,eAAesH,QAAQ,oCAAqC,UAAW,CAAE7F,KAAM,+BAjD3FM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6BACVC,SAAA,8zDACAqF,SAAU,uEAZHpF,EAAAA,mBACQE,EAAAA,aAGRC,EAAAA,kBP8CF,SAAoB6F,EAAYC,EAAQ7D,EAAK8D,GAChD,IAA2HC,EAAvHC,EAAI1K,UAAUC,OAAQiB,EAAIwJ,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAO9K,OAAOiL,yBAAyBJ,EAAQ7D,GAAO8D,EACrH,GAAuB,iBAAZ7J,SAAoD,mBAArBA,QAAQiK,SAAyB1J,EAAIP,QAAQiK,SAASN,EAAYC,EAAQ7D,EAAK8D,QACpH,IAAK,IAAI1K,EAAIwK,EAAWrK,OAAS,EAAGH,GAAK,EAAGA,KAAS2K,EAAIH,EAAWxK,MAAIoB,GAAKwJ,EAAI,EAAID,EAAEvJ,GAAKwJ,EAAI,EAAID,EAAEF,EAAQ7D,EAAKxF,GAAKuJ,EAAEF,EAAQ7D,KAASxF,GACzIwJ,EAAI,GAAKxJ,GAAKxB,OAAOmL,eAAeN,EAAQ7D,EAAKxF,GOlC1D4J,CAAAA,CADCC,EAAAA,OAAOC,EAAAA,aAAaC,4BACXC,EAAAA,4CAyCZvB,EApDA,GCXA,IAAAwB,EAAA,WAwBE,SAAAA,EACUjJ,EACAC,EACA8D,GAFA1F,KAAA2B,MAAAA,EACA3B,KAAA4B,eAAAA,EACA5B,KAAA0F,eAAAA,EAXV1F,KAAA6K,OAAM,GAiER,OAnDED,EAAAhL,UAAAmC,SAAA,WACE/B,KAAK6K,OAAS7K,KAAK2B,MAAMK,eAAe8I,EAAAA,aAAaC,YAAU,GAC/D/K,KAAK8E,WAAa9E,KAAK6K,OAAOtC,MAAQ,IAGxCqC,EAAAhL,UAAAoL,SAAA,WACEhL,KAAKiL,gBAAiB,GAGxBL,EAAAhL,UAAAsL,KAAA,WAAA,IAAAxI,EAAA1C,KACMA,KAAK6K,OAAOtC,OAASvI,KAAK4C,YAC5B5C,KAAK4C,YAAa,EAClB5C,KAAK0F,eACFb,WAAW7E,KAAK6K,OAAOtC,MACvBxF,KACCQ,EAAAA,UAAQ,WAAO,OAACb,EAAKE,YAAa,KAClC6G,EAAAA,KAAK,GACLzG,EAAAA,YAAU,SAACC,GAKT,OAJAP,EAAKd,eAAeV,MAClBgC,GAAG,WAAO,OAAAD,EAAI/B,MAAMiC,oBAAmB,8BACvC,gBAEKG,EAAAA,WAAWL,OAGrBO,WAAS,SAAEkF,OAAEQ,EAAAR,EAAAQ,QAASiC,EAAAzC,EAAAyC,SACjBjC,GACFxG,EAAKmI,OAAS,CACZO,GAAID,EACJ5C,KAAM7F,EAAKmI,OAAOtC,MAEpB7F,EAAKoC,WAAapC,EAAKmI,OAAOtC,KAC9B7F,EAAKuI,gBAAiB,IAEtBvI,EAAKd,eAAeV,MAClB,+CACA,eACA,CACEmK,0BAA2B,CAAC3I,EAAKmI,OAAOtC,QAG5C7F,EAAKmI,OAAM,IAEbnI,EAAKf,MAAM8B,SAAS,IAAI6H,EAAAA,UAAUpC,EAAUxG,EAAKmI,OAAS,YAG9D7K,KAAK2B,MAAM8B,SAAS,IAAI6H,EAAAA,UAAU,OAClCtL,KAAK8E,WAAa,KAClB9E,KAAKiL,gBAAiB,wBApE3BtH,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAA,s8DATOG,EAAAA,aAFAC,EAAAA,sBAMAS,KA0ETiG,EAjFA,GCAA,IAAAW,EAAA,WAwBE,SAAAA,EAAoB5J,GAAA3B,KAAA2B,MAAAA,EAFpB3B,KAAAwL,kBAAmB,EAgBrB,OAZED,EAAA3L,UAAAmC,SAAA,WAAA,IAAAW,EAAA1C,KACEA,KAAK2B,MACF8J,OAAOxJ,EAAAA,YAAYC,WAAW,iCAC9Ba,KAAK2I,EAAAA,iBAAiB1L,OACtBwD,WAAS,SAACvC,GACLA,IACFyB,EAAK8I,iBAA2C,UAAxBvK,EAAMkB,mBAKtCoJ,EAAA3L,UAAA+L,YAAA,iCAhCDhI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAA,u6BACAqF,SAAU,8DANHlF,EAAAA,iDAcN2H,EAAAA,gCAGAA,EAAAA,SAmBHL,EAtCA,GCAA,IAAAM,EAAA,WAiBA,SAAAA,KAoB4B,2BApB3BlE,EAAAA,SAAQ/D,KAAA,CAAC,CACRkI,aAAc,CACZP,EACA/J,EACAiE,EACAmF,EACA3C,EACA7D,EACAgF,GAEFxB,QAAS,CACPmE,EAAAA,WACArE,EACAsE,EAAAA,kBACAC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,uBAEFpE,QAAS,OAEiB8D,EArC5B,GCUA,ICRiBO,EDQJC,EAAkB,IAAIC,EAAAA,eAAe,oBCRlD,SAAiBF,GACf,SAAAG,kEAMA,wCACA,yCACA,+CACA,gDACA,6CACA,8CACA,aAbF,CAAiBH,IAAAA,EAAO,oODCxB,SAA+BI,GAC7B,OAAAtN,EAAA,CACEuN,YAAa,KACVD","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AuthService, SetRemember, ConfigState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n      (\r\n        (this.store.selectSnapshot(\r\n          ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n        ) as string) || ''\r\n      ).toLowerCase() !== 'false';\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(128)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n    this.authService\r\n      .login(this.form.get('username').value, this.form.get('password').value)\r\n      .pipe(\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe(() => {\r\n        this.store.dispatch(new SetRemember(this.form.get('remember').value));\r\n      });\r\n  }\r\n}\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n})\r\nexport class ManageProfileComponent {\r\n  selectedTab = 0;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request);\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, { skipHandleError: true });\r\n  }\r\n}\r\n","import { ConfigState, GetAppConfiguration, ABP, SessionState, AuthService } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nconst { maxLength, minLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n      (\r\n        this.store.selectSnapshot(\r\n          ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n        ) || ''\r\n      ).toLowerCase() !== 'false';\r\n    if (!this.isSelfRegistrationEnabled) {\r\n      this.toasterService.warn(\r\n        {\r\n          key: 'AbpAccount::SelfRegistrationDisabledMessage',\r\n          defaultValue: 'Self registration is disabled.',\r\n        },\r\n        null,\r\n        { life: 10000 },\r\n      );\r\n      return;\r\n    }\r\n\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: [\r\n        '',\r\n        [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(128)],\r\n      ],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() => this.authService.login(newUser.userName, newUser.password)),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import {\r\n  DynamicLayoutComponent,\r\n  AuthGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.LoginComponent',\r\n            defaultComponent: LoginComponent,\r\n          } as ReplaceableComponents.RouteData<LoginComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.RegisterComponent',\r\n            defaultComponent: RegisterComponent,\r\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: 'Account.ManageProfileComponent',\r\n            defaultComponent: ManageProfileComponent,\r\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { ChangePassword, ConfigState, ABP } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { comparePasswords, Validation, PasswordRules, validatePassword } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { minLength, required, maxLength } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n  exportAs: 'abpChangePasswordForm',\r\n})\r\nexport class ChangePasswordComponent\r\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(control.name) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n    const passwordRulesArr = [] as PasswordRules;\r\n    let requiredLength = 1;\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [\r\n              required,\r\n              validatePassword(passwordRulesArr),\r\n              minLength(requiredLength),\r\n              maxLength(128),\r\n            ],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          {\r\n            validators: [\r\n              required,\r\n              validatePassword(passwordRulesArr),\r\n              minLength(requiredLength),\r\n              maxLength(128),\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          currentPassword: this.form.get('password').value,\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', 'Success', {\r\n            life: 5000,\r\n          });\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            {\r\n              life: 7000,\r\n            },\r\n          );\r\n        },\r\n      });\r\n  }\r\n}\r\n","import { GetProfile, Profile, ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take, withLatestFrom, finalize } from 'rxjs/operators';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n  exportAs: 'abpPersonalSettingsForm',\r\n})\r\nexport class PersonalSettingsComponent\r\n  implements\r\n    OnInit,\r\n    Account.PersonalSettingsComponentInputs,\r\n    Account.PersonalSettingsComponentOutputs {\r\n  @Select(ProfileState.getProfile)\r\n  profile$: Observable<Profile.Response>;\r\n\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.store\r\n      .dispatch(new GetProfile())\r\n      .pipe(withLatestFrom(this.profile$), take(1))\r\n      .subscribe(([, profile]) => {\r\n        this.form = this.fb.group({\r\n          userName: [profile.userName, [required, maxLength(256)]],\r\n          email: [profile.email, [required, email, maxLength(256)]],\r\n          name: [profile.name || '', [maxLength(64)]],\r\n          surname: [profile.surname || '', [maxLength(64)]],\r\n          phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n        });\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, take, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent\r\n  implements OnInit, Account.TenantBoxComponentInputs, Account.TenantBoxComponentOutputs {\r\n  tenant = {} as ABP.BasicItem;\r\n\r\n  tenantName: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private accountService: AccountService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tenant = this.store.selectSnapshot(SessionState.getTenant) || ({} as ABP.BasicItem);\r\n    this.tenantName = this.tenant.name || '';\r\n  }\r\n\r\n  onSwitch() {\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (this.tenant.name && !this.inProgress) {\r\n      this.inProgress = true;\r\n      this.accountService\r\n        .findTenant(this.tenant.name)\r\n        .pipe(\r\n          finalize(() => (this.inProgress = false)),\r\n          take(1),\r\n          catchError(err => {\r\n            this.toasterService.error(\r\n              snq(() => err.error.error_description, 'AbpUi::DefaultErrorMessage'),\r\n              'AbpUi::Error',\r\n            );\r\n            return throwError(err);\r\n          }),\r\n        )\r\n        .subscribe(({ success, tenantId }) => {\r\n          if (success) {\r\n            this.tenant = {\r\n              id: tenantId,\r\n              name: this.tenant.name,\r\n            };\r\n            this.tenantName = this.tenant.name;\r\n            this.isModalVisible = false;\r\n          } else {\r\n            this.toasterService.error(\r\n              'AbpUiMultiTenancy::GivenTenantIsNotAvailable',\r\n              'AbpUi::Error',\r\n              {\r\n                messageLocalizationParams: [this.tenant.name],\r\n              },\r\n            );\r\n            this.tenant = {} as ABP.BasicItem;\r\n          }\r\n          this.store.dispatch(new SetTenant(success ? this.tenant : null));\r\n        });\r\n    } else {\r\n      this.store.dispatch(new SetTenant(null));\r\n      this.tenantName = null;\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n}\r\n","import { ConfigState, takeUntilDestroy } from '@abp/ng.core';\r\nimport { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  exportAs: 'abpAuthWrapper',\r\n})\r\nexport class AuthWrapperComponent\r\n  implements\r\n    Account.AuthWrapperComponentInputs,\r\n    Account.AuthWrapperComponentOutputs,\r\n    OnInit,\r\n    OnDestroy {\r\n  @Input()\r\n  readonly mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  readonly cancelContentRef: TemplateRef<any>;\r\n\r\n  enableLocalLogin = true;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ConfigState.getSetting('Abp.Account.EnableLocalLogin'))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(value => {\r\n        if (value) {\r\n          this.enableLocalLogin = value.toLowerCase() !== 'false';\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { TableModule } from 'primeng/table';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS, optionsFactory } from './tokens/options.token';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    AccountRoutingModule,\r\n    ThemeSharedModule,\r\n    TableModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AccountModule {}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport function optionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\r\n","import { TemplateRef } from '@angular/core';\r\n\r\nexport namespace Account {\r\n  export interface AuthWrapperComponentInputs {\r\n    readonly mainContentRef: TemplateRef<any>;\r\n    readonly cancelContentRef?: TemplateRef<any>;\r\n  }\r\n\r\n  //tslint:disable\r\n  export interface AuthWrapperComponentOutputs {}\r\n  export interface TenantBoxComponentInputs {}\r\n  export interface TenantBoxComponentOutputs {}\r\n  export interface PersonalSettingsComponentInputs {}\r\n  export interface PersonalSettingsComponentOutputs {}\r\n  export interface ChangePasswordComponentInputs {}\r\n  export interface ChangePasswordComponentOutputs {}\r\n  // tslint:enable\r\n}\r\n"]}