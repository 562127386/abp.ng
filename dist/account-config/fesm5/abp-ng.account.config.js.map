{"version":3,"file":"abp-ng.account.config.js","sources":["ng://@abp/ng.account.config/lib/services/account-config.service.ts","ng://@abp/ng.account.config/lib/account-config.module.ts"],"sourcesContent":["import { addAbpRoutes, eLayoutType } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { eAccountRouteNames } from '@abp/ng.account';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountConfigService {\r\n  constructor() {\r\n    addAbpRoutes({\r\n      name: eAccountRouteNames.Account,\r\n      path: 'account',\r\n      invisible: true,\r\n      layout: eLayoutType.application,\r\n      children: [\r\n        { path: 'login', name: eAccountRouteNames.Login, order: 1 },\r\n        { path: 'register', name: eAccountRouteNames.Register, order: 2 },\r\n        { path: 'manage-profile', name: eAccountRouteNames.ManageProfile, order: 3 },\r\n      ],\r\n    });\r\n  }\r\n}\r\n","import { CoreModule, noop } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { APP_INITIALIZER, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { AccountConfigService } from './services/account-config.service';\r\n\r\nexport interface AccountConfigOptions {\r\n  redirectUrl?: string;\r\n}\r\n\r\nexport function accountOptionsFactory(options: AccountConfigOptions) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\r\n\r\n@NgModule({\r\n  imports: [CoreModule, ThemeSharedModule],\r\n  providers: [{ provide: APP_INITIALIZER, multi: true, deps: [AccountConfigService], useFactory: noop }],\r\n})\r\nexport class AccountConfigModule {\r\n  static forRoot(options = {} as AccountConfigOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: AccountConfigModule,\r\n      providers: [\r\n        { provide: ACCOUNT_OPTIONS, useValue: options },\r\n        {\r\n          provide: 'ACCOUNT_OPTIONS',\r\n          useFactory: accountOptionsFactory,\r\n          deps: [ACCOUNT_OPTIONS],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;IAQE;QACE,YAAY,CAAC;YACX,IAAI;YACJ,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,IAAI;YACf,MAAM;YACN,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,mCAA4B,KAAK,EAAE,CAAC,EAAE;gBAC3D,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,yCAA+B,KAAK,EAAE,CAAC,EAAE;gBACjE,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,uDAAoC,KAAK,EAAE,CAAC,EAAE;aAC7E;SACF,CAAC,CAAC;KACJ;;gBAhBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;+BAND;CAIA;;;;;;;;;;ACCA,mCAEC;;;IADC,2CAAqB;;;;;;AAGvB,SAAgB,qBAAqB,CAAC,OAA6B;IACjE,kBACE,WAAW,EAAE,GAAG,IACb,OAAO,EACV;CACH;;AAED,IAAa,eAAe,GAAG,IAAI,cAAc,CAAC,iBAAiB,CAAC;SAI6B,IAAI;AAFrG;IAAA;KAkBC;;;;;IAbQ,2BAAO;;;;IAAd,UAAe,OAAoC;QAApC,wBAAA,EAAA,6BAAU,EAAE,EAAwB;QACjD,OAAO;YACL,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE;gBAC/C;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,UAAU,EAAE,qBAAqB;oBACjC,IAAI,EAAE,CAAC,eAAe,CAAC;iBACxB;aACF;SACF,CAAC;KACH;;gBAjBF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,UAAU,EAAE,iBAAiB,CAAC;oBACxC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,oBAAoB,CAAC,EAAE,UAAU,IAAM,EAAE,CAAC;iBACvG;;IAeD,0BAAC;CAlBD;;;;;;;;;;;;;;;;"}