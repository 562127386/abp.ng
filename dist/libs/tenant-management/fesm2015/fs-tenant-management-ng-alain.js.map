{"version":3,"file":"fs-tenant-management-ng-alain.js","sources":["../../../../libs/tenant-management/ng-alain/src/lib/components/tenants/tenants.component.html","../../../../libs/tenant-management/ng-alain/src/lib/components/tenants/tenants.component.ts","../../../../libs/tenant-management/ng-alain/src/lib/tenant-management-ng-alain.module.ts","../../../../libs/tenant-management/ng-alain/src/fs-tenant-management-ng-alain.ts"],"sourcesContent":["<nz-card [nzBordered]=\"false\">\r\n  <!-- <form nz-form [nzLayout]=\"'inline'\" class=\"search__form\"> -->\r\n  <div nz-row [nzGutter]=\"{ xs: 8, sm: 8, md: 8, lg: 24, xl: 48, xxl: 48 }\">\r\n    <div nz-col nzMd=\"8\" nzSm=\"24\">\r\n      <nz-form-item>\r\n        <nz-form-label nzFor=\"no\">{{'AbpIdentity::PagerSearch' | abpLocalization }}</nz-form-label>\r\n        <nz-form-control>\r\n          <input nz-input type=\"search\" [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\" [(ngModel)]=\"list.filter\" />\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </div>\r\n  </div>\r\n  <!-- </form> -->\r\n  <button nz-button [abpPermission]=\"'AbpTenantManagement.Tenants.Create'\" (click)=\"addTenant()\" [nzType]=\"'primary'\">\r\n    <i nz-icon nzType=\"plus\"></i>\r\n    <span>{{ 'AbpTenantManagement::NewTenant' | abpLocalization }}</span>\r\n  </button>\r\n  <div class=\"my-md\"></div>\r\n  <nz-table #basicTable [nzData]=\"data$ | async\" [nzPageSize]=\"list.maxResultCount\" [nzTotal]=\"totalCount$ | async\"\r\n    [nzLoading]=\"list.isLoading$ | async\" [nzFrontPagination]=\"false\" (nzPageIndexChange)=\"list.page=$event-1;\">\r\n    <thead>\r\n      <tr>\r\n        <th>{{ 'AbpTenantManagement::DisplayName:TenantName' | abpLocalization }}</th>\r\n        <th>{{ 'AbpTenantManagement::Actions' | abpLocalization }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let data of basicTable.data\">\r\n        <td>{{ data.name }}</td>\r\n        <td>\r\n          <a nz-dropdown [nzDropdownMenu]=\"opMenu\">\r\n            {{ 'AbpTenantManagement::Actions' | abpLocalization }}\r\n            <i nz-icon nzType=\"down\"></i>\r\n          </a>\r\n          <nz-dropdown-menu #opMenu=\"nzDropdownMenu\">\r\n            <ul nz-menu>\r\n              <li nz-menu-item *abpPermission=\"'AbpTenantManagement.Tenants.Update'\" (click)=\"editTenant(data.id)\">\r\n                {{ 'AbpTenantManagement::Edit' | abpLocalization }}</li>\r\n              <li nz-menu-item *abpPermission=\"'AbpTenantManagement.Tenants.ManageConnectionStrings'\"\r\n                (click)=\"onEditConnectionString(data.id)\">\r\n                {{ 'AbpTenantManagement::Permission:ManageConnectionStrings' | abpLocalization }}</li>\r\n              <li nz-menu-item *abpPermission=\"'AbpTenantManagement.Tenants.ManageFeatures'\"\r\n                (click)=\"openFeaturesModal(data.id)\">\r\n                {{ 'AbpTenantManagement::Permission:ManageFeatures' | abpLocalization }}</li>\r\n              <li nz-menu-item *abpPermission=\"'AbpTenantManagement.Tenants.Delete'\"\r\n                (click)=\"delete(data.id, data.name)\">{{ 'AbpTenantManagement::Delete' | abpLocalization }}</li>\r\n            </ul>\r\n          </nz-dropdown-menu>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </nz-table>\r\n</nz-card>\r\n\r\n<nz-modal [(nzVisible)]=\"isModalVisible\" [nzTitle]=\"modalTitle\" [nzContent]=\"modalContent\" [nzFooter]=\"modalFooter\"\r\n  (nzOnCancel)=\"isModalVisible=false\">\r\n  <ng-template #modalTitle>\r\n    {{ selectedModalContent.title | abpLocalization }}\r\n  </ng-template>\r\n\r\n  <ng-template #modalContent>\r\n    <ng-container *ngTemplateOutlet=\"selectedModalContent?.template\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType=\"default\" (click)=\"isModalVisible=false\">\r\n      {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\r\n    </button>\r\n    <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"list.isLoading$ | async\">\r\n      {{\r\n      'AbpIdentity::Save' | abpLocalization\r\n      }}\r\n    </button>\r\n  </ng-template>\r\n</nz-modal>\r\n\r\n\r\n\r\n<ng-template #tenantModalTemplate>\r\n  <form nz-form [formGroup]=\"tenantForm\" (ngSubmit)=\"save()\" [nzLayout]=\"'vertical'\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSm]=\"24\" [nzXs]=\"24\" nzRequired nzFor=\"role-name\">\r\n        {{ 'AbpTenantManagement::TenantName' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]=\"24\" [nzXs]=\"24\">\r\n        <input nz-input formControlName=\"name\" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item *ngIf=\"tenantForm.controls.adminEmailAddress\">\r\n      <nz-form-label [nzSm]=\"24\" [nzXs]=\"24\" nzRequired nzFor=\"role-adminEmailAddress\">\r\n        {{ 'AbpTenantManagement::DisplayName:AdminEmailAddress' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]=\"24\" [nzXs]=\"24\">\r\n        <input nz-input formControlName=\"adminEmailAddress\" type=\"email\" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item *ngIf=\"tenantForm.controls.adminPassword\">\r\n      <nz-form-label [nzSm]=\"24\" [nzXs]=\"24\" nzRequired nzFor=\"role-adminPassword\">\r\n        {{ 'AbpTenantManagement::DisplayName:AdminPassword' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]=\"24\" [nzXs]=\"24\">\r\n        <input nz-input formControlName=\"adminPassword\" type=\"password\" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #connectionStringModalTemplate>\r\n  <form nz-form [nzLayout]=\"'vertical'\" [formGroup]=\"defaultConnectionStringForm\" (ngSubmit)=\"save()\">\r\n    <nz-form-item>\r\n      <nz-form-control [nzSpan]=\"14\" [nzOffset]=\"6\">\r\n        <label nz-checkbox formControlName=\"useSharedDatabase\">\r\n          <span>\r\n            {{\r\n                  'AbpTenantManagement::DisplayName:UseSharedDatabase' | abpLocalization\r\n            }}\r\n          </span>\r\n        </label>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item *ngIf=\"!useSharedDatabase\">\r\n      <nz-form-label [nzSm]=\"24\" [nzXs]=\"24\" nzRequired nzFor=\"defaultConnectionString\">\r\n        {{ 'AbpTenantManagement::DisplayName:DefaultConnectionString' | abpLocalization }}</nz-form-label>\r\n      <nz-form-control [nzSm]=\"24\" [nzXs]=\"24\">\r\n        <input nz-input formControlName=\"defaultConnectionString\" id=\"defaultConnectionString\" />\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-alain-feature-management [(visible)]=\"visibleFeatures\" providerName=\"T\" [providerKey]=\"providerKey\">\r\n</ng-alain-feature-management>","import { TenantManagementService, TenantsComponent as AbpTenantsComponent } from '@abp/ng.tenant-management';\r\nimport { ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { ListService } from '@abp/ng.core';\r\n\r\n@Component({\r\n    selector: 'ng-alain-tenants',\r\n    templateUrl: './tenants.component.html',\r\n    providers: [ListService]\r\n})\r\nexport class TenantsComponent extends AbpTenantsComponent implements OnInit {\r\n    constructor(\r\n        private _list: ListService,\r\n        private _confirmationService: ConfirmationService,\r\n        private _tenantService: TenantManagementService,\r\n        private _fb: FormBuilder,\r\n        private _store: Store\r\n    ) {\r\n        super(_list, _confirmationService, _tenantService, _fb, _store);\r\n    }\r\n}\r\n","import { TenantManagementWrapModule } from '@fs/tenant-management/wrap';\r\nimport { AddReplaceableComponent, LazyModuleFactory, CoreModule } from '@abp/ng.core';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NgModuleFactory } from '@angular/core';\r\nimport { NgAlainBasicModule } from '@fs/ng-alain/basic';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { FeatureManagementNgAlainModule } from '@fs/feature-management/ng-alain';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  entryComponents: [TenantsComponent],\r\n  exports: [TenantsComponent],\r\n  imports: [\r\n    NgAlainBasicModule,\r\n    FeatureManagementNgAlainModule,\r\n    TenantManagementWrapModule\r\n  ]\r\n})\r\nexport class TenantManagementNgAlainModule {\r\n  static forChild(): ModuleWithProviders<TenantManagementNgAlainModule> {\r\n    return {\r\n      ngModule: TenantManagementNgAlainModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<TenantManagementNgAlainModule> {\r\n    return new LazyModuleFactory(TenantManagementNgAlainModule.forChild());\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementContainer","AbpTenantsComponent"],"mappings":"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"}