{"version":3,"file":"fs-feature-management-ng-alain.js","sources":["../../../../libs/feature-management/ng-alain/src/lib/components/feature-management/feature-management.component.html","../../../../libs/feature-management/ng-alain/src/lib/components/feature-management/feature-management.component.ts","../../../../libs/feature-management/ng-alain/src/lib/feature-management-ng-alain.module.ts","../../../../libs/feature-management/ng-alain/src/fs-feature-management-ng-alain.ts"],"sourcesContent":["<nz-modal [(nzVisible)]=\"visible\"\r\n          [nzTitle]=\"modalTitle\"\r\n          [nzContent]=\"modalContent\"\r\n          [nzFooter]=\"modalFooter\"\r\n          (nzOnCancel)=\"visible=false\"\r\n>\r\n  <ng-template #modalTitle>\r\n    <h3>{{ 'AbpTenantManagement::Permission:ManageFeatures' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #modalContent>\r\n    <ng-template #loaderRef>\r\n      <div class=\"text-center\"><i class=\"fa fa-pulse fa-spinner\"></i></div>\r\n    </ng-template>\r\n\r\n    <form nz-form *ngIf=\"form; else loaderRef\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n\r\n\r\n      <div class=\"row my-3\"\r\n           *ngFor=\"let feature of features$ | async; let i = index\"\r\n           [ngSwitch]=\"feature.valueType.name\">\r\n        <div class=\"col-4\">{{ feature.name }}</div>\r\n        <div class=\"col-8\" *ngSwitchCase=\"'ToggleStringValueType'\">\r\n          <input type=\"checkbox\" name=\"feature.name\" [formControlName]=\"i\" />\r\n        </div>\r\n        <div class=\"col-8\" *ngSwitchCase=\"'FreeTextStringValueType'\">\r\n          <input type=\"text\" name=\"feature.name\" [formControlName]=\"i\" />\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType=\"default\" (click)=\"visible=false\">\r\n      {{ 'AbpFeatureManagement::Cancel' | abpLocalization }}\r\n    </button>\r\n    <button nz-button nzType=\"primary\" (click)=\"save()\">\r\n      {{\r\n      'AbpFeatureManagement::Save' | abpLocalization\r\n      }}\r\n    </button>\r\n  </ng-template>\r\n</nz-modal>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { FeatureManagementComponent as AbpFeatureManagementComponent } from '@abp/ng.feature-management';\r\n@Component({\r\n  selector: 'ng-alain-feature-management',\r\n  templateUrl: './feature-management.component.html'\r\n})\r\nexport class FeatureManagementComponent extends AbpFeatureManagementComponent {\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  @Input()\r\n  providerName: string;\r\n\r\n  protected _visible;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n\r\n    if (value) this.openModal();\r\n  }\r\n    \r\n  constructor(private _store: Store) {\r\n    super(_store);\r\n  }\r\n}\r\n","import { FeatureManagementWrapModule } from '@fs/feature-management/wrap';\r\nimport { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgAlainBasicModule } from '@fs/ng-alain/basic';\r\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\r\n\r\n@NgModule({\r\n    declarations: [FeatureManagementComponent],\r\n    imports: [\r\n        CoreModule,\r\n        NgAlainBasicModule,\r\n        FeatureManagementWrapModule\r\n    ],\r\n    exports: [FeatureManagementComponent]\r\n})\r\nexport class FeatureManagementNgAlainModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","AbpFeatureManagementComponent"],"mappings":";;;;;;;;;;;;;;;IAOIA,uBAAI;IAAAC,SAAwE;;IAAAC,cAAK;;IAA7EC,YAAwE;IAAxEC,sFAAwE;;;IAK1EJ,2BAAyB;IAAAK,oBAAsC;IAAAH,cAAM;;;IAUnEF,4BACE;IAAAK,yBACF;IAAAH,cAAM;;;IADuCC,YAAqB;IAArBG,oCAAqB;;;IAElEN,4BACE;IAAAK,yBACF;IAAAH,cAAM;;;IADmCC,YAAqB;IAArBG,oCAAqB;;;IARhEN,4BAGE;IAAAA,4BAAmB;IAAAC,SAAkB;IAAAC,cAAM;IAC3CK,oGACE;IAEFA,oGACE;IAEJL,cAAM;;;IARDI,kDAAmC;IACnBH,YAAkB;IAAlBC,mCAAkB;IAClBD,YAAuC;IAAvCG,mDAAuC;IAGvCH,YAAyC;IAAzCG,qDAAyC;;;;IAVhEN,4BAGE;IAH4DQ,sMAAmB;IAG/ED,6FAGE;;IAUJL,cAAO;;;IAhBoCI,oCAAkB;IAItDH,YAAwD;IAAxDG,0DAAwD;;;IAR/DC,oIACE;IAGFA,wFAGE;;;;IAHYJ,YAA4B;IAA5BG,+BAA4B,iBAAA;;;;IAoB1CN,+BACE;IADiCQ,0LAAiB,KAAK,IAAC;IACxDP,SACF;;IAAAC,cAAS;IACTF,+BACE;IADiCQ,0LAAgB;IACjDP,SAGF;;IAAAC,cAAS;;IANPC,YACF;IADEM,+EACF;IAEEN,YAGF;IAHEM,6EAGF;;MCnCS,0BAA2B,SAAQC,4BAA6B;IAqB3E,YAAoB,MAAa;QAC/B,KAAK,CAAC,MAAM,CAAC,CAAC;QADI,WAAM,GAAN,MAAM,CAAO;KAEhC;IAdD,IACI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,KAAK;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;KAC7B;;oGAnBU,0BAA0B;4DAA1B,0BAA0B;QDPvCV,gCAME;QANQQ,wJAAuB,oHAID,KAAK,IAJJ;QAM/BD,sHACE;QAGFA,sHACE;QAuBFA,sHACE;QASJL,cAAW;;;;;QA5CDI,oCAAuB,gBAAA,kBAAA,iBAAA;;+CCOpB,0BAA0B;cAJtC,SAAS;eAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,WAAW,EAAE,qCAAqC;aACnD;;kBAEE,KAAK;;kBAGL,KAAK;;kBAKL,KAAK;;;MCDK,8BAA8B;;+DAA9B,8BAA8B;wIAA9B,8BAA8B,kBAP9B;YACL,UAAU;YACV,kBAAkB;YAClB,2BAA2B;SAC9B;qFAGQ,8BAA8B,mBARxB,0BAA0B,aAErC,UAAU;QACV,kBAAkB;QAClB,2BAA2B,aAErB,0BAA0B;+CAE3B,8BAA8B;cAT1C,QAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,0BAA0B,CAAC;gBAC1C,OAAO,EAAE;oBACL,UAAU;oBACV,kBAAkB;oBAClB,2BAA2B;iBAC9B;gBACD,OAAO,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;ACdD;;;;;;"}