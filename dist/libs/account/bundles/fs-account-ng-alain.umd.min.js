!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@fs/account"),require("@abp/ng.core"),require("@angular/core"),require("@fs/ng-alain/basic"),require("@abp/ng.account"),require("@abp/ng.theme.shared"),require("@angular/forms"),require("@ngxs/store"),require("angular-oauth2-oidc"),require("@angular/animations")):"function"==typeof define&&define.amd?define("@fs/account/ng-alain",["exports","@fs/account","@abp/ng.core","@angular/core","@fs/ng-alain/basic","@abp/ng.account","@abp/ng.theme.shared","@angular/forms","@ngxs/store","angular-oauth2-oidc","@angular/animations"],e):e(((n=n||self).fs=n.fs||{},n.fs.account=n.fs.account||{},n.fs.account["ng-alain"]={}),n.fs.account,n.ng_core,n.ng.core,n.basic,n.ng_account,n.ng_theme_shared,n.ng.forms,n.store,n.angularOauth2Oidc,n.ng.animations)}(this,(function(n,e,r,t,o,a,i,l,p,m,c){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var s=function(n,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r])})(n,e)};function u(n,e){function r(){this.constructor=n}s(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var d=function(n){function e(e,r,t,o,a){return n.call(this,e,r,t,o,a)||this}return u(e,n),e.decorators=[{type:t.Component,args:[{selector:"ng-alain-login",template:'<ng-alain-auth-wrapper [mainContentRef]="mainContentRef">\r\n  <ng-template #mainContentRef>\r\n    <form nz-form [formGroup]="form" (ngSubmit)="onSubmit()" role="form">\r\n      <nz-tabset [nzAnimated]="false" class="tabs">\r\n        <nz-tab [nzTitle]="\'AbpAccount::Login\' | abpLocalization">\r\n          <nz-form-item>\r\n            <nz-form-control [nzErrorTip]="\'Please enter mobile number!\' | abpLocalization">\r\n              <nz-input-group nzSize="large" nzPrefixIcon="user">\r\n                <input nz-input formControlName="username" placeholder="{{\'AbpAccount::UserNameOrEmailAddress\' | abpLocalization}}" />\r\n              </nz-input-group>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-control [nzErrorTip]="\'Please enter password!\' | abpLocalization">\r\n              <nz-input-group nzSize="large" nzPrefixIcon="lock">\r\n                <input nz-input type="password" formControlName="password" placeholder="{{ \'AbpAccount::Password\' | abpLocalization }}" />\r\n              </nz-input-group>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n        </nz-tab>\r\n      </nz-tabset>\r\n      <nz-form-item>\r\n        <nz-col [nzSpan]="12">\r\n          <label nz-checkbox formControlName="remember">{{ \'AbpAccount::RememberMe\' | abpLocalization }}</label>\r\n        </nz-col>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <button nz-button type="submit" nzType="primary" nzSize="large" [nzLoading]="inProgress" nzBlock>\r\n          {{ \'AbpAccount::Login\' | abpLocalization }}\r\n        </button>\r\n      </nz-form-item>\r\n    </form>\r\n    <div class="other">\r\n      <a class="register" routerLink="/account/register">{{ \'AbpAccount::Register\' | abpLocalization }}</a>\r\n    </div>\r\n  </ng-template>\r\n</ng-alain-auth-wrapper>\r\n\r\n',styles:[":host{display:block;width:368px;margin:0 auto}:host ::ng-deep .ant-tabs .ant-tabs-bar{margin-bottom:24px;text-align:center;border-bottom:0}:host ::ng-deep .ant-tabs-tab{font-size:16px;line-height:24px}:host ::ng-deep .ant-input-affix-wrapper .ant-input:not(:first-child){padding-left:34px}:host ::ng-deep .icon{margin-left:16px;color:rgba(0,0,0,.2);font-size:24px;vertical-align:middle;cursor:pointer;transition:color .3s}:host ::ng-deep .icon:hover{color:#1890ff}:host ::ng-deep .other{margin-top:24px;line-height:22px;text-align:left}:host ::ng-deep .other nz-tooltip{vertical-align:middle}:host ::ng-deep .other .register{float:right}"]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:m.OAuthService},{type:p.Store},{type:i.ToasterService},{type:r.AuthService}]},e}(a.LoginComponent),f=function(n){function e(e,r,t,o,a,i){var l=n.call(this,e,r,t,o,a,i)||this;return l._fb=e,l._accountService=r,l._oauthService=t,l._store=o,l._toasterService=a,l._authService=i,l}return u(e,n),e.decorators=[{type:t.Component,args:[{selector:"fs-register",template:'<ng-alain-auth-wrapper [mainContentRef]="mainContentRef">\r\n  <ng-template #mainContentRef>\r\n    <h3>{{ \'AbpAccount::Register\' | abpLocalization }}</h3>\r\n    <form nz-form [formGroup]="form" (ngSubmit)="onSubmit()">\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize="large">\r\n            <input nz-input formControlName="username" placeholder="{{ \'AbpAccount::UserName\' | abpLocalization }}" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize="large">\r\n            <input nz-input formControlName="email" placeholder="{{ \'AbpAccount::EmailAddress\' | abpLocalization }}" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize="large">\r\n            <input nz-input type="password" formControlName="password" placeholder="{{ \'AbpAccount::Password\' | abpLocalization }}" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <button nz-button nzType="primary" nzSize="large" type="submit" [nzLoading]="inProgress" class="submit">\r\n          {{ \'AbpAccount::Register\' | abpLocalization }}\r\n        </button>\r\n        <a class="login" routerLink="/account/login">{{ \'AbpAccount::Login\' | abpLocalization }}</a>\r\n      </nz-form-item>\r\n    </form>\r\n  </ng-template>\r\n</ng-alain-auth-wrapper>\r\n\r\n',styles:[":host{display:block;width:368px;margin:0 auto}:host ::ng-deep h3{margin-bottom:20px;font-size:16px}:host ::ng-deep .submit{width:50%}:host ::ng-deep .login{float:right;line-height:40px}::ng-deep .register-password-cdk .error,::ng-deep .register-password-cdk .success,::ng-deep .register-password-cdk .warning{transition:color .3s}::ng-deep .register-password-cdk .success{color:#52c41a}::ng-deep .register-password-cdk .warning{color:#faad14}::ng-deep .register-password-cdk .error{color:#f5222d}::ng-deep .register-password-cdk .progress-pass>.progress .ant-progress-bg{background-color:#faad14}"]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:a.AccountService},{type:m.OAuthService},{type:p.Store},{type:i.ToasterService},{type:r.AuthService}]},e}(a.RegisterComponent);var z=function(){function n(){this.selectedTab=0}return n.decorators=[{type:t.Component,args:[{selector:"ng-alain-manage-profile",template:'<div class="row entry-row">\r\n  <div class="col-auto"></div>\r\n  <div id="breadcrumb" class="col-md-auto pl-md-0"></div>\r\n  <div class="col"></div>\r\n</div>\r\n<div class="main">\r\n  <div class="menu">\r\n    <ul nz-menu nzMode="inline">\r\n      <li nz-menu-item [nzSelected]="selectedTab === 0" (click)="selectedTab = 0">\r\n        {{\r\n            \'AbpUi::ChangePassword\' | abpLocalization\r\n        }}\r\n      </li>\r\n      <li nz-menu-item [nzSelected]="selectedTab === 1" (click)="selectedTab = 1">\r\n        {{\r\n            \'AbpAccount::PersonalSettings\' | abpLocalization\r\n        }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class="content">\r\n    <div class="title">{{ \'AbpAccount::ChangePassword\' | abpLocalization }}</div>\r\n    <ng-alain-change-password-form *ngIf="selectedTab === 0"></ng-alain-change-password-form>\r\n    <ng-alain-personal-settings-form *ngIf="selectedTab === 1"></ng-alain-personal-settings-form>\r\n  </div>\r\n\r\n</div>\r\n',animations:[c.trigger("fadeIn",[c.transition(":enter",c.useAnimation(i.fadeIn))])],styles:[":host{display:block;padding-top:24px}.main{display:flex;width:100%;padding-top:16px;padding-bottom:16px;overflow:auto;background-color:#fff}.menu{width:224px;border-right:1px solid #e8e8e8}.menu ::ng-deep .ant-menu-inline{border:none}.menu ::ng-deep .ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected{font-weight:700}.content{flex:1;padding:8px 40px}.content .title{margin-bottom:12px;color:rgba(0,0,0,.85);font-weight:500;font-size:20px;line-height:28px}.content ::ng-deep .ant-list-split .ant-list-item:last-child{border-bottom:1px solid #e8e8e8}.content ::ng-deep .ant-list-item{padding-top:14px;padding-bottom:14px}@media screen and (max-width:767px){.main{flex-direction:column}.main .menu{width:100%;border:none}.main .content{padding:40px}}"]}]}],n}();var g=function(n){function e(e,r,t){var o=n.call(this,e,r,t)||this;return o._fb=e,o._store=r,o._toasterService=t,o}return u(e,n),e.decorators=[{type:t.Component,args:[{selector:"ng-alain-personal-settings-form",template:'<form novalidate *ngIf="form" [formGroup]="form" (ngSubmit)="submit()">\r\n  <nz-form-item>\r\n    <nz-form-label nzRequired nzFor="username">{{ \'AbpIdentity::DisplayName:UserName\' | abpLocalization }}</nz-form-label>\r\n    <nz-form-control>\r\n      <input nz-input formControlName="userName" id="username" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzRequired nzFor="name">{{ \'AbpIdentity::DisplayName:Name\' | abpLocalization }}</nz-form-label>\r\n    <nz-form-control>\r\n      <input nz-input formControlName="name" id="name" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzRequired nzFor="surname">{{ \'AbpIdentity::DisplayName:Surname\' | abpLocalization }}</nz-form-label>\r\n    <nz-form-control>\r\n      <input nz-input formControlName="surname" id="surname" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzRequired nzFor="email-address">{{ \'AbpIdentity::DisplayName:Email\' | abpLocalization }}</nz-form-label>\r\n    <nz-form-control>\r\n      <input nz-input formControlName="email" id="email-address" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzRequired nzFor="phone-number">{{ \'AbpIdentity::DisplayName:PhoneNumber\' | abpLocalization }}</nz-form-label>\r\n    <nz-form-control>\r\n      <input nz-input formControlName="phoneNumber" id="phone-number" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <button nz-button nzType="primary">\r\n    {{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}\r\n  </button>\r\n</form>\r\n\r\n\r\n',styles:["nz-form-item{margin-bottom:0}"]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:p.Store},{type:i.ToasterService}]},e}(a.PersonalSettingsComponent);var b=function(n){function e(e,r,t){var o=n.call(this,e,r,t)||this;return o._fb=e,o._store=r,o._toasterService=t,o}return u(e,n),e.decorators=[{type:t.Component,args:[{selector:"ng-alain-change-password-form",template:'<form [formGroup]="form" (ngSubmit)="onSubmit()" [mapErrorsFn]="mapErrorsFn">\r\n  <nz-form-item>\r\n    \x3c!--<nz-form-label nzRequired nzFor="current-password">{{ \'AbpIdentity::DisplayName:CurrentPassword\' | abpLocalization }}</nz-form-label>--\x3e\r\n    <nz-form-control>\r\n      <input nz-input type="password" formControlName="password" id="current-password" placeholder="{{\'AbpIdentity::DisplayName:CurrentPassword\' | abpLocalization}}" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    \x3c!--<nz-form-label nzRequired nzFor="new-password">{{ \'AbpIdentity::DisplayName:NewPassword\' | abpLocalization }}</nz-form-label>--\x3e\r\n    <nz-form-control>\r\n      <input nz-input type="password" formControlName="newPassword" id="new-password" placeholder="{{ \'AbpIdentity::DisplayName:NewPassword\' | abpLocalization }}" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    \x3c!--<nz-form-label nzRequired nzFor="confirm-new-password">{{ \'AbpIdentity::DisplayName:NewPasswordConfirm\' | abpLocalization }}</nz-form-label>--\x3e\r\n    <nz-form-control>\r\n      <input nz-input type="password" formControlName="repeatNewPassword" id="confirm-new-password" placeholder="{{ \'AbpIdentity::DisplayName:NewPasswordConfirm\' | abpLocalization }}" />\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <button nz-button nzType="primary">\r\n    {{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}\r\n  </button>\r\n\r\n</form>\r\n\r\n\r\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:l.FormBuilder},{type:p.Store},{type:i.ToasterService}]},e}(a.ChangePasswordComponent);var h=function(){function n(){}return n.decorators=[{type:t.Component,args:[{selector:"ng-alain-auth-wrapper",template:'<ng-alain-tenant-box [mainContentRef]="mainContentRef">\r\n\r\n</ng-alain-tenant-box>\r\n\r\n<ng-content *ngTemplateOutlet="cancelContentRef"></ng-content>'}]}],n.propDecorators={mainContentRef:[{type:t.Input}],cancelContentRef:[{type:t.Input}]},n}();var y=function(n){function e(e,r,t){var o=n.call(this,e,r,t)||this;return o._store=e,o._toasterService=r,o._accountService=t,o}return u(e,n),e.decorators=[{type:t.Component,args:[{selector:"ng-alain-tenant-box",template:'  <nz-card nzTitle="{{\'AbpUiMultiTenancy::Tenant\' | abpLocalization}} ({{ tenantName || (\'AbpUiMultiTenancy::NotSelected\' | abpLocalization) }}) " [nzExtra]="extraTemplate">\r\n    <ng-content *ngTemplateOutlet="mainContentRef"></ng-content>\r\n  </nz-card>\r\n  <ng-template #extraTemplate>\r\n    <a id="AbpTenantSwitchLink"\r\n       href="javascript:void(0);"\r\n       class="btn btn-sm mt-3 btn-outline-primary"\r\n       (click)="onSwitch()">{{ \'AbpUiMultiTenancy::Switch\' | abpLocalization }}</a>\r\n  </ng-template>\r\n\r\n  <nz-modal [nzStyle]="{ top: \'20px\' }"\r\n            [(nzVisible)]="isModalVisible"\r\n            [nzTitle]="modalTitle"\r\n            [nzContent]="modalContent"\r\n            [nzFooter]="modalFooter"\r\n            (nzOnCancel)="isModalVisible=false">\r\n    <ng-template #modalTitle>\r\n      Switch Tenan\r\n    </ng-template>\r\n\r\n    <ng-template #modalContent>\r\n      <ng-template #loaderRef>\r\n        <div class="text-center"><i class="fa fa-pulse fa-spinner"></i></div>\r\n      </ng-template>\r\n\r\n      <form nz-form *ngIf="tenant; else loaderRef"  (ngSubmit)="save()">\r\n\r\n\r\n        <nz-form-item>\r\n          <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="name">{{ \'AbpUiMultiTenancy::Name\' | abpLocalization }}</nz-form-label>\r\n          <nz-form-control [nzSm]="14" [nzXs]="24" nzExtra="{{ \'AbpUiMultiTenancy::SwitchTenantHint\' | abpLocalization }}">\r\n            <input nz-input [(ngModel)]="tenant.name" id="name" name="name" />\r\n          </nz-form-control>\r\n        </nz-form-item>\r\n      </form>\r\n    </ng-template>\r\n\r\n    <ng-template #modalFooter>\r\n      <button nz-button nzType="default" (click)="isModalVisible=false">\r\n        {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\r\n      </button>\r\n      <button nz-button nzType="primary" (click)="save()">\r\n        {{\r\n      \'AbpTenantManagement::Save\' | abpLocalization\r\n        }}\r\n      </button>\r\n    </ng-template>\r\n  </nz-modal>\r\n\r\n'}]}],e.ctorParameters=function(){return[{type:p.Store},{type:i.ToasterService},{type:a.AccountService}]},e.propDecorators={mainContentRef:[{type:t.Input}]},e}(a.TenantBoxComponent);var w=function(){function n(n){this.store=n,n.dispatch(new r.PatchRouteByName("AbpAccount::Menu:Account",{layout:"account"})),n.dispatch(new r.PatchRouteByName("AbpAccount::ManageYourProfile",{layout:"application"})),n.dispatch(new r.AddReplaceableComponent({component:d,key:"Account.LoginComponent"})),n.dispatch(new r.AddReplaceableComponent({component:f,key:"Account.RegisterComponent"})),n.dispatch(new r.AddReplaceableComponent({component:z,key:"Account.ManageProfileComponent"}))}return n.decorators=[{type:t.NgModule,args:[{declarations:[h,y,d,f,z,g,b],entryComponents:[d,f,z],imports:[r.CoreModule,o.NgAlainBasicModule,e.AccountModule]}]}],n.ctorParameters=function(){return[{type:p.Store}]},n}();n.AccountNgAlainModule=w,n.ɵa=h,n.ɵb=y,n.ɵc=d,n.ɵd=f,n.ɵe=z,n.ɵf=g,n.ɵg=b,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=fs-account-ng-alain.umd.min.js.map