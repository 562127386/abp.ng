export class ContextStrategy {
    constructor(context) {
        this.context = context;
    }
    /* tslint:disable-next-line:no-unused-variable */
    setContext(componentRef) {
        return this.context;
    }
}
export class NoContextStrategy extends ContextStrategy {
    constructor() {
        super(undefined);
    }
}
export class ComponentContextStrategy extends ContextStrategy {
    setContext(componentRef) {
        Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));
        componentRef.changeDetectorRef.detectChanges();
        return this.context;
    }
}
export class TemplateContextStrategy extends ContextStrategy {
    setContext() {
        return this.context;
    }
}
export const CONTEXT_STRATEGY = {
    None() {
        return new NoContextStrategy();
    },
    Component(context) {
        return new ComponentContextStrategy(context);
    },
    Template(context) {
        return new TemplateContextStrategy(context);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC5zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9zdHJhdGVnaWVzL2NvbnRleHQuc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFnQixlQUFlO0lBQ25DLFlBQW1CLE9BQWdDO1FBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXlCO0lBQUcsQ0FBQztJQUV2RCxpREFBaUQ7SUFDakQsVUFBVSxDQUFDLFlBQWtEO1FBQzNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8saUJBRVgsU0FBUSxlQUFrQjtJQUMxQjtRQUNFLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQW9ELFNBQVEsZUFBa0I7SUFDekYsVUFBVSxDQUFDLFlBQWlEO1FBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzRixZQUFZLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx1QkFBMEQsU0FBUSxlQUFrQjtJQUMvRixVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHO0lBQzlCLElBQUk7UUFDRixPQUFPLElBQUksaUJBQWlCLEVBQUssQ0FBQztJQUNwQyxDQUFDO0lBQ0QsU0FBUyxDQUE0QixPQUF1QztRQUMxRSxPQUFPLElBQUksd0JBQXdCLENBQUksT0FBTyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELFFBQVEsQ0FBbUMsT0FBc0M7UUFDL0UsT0FBTyxJQUFJLHVCQUF1QixDQUFJLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELENBQUM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50UmVmLCBUZW1wbGF0ZVJlZiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJbmZlcnJlZENvbnRleHRPZiwgSW5mZXJyZWRJbnN0YW5jZU9mIH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb250ZXh0U3RyYXRlZ3k8VCA9IGFueT4ge1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZXh0OiBQYXJ0aWFsPENvbnRleHRUeXBlPFQ+Pikge31cclxuXHJcbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVudXNlZC12YXJpYWJsZSAqL1xyXG4gIHNldENvbnRleHQoY29tcG9uZW50UmVmPzogQ29tcG9uZW50UmVmPEluZmVycmVkSW5zdGFuY2VPZjxUPj4pOiBQYXJ0aWFsPENvbnRleHRUeXBlPFQ+PiB7XHJcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE5vQ29udGV4dFN0cmF0ZWd5PFxyXG4gIFQgZXh0ZW5kcyBUeXBlPGFueT4gfCBUZW1wbGF0ZVJlZjxhbnk+ID0gYW55XHJcbj4gZXh0ZW5kcyBDb250ZXh0U3RyYXRlZ3k8VD4ge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIodW5kZWZpbmVkKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRDb250ZXh0U3RyYXRlZ3k8VCBleHRlbmRzIFR5cGU8YW55PiA9IGFueT4gZXh0ZW5kcyBDb250ZXh0U3RyYXRlZ3k8VD4ge1xyXG4gIHNldENvbnRleHQoY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8SW5mZXJyZWRJbnN0YW5jZU9mPFQ+Pik6IFBhcnRpYWw8SW5mZXJyZWRJbnN0YW5jZU9mPFQ+PiB7XHJcbiAgICBPYmplY3Qua2V5cyh0aGlzLmNvbnRleHQpLmZvckVhY2goa2V5ID0+IChjb21wb25lbnRSZWYuaW5zdGFuY2Vba2V5XSA9IHRoaXMuY29udGV4dFtrZXldKSk7XHJcbiAgICBjb21wb25lbnRSZWYuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgcmV0dXJuIHRoaXMuY29udGV4dDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUZW1wbGF0ZUNvbnRleHRTdHJhdGVneTxUIGV4dGVuZHMgVGVtcGxhdGVSZWY8YW55PiA9IGFueT4gZXh0ZW5kcyBDb250ZXh0U3RyYXRlZ3k8VD4ge1xyXG4gIHNldENvbnRleHQoKTogUGFydGlhbDxJbmZlcnJlZENvbnRleHRPZjxUPj4ge1xyXG4gICAgcmV0dXJuIHRoaXMuY29udGV4dDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBDT05URVhUX1NUUkFURUdZID0ge1xyXG4gIE5vbmU8VCBleHRlbmRzIFR5cGU8YW55PiB8IFRlbXBsYXRlUmVmPGFueT4gPSBhbnk+KCkge1xyXG4gICAgcmV0dXJuIG5ldyBOb0NvbnRleHRTdHJhdGVneTxUPigpO1xyXG4gIH0sXHJcbiAgQ29tcG9uZW50PFQgZXh0ZW5kcyBUeXBlPGFueT4gPSBhbnk+KGNvbnRleHQ6IFBhcnRpYWw8SW5mZXJyZWRJbnN0YW5jZU9mPFQ+Pikge1xyXG4gICAgcmV0dXJuIG5ldyBDb21wb25lbnRDb250ZXh0U3RyYXRlZ3k8VD4oY29udGV4dCk7XHJcbiAgfSxcclxuICBUZW1wbGF0ZTxUIGV4dGVuZHMgVGVtcGxhdGVSZWY8YW55PiA9IGFueT4oY29udGV4dDogUGFydGlhbDxJbmZlcnJlZENvbnRleHRPZjxUPj4pIHtcclxuICAgIHJldHVybiBuZXcgVGVtcGxhdGVDb250ZXh0U3RyYXRlZ3k8VD4oY29udGV4dCk7XHJcbiAgfSxcclxufTtcclxuXHJcbnR5cGUgQ29udGV4dFR5cGU8VD4gPSBUIGV4dGVuZHMgVHlwZTxpbmZlciBVPiB8IFRlbXBsYXRlUmVmPGluZmVyIFU+ID8gVSA6IG5ldmVyO1xyXG4iXX0=