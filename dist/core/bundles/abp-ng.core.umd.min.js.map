{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/common-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","RestService","http","store","handleError","err","dispatch","console","throwError","request","config","api","_a","observe","skipHandleError","url","selectSnapshot","ConfigState","getApiUrl","method","params","options","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","keys","reduce","acc","pipe","take","tap","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","getInitialData","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","getLanguage","getTenant","tenant","setLanguage","_b","patchState","switchMap","from","setTenant","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","environment","application","getOne","createSelector","ConfigState_1","getDeep","split","isArray","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","selector","localization","defaultResourceName","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","getState","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","layouts","requirements","snapshot","data","layout","l","toLowerCase","events","subscribe","event","NavigationEnd","segments","parseUrl","root","primary","layout_1","wrapper","findLayout","ngOnDestroy","ActivatedRoute","Select","Observable","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","distinctUntilChanged","res","externalComponent","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","EllipsisDirective","enabled","width","undefined","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","create","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","uuid","Math","random","toString","FormSubmitDirective","formGroupDirective","host","debounce","ngSubmit","EventEmitter","executedNgSubmit","markAsDirty","fromEvent","debounceTime","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","Output","InitDirective","init","emit","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","removeChild","parentElement","currentValue","Renderer2","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","VisibilityDirective","completed$","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","AuthGuard","oauthService","canActivate","hasValidAccessToken","createUrlTree","redirectUrl","OAuthService","PermissionGuard","resource","requiredPolicy","routeConfig","access","status","ApplicationConfiguration","ABP","Config","Profile","ReplaceableComponents","Session","ApiInterceptor","oAuthService","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","Response","Localization","Language","Auth","Value","CurrentUser","Root","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Environment","Application","Requirements","LocalizationWithDefault","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","LocalizationPipe","transform","Pipe","SortPipe","sortOrder","sortKey","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","LazyLoadService","loadedLibraries","load","urlOrUrls","content","targetQuery","position","subscriber","library","slice","lastIndexOf","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","ENVIRONMENT","CONFIG","InputEventDebounceDirective","el","debounceEvent","StopPropagationDirective","stopPropEvent","stopPropagation","LocaleId","_super","__","tslib_1.__extends","currentLang","valueOf","String","LocaleProvider","LOCALE_ID","useClass","deps","Date","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","CoreModule","forRoot","ngModule","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","NgModule","imports","NgxsModule","forFeature","NgxsRouterPluginModule","NgxsStoragePluginModule","OAuthModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, take, tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    console.error(err);\r\n    return throwError(err);\r\n  }\r\n\r\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n    const url = (api || this.store.selectSnapshot(ConfigState.getApiUrl())) + request.url;\r\n    const { method, params, ...options } = request;\r\n\r\n    return this.http\r\n      .request<T>(method, url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce(\r\n            (acc, key) => ({\r\n              ...acc,\r\n              ...(typeof params[key] !== 'undefined' && params[key] !== '' && { [key]: params[key] }),\r\n            }),\r\n            {},\r\n          ),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(\r\n        observe === Rest.Observe.Body ? take(1) : tap(),\r\n        catchError(err => {\r\n          if (skipHandleError) {\r\n            return throwError(err);\r\n          }\r\n\r\n          return this.handleError(err);\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    return store.dispatch(new GetAppConfiguration()).toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { from } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SetLanguage, SetTenant } from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: {} as Session.State,\r\n})\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  constructor(private localizationService: LocalizationService) {}\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration()).pipe(\r\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\r\n    );\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n}\r\n","import { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, PatchRouteByName, AddRoute } from '../actions/config.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return state.environment.apis[key || 'default'].url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (keyword) {\r\n        const keys = snq(\r\n          () => Object.keys(state.setting.values).filter(key => key.indexOf(keyword) > -1),\r\n          [],\r\n        );\r\n\r\n        if (keys.length) {\r\n          return keys.reduce((acc, key) => ({ ...acc, [key]: state.setting.values[key] }), {});\r\n        }\r\n      }\r\n\r\n      return snq(() => state.setting.values, {});\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    if (!key) key = '';\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const { defaultResourceName } = state.environment.localization;\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = snq(() => defaultResourceName);\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(\r\n    private appConfigurationService: ApplicationConfigurationService,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    return this.appConfigurationService.getConfiguration().pipe(\r\n      tap(configuration =>\r\n        patchState({\r\n          ...configuration,\r\n        }),\r\n      ),\r\n      switchMap(configuration => {\r\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n        if (defaultLang.includes(';')) {\r\n          defaultLang = defaultLang.split(';')[0];\r\n        }\r\n\r\n        return this.store.selectSnapshot(SessionState.getLanguage)\r\n          ? of(null)\r\n          : dispatch(new SetLanguage(defaultLang));\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if (parent.url.replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.order = route.order || route.order === 0 ? route.order : parent.children.length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, Input, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from '../models/config';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\r\n  `\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  @Select(ConfigState.getOne('requirements')) requirements$: Observable<Config.Requirements>;\r\n\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const {\r\n      requirements: { layouts },\r\n      routes\r\n    } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    if ((this.route.snapshot.data || {}).layout) {\r\n      this.layout = layouts\r\n        .filter(l => !!l)\r\n        .find((l: any) => snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1);\r\n    }\r\n\r\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\r\n\r\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts\r\n          .filter(l => !!l)\r\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function uuid(a?: any): string {\r\n  return a\r\n    ? // tslint:disable-next-line: no-bitwise\r\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request);\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request);\r\n  }\r\n\r\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","export const enum eLayoutType {\r\n  account = 'account',\r\n  application = 'application',\r\n  empty = 'empty',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private router: Router) {}\r\n\r\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    return this.router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    values: LocalizationValue;\r\n    languages: Language[];\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    requirements: Config.Requirements;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { Type } from '@angular/core';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export interface Config {\r\n    skipHandleError?: boolean;\r\n    observe?: Observe;\r\n  }\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(value: string | Config.LocalizationWithDefault = '', ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models';\r\nimport { organizeRoutes, getAbpRoutes } from '../utils/route-utils';\r\nimport clone from 'just-clone';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes } = transformedRoutes;\r\n      const { wrappers } = transformedRoutes;\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { GetAppConfiguration, PatchRouteByName, AddRoute } from '../actions/config.actions';\r\nimport { ABP } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content: string = '',\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<void> {\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { ABP } from '../models';\r\nimport { SetLanguage, SetTenant } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Config } from '../models';\r\n\r\nexport function environmentFactory(environment: Config.Environment) {\r\n  return {\r\n    ...environment,\r\n  };\r\n}\r\n\r\nexport function configFactory(config: Config.Requirements) {\r\n  return {\r\n    ...config,\r\n  };\r\n}\r\n\r\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\r\n\r\nexport const CONFIG = new InjectionToken('CONFIG');\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { takeUntilDestroy } from '@ngx-validate/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString(): string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport './utils/date-extensions';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n    OAuthModule.forRoot(),\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    ReplaceableRouteContainerComponent,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    StopPropagationDirective,\r\n    ReplaceableTemplateDirective,\r\n    AbstractNgModelComponent,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AbstractNgModelComponent,\r\n    ReplaceableRouteContainerComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    ReplaceableTemplateDirective,\r\n    StopPropagationDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    LocalizationPipe,\r\n  ],\r\n  providers: [LocalizationPipe],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n"]}