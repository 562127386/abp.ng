{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/dtos.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/utils/common-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","SetEnvironment","environment","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","ModifyOpenedTabCount","operation","SetRemember","RestService","http","store","handleError","err","dispatch","console","throwError","request","config","api","_a","observe","skipHandleError","url","selectSnapshot","ConfigState","getApiUrl","method","params","options","keys","reduce","acc","pipe","take","tap","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","getInitialData","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","oAuthService","actions","ofActionSuccessful","subscribe","sessionDetail","SessionState_1","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","hasValidAccessToken","remember","logOut","fromEvent","window","event","getLanguage","getTenant","tenant","getSessionDetail","setLanguage","_b","patchState","switchMap","from","setTenant","setRemember","getState","modifyOpenedTabCount","_c","detail","OAuthService","Actions","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","application","getOne","createSelector","ConfigState_1","getDeep","split","isArray","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","settings","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","selector","localization","defaultResourceName","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","setEnvironment","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","Subject","complete","takeUntil","DynamicLayoutComponent","layouts","requirements","snapshot","data","layout","l","toLowerCase","events","NavigationEnd","segments","parseUrl","root","primary","layout_1","wrapper","findLayout","ngOnDestroy","ActivatedRoute","Select","Observable","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","distinctUntilChanged","res","externalComponent","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","EllipsisDirective","enabled","width","undefined","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","uuid","Math","random","toString","FormSubmitDirective","formGroupDirective","host","debounce","ngSubmit","EventEmitter","executedNgSubmit","markAsDirty","debounceTime","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","Output","InitDirective","init","emit","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","removeChild","parentElement","currentValue","Renderer2","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","VisibilityDirective","completed$","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","AuthGuard","oauthService","canActivate","createUrlTree","redirectUrl","PermissionGuard","resource","requiredPolicy","routeConfig","access","status","ApplicationConfiguration","ABP","Config","ApiInterceptor","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","Response","Localization","Language","Auth","Value","CurrentUser","Root","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Environment","Application","Requirements","LocalizationWithDefault","initialValues","PagedResultDto","_super","tslib_1.__extends","ListResultDto","LimitedResultRequestDto","maxResultCount","PagedResultRequestDto","PagedAndSortedResultRequestDto","CreationAuditedEntityDto","EntityDto","CreationAuditedEntityWithUserDto","AuditedEntityDto","AuditedEntityWithUserDto","FullAuditedEntityDto","Profile","ReplaceableComponents","Session","FullAuditedEntityWithUserDto","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","SessionDetail","LocalizationPipe","transform","Pipe","SortPipe","sortOrder","sortKey","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","AuthService","login","username","password","configure","oAuthConfig","loadDiscoveryDocument","fetchTokenUsingPasswordFlow","HttpHeaders","__tenant","history","Navigate","logout","issuer","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","dispatchSetEnvironment","LazyLoadService","loadedLibraries","load","urlOrUrls","content","targetQuery","position","subscriber","library","slice","lastIndexOf","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","ENVIRONMENT","CONFIG","InputEventDebounceDirective","el","debounceEvent","StopPropagationDirective","stopPropEvent","stopPropagation","LocaleId","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","localStorage","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","CoreModule","forRoot","ngModule","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","OAuthModule","OAuthStorage","NgModule","imports","NgxsModule","forFeature","NgxsRouterPluginModule","NgxsStoragePluginModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, take, tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    console.error(err);\r\n    return throwError(err);\r\n  }\r\n\r\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n    const url = (api || this.store.selectSnapshot(ConfigState.getApiUrl())) + request.url;\r\n    const { method, params, ...options } = request;\r\n\r\n    return this.http\r\n      .request<T>(method, url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce(\r\n            (acc, key) => ({\r\n              ...acc,\r\n              ...(typeof params[key] !== 'undefined' && params[key] !== '' && { [key]: params[key] }),\r\n            }),\r\n            {},\r\n          ),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(\r\n        observe === Rest.Observe.Body ? take(1) : tap(),\r\n        catchError(err => {\r\n          if (skipHandleError) {\r\n            return throwError(err);\r\n          }\r\n\r\n          return this.handleError(err);\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: ABP.FullRoute[],\r\n): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    return store.dispatch(new GetAppConfiguration()).toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n  NgxsOnInit,\r\n  Actions,\r\n  ofActionSuccessful,\r\n} from '@ngxs/store';\r\nimport { from, fromEvent } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  SetLanguage,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n  SetRemember,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\nimport { LocalizationService } from '../services/localization.service';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(\r\n    private localizationService: LocalizationService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    private actions: Actions,\r\n  ) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration()).pipe(\r\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\r\n    );\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return state.environment.apis[key || 'default'].url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const defaultResourceName = snq(() => state.environment.localization.defaultResourceName);\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = defaultResourceName;\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(\r\n    private appConfigurationService: ApplicationConfigurationService,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    return this.appConfigurationService.getConfiguration().pipe(\r\n      tap(configuration =>\r\n        patchState({\r\n          ...configuration,\r\n        }),\r\n      ),\r\n      switchMap(configuration => {\r\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n        if (defaultLang.includes(';')) {\r\n          defaultLang = defaultLang.split(';')[0];\r\n        }\r\n\r\n        return this.store.selectSnapshot(SessionState.getLanguage)\r\n          ? of(null)\r\n          : dispatch(new SetLanguage(defaultLang));\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if ((parent.url || '').replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.order = route.order || route.order === 0 ? route.order : parent.children.length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, environment: Config.Environment) {\r\n    return patchState({\r\n      environment,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, Input, OnDestroy, Type, Injector } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from '../models/config';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngComponentOutlet=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  @Select(ConfigState.getOne('requirements')) requirements$: Observable<Config.Requirements>;\r\n\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const {\r\n      requirements: { layouts },\r\n      routes,\r\n    } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    if ((this.route.snapshot.data || {}).layout) {\r\n      this.layout = layouts\r\n        .filter(l => !!l)\r\n        .find(\r\n          (l: any) =>\r\n            snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1,\r\n        );\r\n    }\r\n\r\n    router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const segments = snq(() => router.parseUrl(event.url).root.children.primary.segments, [\r\n          { path: router.url.replace('/', '') },\r\n        ] as any);\r\n\r\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts\r\n          .filter(l => !!l)\r\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function uuid(a?: any): string {\r\n  return a\r\n    ? // tslint:disable-next-line: no-bitwise\r\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request);\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request);\r\n  }\r\n\r\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","export const enum eLayoutType {\r\n  account = 'account',\r\n  application = 'application',\r\n  empty = 'empty',\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    return router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    values: LocalizationValue;\r\n    languages: Language[];\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    requirements: Config.Requirements;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { Type } from '@angular/core';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export interface Config {\r\n    skipHandleError?: boolean;\r\n    observe?: Observe;\r\n  }\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(value: string | Config.LocalizationWithDefault = '', ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models';\r\nimport { getAbpRoutes, organizeRoutes } from '../utils/route-utils';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized && getAbpRoutes().length) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes } = transformedRoutes;\r\n      const { wrappers } = transformedRoutes;\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n\r\n    return this.rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          this.oAuthService.logOut();\r\n          return this.store.dispatch(new GetAppConfiguration());\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content: string = '',\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<void> {\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Config } from '../models';\r\n\r\nexport function environmentFactory(environment: Config.Environment) {\r\n  return {\r\n    ...environment,\r\n  };\r\n}\r\n\r\nexport function configFactory(config: Config.Requirements) {\r\n  return {\r\n    ...config,\r\n  };\r\n}\r\n\r\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\r\n\r\nexport const CONFIG = new InjectionToken('CONFIG');\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(debounceTime(this.debounce), takeUntilDestroy(this))\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport './utils/date-extensions';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n@NgModule({\r\n  imports: [\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    ReplaceableRouteContainerComponent,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    StopPropagationDirective,\r\n    ReplaceableTemplateDirective,\r\n    AbstractNgModelComponent,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AbstractNgModelComponent,\r\n    ReplaceableRouteContainerComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    ReplaceableTemplateDirective,\r\n    StopPropagationDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    LocalizationPipe,\r\n  ],\r\n  providers: [LocalizationPipe],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n"]}