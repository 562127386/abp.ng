{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/common-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","cdRef","get","ChangeDetectorRef","_value","notifyValueChange","onChange","writeValue","_this","setTimeout","detectChanges","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","selector","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","RestOccurError","SetLanguage","SetTenant","RestService","http","store","handleError","err","dispatch","console","throwError","request","config","api","_a","observe","skipHandleError","url","selectSnapshot","ConfigState","getApiUrl","method","params","options","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","keys","reduce","acc","pipe","take","tap","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","getInitialData","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","getLanguage","getTenant","tenant","setLanguage","_b","patchState","switchMap","from","setTenant","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","environment","application","getOne","createSelector","ConfigState_1","getDeep","split","isArray","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","defaultValue","localization","defaultResourceName","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","getState","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","layouts","requirements","snapshot","data","layout","l","toLowerCase","events","subscribe","event","NavigationEnd","segments","parseUrl","root","primary","layout_1","wrapper","findLayout","ngOnDestroy","ActivatedRoute","Select","Observable","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","EllipsisDirective","enabled","width","undefined","title","innerText","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","create","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","uuid","Math","random","toString","FormSubmitDirective","formGroupDirective","host","debounce","ngSubmit","EventEmitter","executedNgSubmit","ngOnInit","markAsDirty","fromEvent","debounceTime","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","Output","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","removeChild","parentElement","currentValue","Renderer2","VisibilityDirective","completed$","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","AuthGuard","oauthService","canActivate","hasValidAccessToken","createUrlTree","redirectUrl","OAuthService","PermissionGuard","resource","requiredPolicy","routeConfig","access","status","ApplicationConfiguration","ABP","Config","Session","Profile","ApiInterceptor","oAuthService","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","Response","Localization","Language","Auth","Value","CurrentUser","Root","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Environment","Application","Requirements","LocalizationWithDefault","Rest","Request","ChangePasswordRequest","LocalizationPipe","transform","Pipe","SortPipe","sortOrder","sortKey","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","initialized","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","component","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","ConfigStateService","LazyLoadService","loadedLibraries","load","urlOrUrls","content","targetQuery","position","subscriber","library","slice","lastIndexOf","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","ProfileStateService","SessionStateService","ENVIRONMENT","CONFIG","InputEventDebounceDirective","el","debounceEvent","emit","StopPropagationDirective","stopPropEvent","stopPropagation","LocaleId","_super","__","tslib_1.__extends","currentLang","valueOf","String","LocaleProvider","provide","LOCALE_ID","useClass","deps","Date","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","CoreModule","forRoot","ngModule","providers","NGXS_PLUGINS","multi","useValue","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","NgModule","imports","NgxsModule","forFeature","NgxsRouterPluginModule","NgxsStoragePluginModule","OAuthModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input, Type } from '@angular/core';\r\n\r\n@Component({ selector: 'abp-abstract-ng-model', template: '' })\r\nexport class AbstractNgModelComponent<T = any> implements ControlValueAccessor {\r\n  @Input() disabled: boolean;\r\n\r\n  @Input() set value(value: T) {\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value;\r\n  }\r\n\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n\r\n  constructor(public injector: Injector) {\r\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef as Type<ChangeDetectorRef>);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = value;\r\n    setTimeout(() => this.cdRef.detectChanges(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, take, tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    console.error(err);\r\n    return throwError(err);\r\n  }\r\n\r\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n    const url = (api || this.store.selectSnapshot(ConfigState.getApiUrl())) + request.url;\r\n    const { method, params, ...options } = request;\r\n\r\n    return this.http\r\n      .request<T>(method, url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce(\r\n            (acc, key) => ({\r\n              ...acc,\r\n              ...(typeof params[key] !== 'undefined' && params[key] !== '' && { [key]: params[key] }),\r\n            }),\r\n            {},\r\n          ),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(\r\n        observe === Rest.Observe.Body ? take(1) : tap(),\r\n        catchError(err => {\r\n          if (skipHandleError) {\r\n            return throwError(err);\r\n          }\r\n\r\n          return this.handleError(err);\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    return store.dispatch(new GetAppConfiguration()).toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { from } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SetLanguage, SetTenant } from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: {} as Session.State,\r\n})\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  constructor(private localizationService: LocalizationService) {}\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration()).pipe(\r\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\r\n    );\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n}\r\n","import { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, PatchRouteByName, AddRoute } from '../actions/config.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return state.environment.apis[key || 'default'].url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (keyword) {\r\n        const keys = snq(\r\n          () => Object.keys(state.setting.values).filter(key => key.indexOf(keyword) > -1),\r\n          [],\r\n        );\r\n\r\n        if (keys.length) {\r\n          return keys.reduce((acc, key) => ({ ...acc, [key]: state.setting.values[key] }), {});\r\n        }\r\n      }\r\n\r\n      return snq(() => state.setting.values, {});\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    if (!key) key = '';\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const { defaultResourceName } = state.environment.localization;\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = snq(() => defaultResourceName);\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(\r\n    private appConfigurationService: ApplicationConfigurationService,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    return this.appConfigurationService.getConfiguration().pipe(\r\n      tap(configuration =>\r\n        patchState({\r\n          ...configuration,\r\n        }),\r\n      ),\r\n      switchMap(configuration => {\r\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n        if (defaultLang.includes(';')) {\r\n          defaultLang = defaultLang.split(';')[0];\r\n        }\r\n\r\n        return this.store.selectSnapshot(SessionState.getLanguage)\r\n          ? of(null)\r\n          : dispatch(new SetLanguage(defaultLang));\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = newValue as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if (parent.url.replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.order = route.order || route.order === 0 ? route.order : parent.children.length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, Input, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from '../models/config';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\r\n  `\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  @Select(ConfigState.getOne('requirements')) requirements$: Observable<Config.Requirements>;\r\n\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const {\r\n      requirements: { layouts },\r\n      routes\r\n    } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    if ((this.route.snapshot.data || {}).layout) {\r\n      this.layout = layouts\r\n        .filter(l => !!l)\r\n        .find((l: any) => snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1);\r\n    }\r\n\r\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\r\n\r\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts\r\n          .filter(l => !!l)\r\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function uuid(a?: any): string {\r\n  return a\r\n    ? // tslint:disable-next-line: no-bitwise\r\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request);\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request);\r\n  }\r\n\r\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","export const enum eLayoutType {\r\n  account = 'account',\r\n  application = 'application',\r\n  empty = 'empty',\r\n  /**\r\n   * @deprecated since version 0.9.0\r\n   */\r\n  setting = 'setting',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private router: Router) {}\r\n\r\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    return this.router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource = snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () => route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data.requiredPolicy,\r\n      );\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    values: LocalizationValue;\r\n    languages: Language[];\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { Config } from './config';\r\nimport { eLayoutType } from '../enums/common';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    requirements: Config.Requirements;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n}\r\n","import { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { Type } from '@angular/core';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export interface Config {\r\n    skipHandleError?: boolean;\r\n    observe?: Observe;\r\n  }\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(value: string | Config.LocalizationWithDefault = '', ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models';\r\nimport { organizeRoutes, getAbpRoutes } from '../utils/route-utils';\r\nimport clone from 'just-clone';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes } = transformedRoutes;\r\n      const { wrappers } = transformedRoutes;\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content: string = '',\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<void> {\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Config } from '../models';\r\n\r\nexport function environmentFactory(environment: Config.Environment) {\r\n  return {\r\n    ...environment,\r\n  };\r\n}\r\n\r\nexport function configFactory(config: Config.Requirements) {\r\n  return {\r\n    ...config,\r\n  };\r\n}\r\n\r\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\r\n\r\nexport const CONFIG = new InjectionToken('CONFIG');\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { takeUntilDestroy } from '@ngx-validate/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString(): string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport './utils/date-extensions';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxsModule.forFeature([ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n    OAuthModule.forRoot(),\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    StopPropagationDirective,\r\n    AbstractNgModelComponent,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    LocalizationPipe,\r\n    StopPropagationDirective,\r\n    AbstractNgModelComponent,\r\n  ],\r\n  providers: [LocalizationPipe],\r\n  entryComponents: [RouterOutletComponent, DynamicLayoutComponent],\r\n})\r\nexport class CoreModule {\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n"]}