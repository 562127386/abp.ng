{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/utils/common-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","ModifyOpenedTabCount","operation","SetRemember","RestService","http","store","handleError","err","dispatch","console","throwError","request","config","api","_a","observe","skipHandleError","url","selectSnapshot","ConfigState","getApiUrl","method","params","options","keys","reduce","acc","pipe","take","tap","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","getInitialData","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","oAuthService","actions","ofActionSuccessful","subscribe","sessionDetail","SessionState_1","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","hasValidAccessToken","remember","logOut","fromEvent","window","event","getLanguage","getTenant","tenant","getSessionDetail","setLanguage","_b","patchState","switchMap","from","setTenant","setRemember","getState","modifyOpenedTabCount","_c","detail","OAuthService","Actions","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","environment","application","getOne","createSelector","ConfigState_1","getDeep","split","isArray","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","selector","localization","defaultResourceName","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","layouts","requirements","snapshot","data","layout","l","toLowerCase","events","NavigationEnd","segments","parseUrl","root","primary","layout_1","wrapper","findLayout","ngOnDestroy","ActivatedRoute","Select","Observable","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","distinctUntilChanged","res","externalComponent","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","EllipsisDirective","enabled","width","undefined","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","create","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","uuid","Math","random","toString","FormSubmitDirective","formGroupDirective","host","debounce","ngSubmit","EventEmitter","executedNgSubmit","markAsDirty","debounceTime","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","Output","InitDirective","init","emit","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","removeChild","parentElement","currentValue","Renderer2","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","VisibilityDirective","completed$","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","AuthGuard","oauthService","canActivate","createUrlTree","redirectUrl","PermissionGuard","resource","requiredPolicy","routeConfig","access","status","ApplicationConfiguration","ABP","Config","Profile","ReplaceableComponents","Session","ApiInterceptor","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","Response","Localization","Language","Auth","Value","CurrentUser","Root","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Environment","Application","Requirements","LocalizationWithDefault","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","SessionDetail","LocalizationPipe","transform","Pipe","SortPipe","sortOrder","sortKey","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","AuthService","login","username","password","configure","oAuthConfig","loadDiscoveryDocument","fetchTokenUsingPasswordFlow","HttpHeaders","__tenant","history","Navigate","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","LazyLoadService","loadedLibraries","load","urlOrUrls","content","targetQuery","position","subscriber","library","slice","lastIndexOf","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","ENVIRONMENT","CONFIG","InputEventDebounceDirective","el","debounceEvent","StopPropagationDirective","stopPropEvent","stopPropagation","LocaleId","_super","__","tslib_1.__extends","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","localStorage","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","CoreModule","forRoot","ngModule","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","OAuthModule","OAuthStorage","NgModule","imports","NgxsModule","forFeature","NgxsRouterPluginModule","NgxsStoragePluginModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, take, tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    console.error(err);\r\n    return throwError(err);\r\n  }\r\n\r\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n    const url = (api || this.store.selectSnapshot(ConfigState.getApiUrl())) + request.url;\r\n    const { method, params, ...options } = request;\r\n\r\n    return this.http\r\n      .request<T>(method, url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce(\r\n            (acc, key) => ({\r\n              ...acc,\r\n              ...(typeof params[key] !== 'undefined' && params[key] !== '' && { [key]: params[key] }),\r\n            }),\r\n            {},\r\n          ),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(\r\n        observe === Rest.Observe.Body ? take(1) : tap(),\r\n        catchError(err => {\r\n          if (skipHandleError) {\r\n            return throwError(err);\r\n          }\r\n\r\n          return this.handleError(err);\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    return store.dispatch(new GetAppConfiguration()).toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n  NgxsOnInit,\r\n  Actions,\r\n  ofActionSuccessful,\r\n} from '@ngxs/store';\r\nimport { from, fromEvent } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  SetLanguage,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n  SetRemember,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\nimport { LocalizationService } from '../services/localization.service';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(\r\n    private localizationService: LocalizationService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    private actions: Actions,\r\n  ) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration()).pipe(\r\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\r\n    );\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, PatchRouteByName, AddRoute } from '../actions/config.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return state.environment.apis[key || 'default'].url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (keyword) {\r\n        const keys = snq(\r\n          () => Object.keys(state.setting.values).filter(key => key.indexOf(keyword) > -1),\r\n          [],\r\n        );\r\n\r\n        if (keys.length) {\r\n          return keys.reduce((acc, key) => ({ ...acc, [key]: state.setting.values[key] }), {});\r\n        }\r\n      }\r\n\r\n      return snq(() => state.setting.values, {});\r\n    });\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const { defaultResourceName } = state.environment.localization;\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = snq(() => defaultResourceName);\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(\r\n    private appConfigurationService: ApplicationConfigurationService,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    return this.appConfigurationService.getConfiguration().pipe(\r\n      tap(configuration =>\r\n        patchState({\r\n          ...configuration,\r\n        }),\r\n      ),\r\n      switchMap(configuration => {\r\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n        if (defaultLang.includes(';')) {\r\n          defaultLang = defaultLang.split(';')[0];\r\n        }\r\n\r\n        return this.store.selectSnapshot(SessionState.getLanguage)\r\n          ? of(null)\r\n          : dispatch(new SetLanguage(defaultLang));\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if (parent.url.replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.order = route.order || route.order === 0 ? route.order : parent.children.length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, Input, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from '../models/config';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\r\n  `\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  @Select(ConfigState.getOne('requirements')) requirements$: Observable<Config.Requirements>;\r\n\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const {\r\n      requirements: { layouts },\r\n      routes\r\n    } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    if ((this.route.snapshot.data || {}).layout) {\r\n      this.layout = layouts\r\n        .filter(l => !!l)\r\n        .find((l: any) => snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1);\r\n    }\r\n\r\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\r\n\r\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts\r\n          .filter(l => !!l)\r\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function uuid(a?: any): string {\r\n  return a\r\n    ? // tslint:disable-next-line: no-bitwise\r\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request);\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request);\r\n  }\r\n\r\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","export const enum eLayoutType {\r\n  account = 'account',\r\n  application = 'application',\r\n  empty = 'empty',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private router: Router) {}\r\n\r\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    return this.router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    values: LocalizationValue;\r\n    languages: Language[];\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    requirements: Config.Requirements;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { Type } from '@angular/core';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export interface Config {\r\n    skipHandleError?: boolean;\r\n    observe?: Observe;\r\n  }\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(value: string | Config.LocalizationWithDefault = '', ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models';\r\nimport { organizeRoutes, getAbpRoutes } from '../utils/route-utils';\r\nimport clone from 'just-clone';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes } = transformedRoutes;\r\n      const { wrappers } = transformedRoutes;\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { GetAppConfiguration, PatchRouteByName, AddRoute } from '../actions/config.actions';\r\nimport { ABP } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content: string = '',\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<void> {\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Config } from '../models';\r\n\r\nexport function environmentFactory(environment: Config.Environment) {\r\n  return {\r\n    ...environment,\r\n  };\r\n}\r\n\r\nexport function configFactory(config: Config.Requirements) {\r\n  return {\r\n    ...config,\r\n  };\r\n}\r\n\r\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\r\n\r\nexport const CONFIG = new InjectionToken('CONFIG');\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { takeUntilDestroy } from '@ngx-validate/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport './utils/date-extensions';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n@NgModule({\r\n  imports: [\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    ReplaceableRouteContainerComponent,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    StopPropagationDirective,\r\n    ReplaceableTemplateDirective,\r\n    AbstractNgModelComponent,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    AbstractNgModelComponent,\r\n    ReplaceableRouteContainerComponent,\r\n    AutofocusDirective,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    PermissionDirective,\r\n    VisibilityDirective,\r\n    InputEventDebounceDirective,\r\n    ReplaceableTemplateDirective,\r\n    StopPropagationDirective,\r\n    LocalizationPipe,\r\n    SortPipe,\r\n    LocalizationPipe,\r\n  ],\r\n  providers: [LocalizationPipe],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString(): string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n"]}