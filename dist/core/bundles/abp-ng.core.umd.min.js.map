{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/utils/common-utils.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/tokens/options.token.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/number-utils.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/strategies/cross-origin.strategy.ts","ng://@abp/ng.core/lib/strategies/dom.strategy.ts","ng://@abp/ng.core/lib/utils/lazy-load-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/localization.module.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/dtos.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/content-projection.service.ts","ng://@abp/ng.core/lib/services/dom-insertion.service.ts","ng://@abp/ng.core/lib/strategies/container.strategy.ts","ng://@abp/ng.core/lib/strategies/content-security.strategy.ts","ng://@abp/ng.core/lib/strategies/content.strategy.ts","ng://@abp/ng.core/lib/strategies/context.strategy.ts","ng://@abp/ng.core/lib/strategies/loading.strategy.ts","ng://@abp/ng.core/lib/strategies/projection.strategy.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/services/track-by.service.ts","ng://@abp/ng.core/lib/utils/form-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","SetEnvironment","environment","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","ModifyOpenedTabCount","operation","SetRemember","isUndefinedOrEmptyString","undefined","RestService","http","store","getApiFromStore","apiName","selectSnapshot","ConfigState","getApiUrl","handleError","err","dispatch","throwError","request","config","api","method","params","options","_a","observe","skipHandleError","url","keys","reduce","acc","pipe","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getDeep","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","CORE_OPTIONS","InjectionToken","getInitialData","skipGetAppConfiguration","tap","res","oAuth","OAuthService","hasValidAccessToken","logOut","checkAccessToken","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","oAuthService","actions","ofActionSuccessful","take","subscribe","sessionDetail","SessionState_1","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","remember","fromEvent","window","event","getLanguage","getTenant","tenant","getSessionDetail","setLanguage","_b","patchState","switchMap","from","setTenant","setRemember","getState","modifyOpenedTabCount","_c","detail","Actions","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","application","getOne","createSelector","ConfigState_1","split","isArray","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","settings","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","selector","localization","defaultResourceName","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","setEnvironment","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","Subject","complete","takeUntil","DynamicLayoutComponent","events","NavigationEnd","segments","parseUrl","root","primary","layouts","account","empty","expectedLayout","snapshot","data","layout","wrapper","findLayout","ngOnDestroy","ActivatedRoute","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","distinctUntilChanged","externalComponent","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","InputEventDebounceDirective","el","debounce","debounceEvent","EventEmitter","debounceTime","emit","Output","EllipsisDirective","enabled","width","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","l","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","isNumber","Number","uuid","Math","random","toString","generateHash","hashed","charCodeAt","CrossOriginStrategy","crossorigin","integrity","setCrossOrigin","element","setAttribute","CROSS_ORIGIN_STRATEGY","Anonymous","UseCredentials","DomStrategy","position","document","head","insertElement","insertAdjacentElement","DOM_STRATEGY","AfterElement","AppendToBody","AppendToHead","BeforeElement","PrependToHead","fromLazyLoad","domStrategy","crossOriginStrategy","Observable","observer","onload","clearCallbacks","parentNode","removeChild","createErrorHandler","onerror","onabort","onemptied","onstalled","onsuspend","FormSubmitDirective","formGroupDirective","host","ngSubmit","executedNgSubmit","markAsDirty","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","InitDirective","init","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","parentElement","currentValue","Renderer2","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","StopPropagationDirective","stopPropEvent","stopPropagation","VisibilityDirective","completed$","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","ApiInterceptor","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","LocalizationPipe","transform","Pipe","MockLocalizationPipe","LocalizationModule","NgModule","exports","declarations","SortPipe","sortOrder","sortKey","toLowerCase","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","LocaleId","_super","tslib_1.__extends","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","localStorage","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","BaseCoreModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","imports","OAuthModule","entryComponents","RootCoreModule","NgxsModule","forFeature","NgxsRouterPluginModule","forRoot","NgxsStoragePluginModule","TestCoreModule","CoreModule","forTest","baseHref","ngModule","APP_BASE_HREF","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","OAuthStorage","AuthGuard","oauthService","canActivate","createUrlTree","redirectUrl","ApplicationConfiguration","ABP","Config","PermissionGuard","resource","requiredPolicy","routeConfig","access","status","Response","Localization","Language","Auth","Value","CurrentUser","Root","Test","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Option","Environment","Application","ApiConfig","Apis","Requirements","LocalizationWithDefault","initialValues","PagedResultDto","ListResultDto","LimitedResultRequestDto","maxResultCount","PagedResultRequestDto","PagedAndSortedResultRequestDto","CreationAuditedEntityDto","EntityDto","CreationAuditedEntityWithUserDto","AuditedEntityDto","AuditedEntityWithUserDto","FullAuditedEntityDto","Profile","ReplaceableComponents","Session","FullAuditedEntityWithUserDto","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","SessionDetail","AuthService","login","username","password","configure","oAuthConfig","loadDiscoveryDocument","fetchTokenUsingPasswordFlow","HttpHeaders","__tenant","history","Navigate","logout","issuer","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","dispatchSetEnvironment","ContentProjectionService","projectContent","projectionStrategy","injectContent","DomInsertionService","inserted","Set","insertContent","contentStrategy","hash","content","add","removeContent","textContent","delete","ContainerStrategy","containerRef","prepare","ClearContainerStrategy","getIndex","InsertIntoContainerStrategy","min","max","CONTAINER_STRATEGY","Clear","Append","Prepend","Insert","nonce","LooseContentSecurityStrategy","applyCSP","ContentSecurityStrategy","NoContentSecurityStrategy","CONTENT_SECURITY_STRATEGY","Loose","None","ContentStrategy","contentSecurityStrategy","createElement","StyleContentStrategy","ScriptContentStrategy","CONTENT_STRATEGY","AppendScriptToBody","AppendScriptToHead","AppendStyleToHead","PrependStyleToHead","ContextStrategy","setContext","componentRef","NoContextStrategy","ComponentContextStrategy","instance","changeDetectorRef","TemplateContextStrategy","CONTEXT_STRATEGY","Template","LoadingStrategy","createStream","ScriptLoadingStrategy","src","StyleLoadingStrategy","href","rel","LOADING_STRATEGY","AppendAnonymousScriptToBody","AppendAnonymousScriptToHead","AppendAnonymousStyleToHead","PrependAnonymousScriptToHead","PrependAnonymousStyleToHead","ComponentProjectionStrategy","containerStrategy","contextStrategy","factory","ProjectionStrategy","RootComponentProjectionStrategy","appRef","ApplicationRef","attachView","hostView","TemplateProjectionStrategy","embeddedViewRef","PROJECTION_STRATEGY","AppendComponentToBody","AppendComponentToContainer","AppendTemplateToContainer","PrependComponentToContainer","PrependTemplateToContainer","ProjectComponentToContainer","ProjectTemplateToContainer","LazyLoadService","loaded","loadedLibraries","load","strategyOrUrl","retryTimesOrType","retryDelayOrContent","targetQuery","strategy_1","retryTimes_1","retryDelay_1","CustomEvent","retryWhen","error$","shareReplay","bufferSize","refCount","urlOrUrls","subscriber","library","slice","lastIndexOf","ReplaySubject","text","querySelector","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","trackByDeep","TrackByService","by","byDeep","lowers","uppers","getRandom","chrSet","floor","join","_enum","member"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (!isUndefinedOrEmptyString(value)) acc[key] = value;\r\n\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: ABP.FullRoute[],\r\n): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const { skipGetAppConfiguration } = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    if (skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n  NgxsOnInit,\r\n  Actions,\r\n  ofActionSuccessful,\r\n} from '@ngxs/store';\r\nimport { from, fromEvent } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  SetLanguage,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n  SetRemember,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\nimport { LocalizationService } from '../services/localization.service';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(\r\n    private localizationService: LocalizationService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    private actions: Actions,\r\n  ) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration()).pipe(\r\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\r\n    );\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const defaultResourceName = snq(() => state.environment.localization.defaultResourceName);\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = defaultResourceName;\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(\r\n    private appConfigurationService: ApplicationConfigurationService,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    return this.appConfigurationService.getConfiguration().pipe(\r\n      tap(configuration =>\r\n        patchState({\r\n          ...configuration,\r\n        }),\r\n      ),\r\n      switchMap(configuration => {\r\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n        if (defaultLang.includes(';')) {\r\n          defaultLang = defaultLang.split(';')[0];\r\n        }\r\n\r\n        return this.store.selectSnapshot(SessionState.getLanguage)\r\n          ? of(null)\r\n          : dispatch(new SetLanguage(defaultLang));\r\n      }),\r\n    );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if ((parent.url || '').replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.children = route.children || [];\r\n      route.order = route.order || route.order === 0 ? route.order : (parent.children || []).length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({\r\n      environment,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngComponentOutlet=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const { routes } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const segments = snq(() => router.parseUrl(event.url).root.children.primary.segments, [\r\n          { path: router.url.replace('/', '') },\r\n        ] as any);\r\n\r\n        const layouts = {\r\n          application: this.getComponent('Theme.ApplicationLayoutComponent'),\r\n          account: this.getComponent('Theme.AccountLayoutComponent'),\r\n          empty: this.getComponent('Theme.EmptyLayoutComponent'),\r\n        };\r\n\r\n        const expectedLayout =\r\n          (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts[expectedLayout].component;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(debounceTime(this.debounce), takeUntilDestroy(this))\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models';\r\nimport { getAbpRoutes, organizeRoutes } from '../utils/route-utils';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes } = transformedRoutes;\r\n      const { wrappers } = transformedRoutes;\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { CORE_OPTIONS } from './tokens/options.token';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    return router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    values: LocalizationValue;\r\n    languages: Language[];\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    /**\r\n     *\r\n     * @deprecated To be deleted in v3.0\r\n     */\r\n    requirements?: Config.Requirements;\r\n    skipGetAppConfiguration?: boolean;\r\n  }\r\n\r\n  export interface Test {\r\n    baseHref?: Router;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Option<T> {\r\n    key: Extract<keyof T, string>;\r\n    value: T[Extract<keyof T, string>];\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    hmr?: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface ApiConfig {\r\n    [key: string]: string;\r\n    url: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: ApiConfig;\r\n    default: ApiConfig;\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export type Config = Partial<{\r\n    apiName: string;\r\n    skipHandleError: boolean;\r\n    observe: Observe;\r\n  }>;\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n\r\n    return this.rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          this.oAuthService.logOut();\r\n          return this.store.dispatch(new GetAppConfiguration());\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    return of(null).pipe(\r\n      switchMap(() =>\r\n        fromLazyLoad<E>(this.createElement(), this.domStrategy, this.crossOriginStrategy),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(component: T, context?: InferredInstanceOf<T>) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredInstanceOf<T>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredContextOf<T>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredInstanceOf<T>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredContextOf<T>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredInstanceOf<T>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: InferredContextOf<T>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Set();\r\n\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event>;\r\n  /**\r\n   *\r\n   * @deprecated Use other overload that requires a strategy as first param\r\n   */\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content?: string,\r\n    targetQuery?: string,\r\n    position?: InsertPosition,\r\n  ): Observable<void>;\r\n  load(\r\n    strategyOrUrl: LoadingStrategy | string | string[],\r\n    retryTimesOrType?: number | 'script' | 'style',\r\n    retryDelayOrContent?: number | string,\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<Event | void> {\r\n    if (strategyOrUrl instanceof LoadingStrategy) {\r\n      const strategy = strategyOrUrl;\r\n      const retryTimes = typeof retryTimesOrType === 'number' ? retryTimesOrType : 2;\r\n      const retryDelay = typeof retryDelayOrContent === 'number' ? retryDelayOrContent : 1000;\r\n\r\n      if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n      return strategy.createStream().pipe(\r\n        retryWhen(error$ =>\r\n          concat(\r\n            error$.pipe(delay(retryDelay), take(retryTimes)),\r\n            throwError(new CustomEvent('error')),\r\n          ),\r\n        ),\r\n        tap(() => this.loaded.add(strategy.path)),\r\n        delay(100),\r\n        shareReplay({ bufferSize: 1, refCount: true }),\r\n      );\r\n    }\r\n\r\n    let urlOrUrls = strategyOrUrl;\r\n    const content = (retryDelayOrContent as string) || '';\r\n    const type = retryTimesOrType as 'script' | 'style';\r\n\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n"]}