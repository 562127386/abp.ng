{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/common-utils.ts","ng://@abp/ng.core/lib/utils/number-utils.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/tokens/options.token.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/strategies/cross-origin.strategy.ts","ng://@abp/ng.core/lib/strategies/dom.strategy.ts","ng://@abp/ng.core/lib/utils/lazy-load-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/localization.module.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/dtos.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/content-projection.service.ts","ng://@abp/ng.core/lib/services/dom-insertion.service.ts","ng://@abp/ng.core/lib/strategies/container.strategy.ts","ng://@abp/ng.core/lib/strategies/content-security.strategy.ts","ng://@abp/ng.core/lib/strategies/content.strategy.ts","ng://@abp/ng.core/lib/strategies/context.strategy.ts","ng://@abp/ng.core/lib/strategies/loading.strategy.ts","ng://@abp/ng.core/lib/strategies/projection.strategy.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/services/track-by.service.ts","ng://@abp/ng.core/lib/utils/form-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","SetEnvironment","environment","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","ModifyOpenedTabCount","operation","SetRemember","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","SessionState","oAuthService","store","actions","pipe","ofActionSuccessful","take","subscribe","sessionDetail","selectSnapshot","SessionState_1","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","hasValidAccessToken","remember","logOut","dispatch","fromEvent","window","event","getLanguage","_a","language","getTenant","tenant","getSessionDetail","setLanguage","_b","patchState","setTenant","setRemember","getState","modifyOpenedTabCount","_c","detail","OAuthService","Store","Actions","Injectable","tslib_1.__decorate","Action","Selector","State","defaults","ConfigState","http","getAll","state","getApplicationInfo","application","getOne","createSelector","ConfigState_1","getDeep","keys","split","isArray","Error","reduce","acc","val","getRoute","path","url","flattedRoutes","find","getApiUrl","apis","default","getSetting","snq","setting","values","getSettings","keyword","settings","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","getLocalization","interpolateParams","_i","selector","localization","defaultResourceName","params","forEach","param","replace","addData","apiName","api","tap","configuration","switchMap","defaultLang","includes","of","catchError","err","HttpErrorResponse","status","throwError","patchRoute","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","setEnvironment","HttpClient","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","Subject","complete","takeUntil","DynamicLayoutComponent","router","events","NavigationEnd","segments","parseUrl","root","primary","layouts","account","empty","expectedLayout","snapshot","data","layout","wrapper","findLayout","ngOnDestroy","Router","ActivatedRoute","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","select","distinctUntilChanged","res","externalComponent","RouterOutletComponent","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","InputEventDebounceDirective","el","debounce","debounceEvent","EventEmitter","debounceTime","emit","Output","EllipsisDirective","enabled","width","undefined","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","l","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","noop","isUndefinedOrEmptyString","isNumber","Number","uuid","Math","random","toString","generateHash","hashed","charCodeAt","CORE_OPTIONS","InjectionToken","getInitialData","skipGetAppConfiguration","oAuth","checkAccessToken","toPromise","localeInitializer","lang","registerLocale","locale","import","differentLocales","module","registerLocaleData","CrossOriginStrategy","crossorigin","integrity","setCrossOrigin","element","setAttribute","CROSS_ORIGIN_STRATEGY","Anonymous","UseCredentials","DomStrategy","position","document","head","insertElement","insertAdjacentElement","DOM_STRATEGY","AfterElement","AppendToBody","AppendToHead","BeforeElement","PrependToHead","fromLazyLoad","domStrategy","crossOriginStrategy","Observable","observer","onload","clearCallbacks","handleError","parentNode","removeChild","createErrorHandler","onerror","onabort","onemptied","onstalled","onsuspend","FormSubmitDirective","formGroupDirective","host","ngSubmit","executedNgSubmit","markAsDirty","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","InitDirective","init","RestService","getApiFromStore","request","config","method","options","observe","skipHandleError","providedIn","ProfileService","rest","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","parentElement","currentValue","Renderer2","Optional","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","StopPropagationDirective","stopPropEvent","stopPropagation","VisibilityDirective","completed$","focusedElement","MutationObserver","mutations","mutation","from","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","ApiInterceptor","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","LocalizationPipe","transform","Pipe","MockLocalizationPipe","LocalizationModule","NgModule","exports","declarations","SortPipe","sortOrder","sortKey","toLowerCase","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","existingWrappers","Set","add","reduceWrappers","flat","flatRoutes","setValue","Inject","LocalizationService","ngZone","otherInstance","listenToSetLanguage","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","navigateByUrl","catch","instant","NgZone","SkipSelf","LocaleId","localizationService","_super","tslib_1.__extends","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","localStorage","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","BaseCoreModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","imports","OAuthModule","entryComponents","RootCoreModule","NgxsModule","forFeature","NgxsRouterPluginModule","forRoot","NgxsStoragePluginModule","TestCoreModule","CoreModule","forTest","baseHref","ngModule","APP_BASE_HREF","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","OAuthStorage","AuthGuard","oauthService","canActivate","navigate","redirectUrl","ApplicationConfiguration","ABP","Config","PermissionGuard","resource","requiredPolicy","routeConfig","access","Response","Localization","Language","CurrentCulture","DateTimeFormat","Auth","Value","CurrentUser","Root","Test","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Option","Environment","Application","ApiConfig","Apis","Requirements","LocalizationWithDefault","initialValues","PagedResultDto","ListResultDto","LimitedResultRequestDto","maxResultCount","PagedResultRequestDto","PagedAndSortedResultRequestDto","CreationAuditedEntityDto","EntityDto","CreationAuditedEntityWithUserDto","AuditedEntityDto","AuditedEntityWithUserDto","FullAuditedEntityDto","Profile","ReplaceableComponents","Session","FullAuditedEntityWithUserDto","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","SessionDetail","ApplicationConfigurationService","getConfiguration","AuthService","login","username","password","configure","oAuthConfig","loadDiscoveryDocument","fetchTokenUsingPasswordFlow","HttpHeaders","__tenant","history","Navigate","logout","issuer","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","dispatchSetEnvironment","ContentProjectionService","projectContent","projectionStrategy","injectContent","DomInsertionService","inserted","insertContent","contentStrategy","hash","content","removeContent","textContent","delete","ContainerStrategy","containerRef","prepare","ClearContainerStrategy","getIndex","InsertIntoContainerStrategy","min","max","CONTAINER_STRATEGY","Clear","Append","Prepend","Insert","nonce","LooseContentSecurityStrategy","applyCSP","ContentSecurityStrategy","NoContentSecurityStrategy","CONTENT_SECURITY_STRATEGY","Loose","None","ContentStrategy","contentSecurityStrategy","createElement","StyleContentStrategy","ScriptContentStrategy","CONTENT_STRATEGY","AppendScriptToBody","AppendScriptToHead","AppendStyleToHead","PrependStyleToHead","ContextStrategy","setContext","componentRef","NoContextStrategy","ComponentContextStrategy","instance","changeDetectorRef","TemplateContextStrategy","CONTEXT_STRATEGY","Template","LoadingStrategy","createStream","ScriptLoadingStrategy","src","StyleLoadingStrategy","href","rel","LOADING_STRATEGY","AppendAnonymousScriptToBody","AppendAnonymousScriptToHead","AppendAnonymousStyleToHead","PrependAnonymousScriptToHead","PrependAnonymousStyleToHead","ComponentProjectionStrategy","containerStrategy","contextStrategy","factory","ProjectionStrategy","RootComponentProjectionStrategy","appRef","ApplicationRef","attachView","hostView","TemplateProjectionStrategy","embeddedViewRef","PROJECTION_STRATEGY","AppendComponentToBody","AppendComponentToContainer","AppendTemplateToContainer","PrependComponentToContainer","PrependTemplateToContainer","ProjectComponentToContainer","ProjectTemplateToContainer","LazyLoadService","loaded","loadedLibraries","load","strategyOrUrl","retryTimesOrType","retryDelayOrContent","targetQuery","strategy_1","retryTimes_1","retryDelay_1","CustomEvent","retryWhen","error$","shareReplay","bufferSize","refCount","urlOrUrls","subscriber","library","slice","lastIndexOf","ReplaySubject","text","querySelector","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","trackByDeep","TrackByService","by","byDeep","lowers","uppers","getRandom","chrSet","floor","join","_enum","member"],"mappings":";;;;;;;;;;;;;;;AAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGzB,SAASI,EAAOP,EAAGQ,GACtB,IAAIT,EAAI,GACR,IAAK,IAAIV,KAAKW,EAAOf,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,IAAMmB,EAAEC,QAAQpB,GAAK,IAC9EU,EAAEV,GAAKW,EAAEX,IACb,GAAS,MAALW,GAAqD,mBAAjCf,OAAOyB,sBACtB,CAAA,IAAIT,EAAI,EAAb,IAAgBZ,EAAIJ,OAAOyB,sBAAsBV,GAAIC,EAAIZ,EAAEe,OAAQH,IAC3DO,EAAEC,QAAQpB,EAAEY,IAAM,GAAKhB,OAAOU,UAAUgB,qBAAqBN,KAAKL,EAAGX,EAAEY,MACvEF,EAAEV,EAAEY,IAAMD,EAAEX,EAAEY,KAE1B,OAAOF,EAGJ,SAASa,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HjC,EAAvHkC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO/B,OAAOkC,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIf,EAAIY,EAAWT,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAI8B,EAAWZ,MAAIiB,GAAKD,EAAI,EAAIlC,EAAEmC,GAAKD,EAAI,EAAIlC,EAAE+B,EAAQC,EAAKG,GAAKnC,EAAE+B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKjC,OAAOqC,eAAeR,EAAQC,EAAKG,GAAIA,EAOzD,SAASK,EAAWC,EAAaC,GACpC,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC,GAG7G,SAASE,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAO5B,GAAK0B,EAAO1B,IACpF,SAAS+B,EAASH,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAO5B,GAAK0B,EAAO1B,IACvF,SAAS6B,EAAKG,GAJlB,IAAeJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUzB,MAAMsB,EAASC,GAAc,KAAKS,WAI/D,SAASK,EAAYf,EAASgB,GACjC,IAAsGC,EAAGC,EAAG/C,EAAGgD,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPnD,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOoD,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAET,KAAMe,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOhE,OAAUsD,EACvJ,SAASM,EAAKnD,GAAK,OAAO,SAAUwD,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAM/C,EAAY,EAAR4D,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAO/C,EAAI+C,EAAU,SAAM/C,EAAEM,KAAKyC,GAAI,GAAKA,EAAER,SAAWvC,EAAIA,EAAEM,KAAKyC,EAAGa,EAAG,KAAKlB,KAAM,OAAO1C,EAE3J,OADI+C,EAAI,EAAG/C,IAAG4D,EAAK,CAAS,EAARA,EAAG,GAAQ5D,EAAEqC,QACzBuB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG5D,EAAI4D,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEb,MAAOuB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkB9D,GAAZA,EAAIiD,EAAEG,MAAY/C,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVuD,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc5D,GAAM4D,EAAG,GAAK5D,EAAE,IAAM4D,EAAG,GAAK5D,EAAE,IAAM,CAAEiD,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQlD,EAAE,GAAI,CAAEiD,EAAEC,MAAQlD,EAAE,GAAIA,EAAI4D,EAAI,MAC7D,GAAI5D,GAAKiD,EAAEC,MAAQlD,EAAE,GAAI,CAAEiD,EAAEC,MAAQlD,EAAE,GAAIiD,EAAEI,IAAIU,KAAKH,GAAK,MACvD5D,EAAE,IAAIiD,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKvC,KAAKuB,EAASoB,GAC1B,MAAOxC,GAAKmD,EAAK,CAAC,EAAGnD,GAAIsC,EAAI,EAAI,QAAWD,EAAI9C,EAAI,EACtD,GAAY,EAAR4D,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEvB,MAAOuB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BJ,CAAK,CAACnC,EAAGwD,MA8CtD,SAASK,EAAOC,EAAG9D,GACtB,IAAI+D,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UACjD,IAAKQ,EAAG,OAAOD,EACf,IAAmB9C,EAAYV,EAA3BP,EAAIgE,EAAE5D,KAAK2D,GAAOE,EAAK,GAC3B,IACI,WAAc,IAANhE,GAAgBA,KAAM,MAAQgB,EAAIjB,EAAEqC,QAAQG,MAAMyB,EAAGJ,KAAK5C,EAAEkB,OAExE,MAAO+B,GAAS3D,EAAI,CAAE2D,MAAOA,GACjC,QACQ,IACQjD,IAAMA,EAAEuB,OAASwB,EAAIhE,EAAU,SAAIgE,EAAE5D,KAAKJ,GAE1D,QAAkB,GAAIO,EAAG,MAAMA,EAAE2D,OAE7B,OAAOD,EAGJ,SAASE,IACZ,IAAK,IAAIF,EAAK,GAAIjE,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiE,EAAKA,EAAGG,OAAON,EAAO5D,UAAUF,KACpC,OAAOiE,EC7IX,IAAAI,EAAA,WAqCE,SAAAA,EAAmBC,GAAA9E,KAAA8E,SAAAA,EAvBnB9E,KAAA+E,QAAO,SAAuCpC,GAAK,OAAA,GAGnD3C,KAAAgF,aAAY,SAAyCrC,GAAS,OAAA,GAsB5D3C,KAAKiF,MAAQH,EAASI,IAAIC,EAAAA,mBAyB9B,OA7CE3F,OAAAqC,eACIgD,EAAA3E,UAAA,QAAK,KAST,WACE,OAAOF,KAAKoF,QAAUpF,KAAKqF,kBAX7B,SACU1C,GACRA,EAAQ3C,KAAK+E,QAAO,EAAsB/E,KAAKoF,SAED,IAA1CpF,KAAKgF,aAAarC,EAAO3C,KAAKoF,SAAqBpF,KAAKsF,WAE5DtF,KAAKoF,OAASzC,EACd3C,KAAKuF,sDAOP/F,OAAAqC,eAAIgD,EAAA3E,UAAA,eAAY,KAAhB,WACE,OAAOF,KAAKoF,wCAQdP,EAAA3E,UAAAqF,kBAAA,WACMvF,KAAKwF,UACPxF,KAAKwF,SAASxF,KAAK2C,QAIvBkC,EAAA3E,UAAAuF,WAAA,SAAW9C,GAAX,IAAA+C,EAAA1F,KACEA,KAAKoF,OAASpF,KAAKgF,aAAarC,EAAO3C,KAAKoF,SAAWzC,EACvDgD,YAAU,WAAO,OAAAD,EAAKT,MAAMW,iBAAgB,IAG9Cf,EAAA3E,UAAA2F,iBAAA,SAAiBC,GACf9F,KAAKwF,SAAWM,GAGlBjB,EAAA3E,UAAA6F,kBAAA,SAAkBD,GAChB9F,KAAKgG,UAAYF,GAGnBjB,EAAA3E,UAAA+F,iBAAA,SAAiBC,GACflG,KAAKmG,SAAWD,uBA9DnBE,EAAAA,UAASC,KAAA,CAAC,CAAEC,SAAU,gDAJgBC,EAAAA,8CAWpCC,EAAAA,wBAGAA,EAAAA,uBAGAA,EAAAA,4BAGAA,EAAAA,qBAGAA,EAAAA,SA6CH3B,EAhEA,GCFA,IAAA4B,EAAA,WAEE,SAAAA,EAAmBC,EAAqBC,GAArB3G,KAAA0G,KAAAA,EAAqB1G,KAAA2G,SAAAA,EAC1C,OAFkBF,EAAAG,KAAO,+BAEzBH,EAHA,GAKA,IAAAI,EAAA,WAAA,SAAAA,KAEA,OADkBA,EAAAD,KAAO,iCACzBC,EAFA,GAOA,IAAAC,EAAA,WAEE,SAAAA,EAAmBC,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBD,EAAAF,KAAO,qBAEzBE,EAHA,GAKA,IAAAE,EAAA,WAEE,SAAAA,EAAmBC,GAAAjH,KAAAiH,YAAAA,EACrB,OAFkBD,EAAAJ,KAAO,2BAEzBI,EAHA,GClBA,IAAAE,EAAA,WAEE,SAAAA,EAAmBH,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBG,EAAAN,KAAO,iBAEzBM,EAHA,GAKA,IAAAC,EAAA,WAEE,SAAAA,EAAmBJ,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBI,EAAAP,KAAO,gBAEzBO,EAHA,GCLA,IAAAC,EAAA,WAAA,SAAAA,KAEA,OADkBA,EAAAR,KAAO,gBACzBQ,EAFA,GAIA,IAAAC,EAAA,WAEE,SAAAA,EAAmBN,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBM,EAAAT,KAAO,mBAEzBS,EAHA,GAKA,IAAAC,EAAA,WAEE,SAAAA,EAAmBP,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBO,EAAAV,KAAO,4BAEzBU,EAHA,GCNA,IAAAC,EAAA,WAEE,SAAAA,EAAmBR,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBQ,EAAAX,KAAO,8BAEzBW,EAHA,GCHA,IAAAC,EAAA,WAEE,SAAAA,EAAmBT,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBS,EAAAZ,KAAO,eAEzBY,EAHA,GCAA,IAAAC,EAAA,WAEE,SAAAA,EAAmBV,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBU,EAAAb,KAAO,yBAEzBa,EAHA,GAIA,IAAAC,EAAA,WAEE,SAAAA,EAAmBX,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBW,EAAAd,KAAO,uBAEzBc,EAHA,GAIA,IAAAC,EAAA,WAEE,SAAAA,EAAmBC,GAAA5H,KAAA4H,UAAAA,EACrB,OAFkBD,EAAAf,KAAO,oCAEzBe,EAHA,GAIA,IAAAE,EAAA,WAEE,SAAAA,EAAmBd,GAAA/G,KAAA+G,QAAAA,EACrB,OAFkBc,EAAAjB,KAAO,yBAEzBiB,EAHA,GCZA,SAAgBC,EACdC,EACAC,EACAC,EACAC,QAFA,IAAAF,IAAAA,EAAA,SACA,IAAAC,IAAAA,EAAA,SACA,IAAAC,IAAAA,EAAA,UAEMC,EAAM,SAAGC,GAKb,OAJIA,EAAMC,UAAYD,EAAMC,SAAS1H,SACnCyH,EAAMC,SAAWP,EAAeM,EAAMC,SAAUL,EAAUC,EAAeG,EAAM1B,QAG7E0B,EAAMF,YAAcE,EAAMF,aAAeA,IAC3CD,EAAc5D,KAAK+D,IACZ,IAMX,GAAIF,EAEF,OAAOH,EAAOI,OAAOA,OAGjBG,EAAiBP,EAAOI,OAAOA,GAErC,OAAIF,EAActH,OACT4H,EAAWC,EAAa7D,EAAK2D,EAAmBN,GAAWC,IAG7DK,EAGT,SAAgBE,EACdT,EACAE,GAEA,OAAOF,EAAOU,KAAG,SAACL,GACZA,EAAMC,UAAYD,EAAMC,SAAS1H,SACnCyH,EAAMC,SAAWG,EAAcJ,EAAMC,SAAUJ,QAG3CS,EAAkBT,EAAcE,QAAM,SAACQ,GAAU,OAAAA,EAAOT,aAAeE,EAAM1B,QAKnF,OAJIgC,GAAmBA,EAAgB/H,SACrCyH,EAAMC,SAAQ1D,EAAQyD,EAAMC,UAAY,GAAQK,IAG3CN,KAIX,SAAgBG,EAAWR,GACzB,YADyB,IAAAA,IAAAA,EAAA,IACpBA,EAAOpH,OACLoH,EACJU,KAAG,SAAEL,EAAOQ,GACX,OAAAxI,EAAA,GACKgI,EAAK,CACRS,WAA8B,IAAhBT,EAAMS,MAAwBD,EAAQ,EAAIR,EAAMS,WAGjEC,MAAI,SAAEC,EAAGxJ,GAAM,OAAAwJ,EAAEF,MAAQtJ,EAAEsJ,SAC3BJ,KAAG,SAACL,GAKH,OAJIA,EAAMC,UAAYD,EAAMC,SAAS1H,SACnCyH,EAAMC,SAAWE,EAAWH,EAAMC,WAG7BD,KAdgB,OAkBvBY,EAAU,GAUhB,SAAgBC,IACd,OAAOD,mBCxCP,SAAAE,EAAoBC,EAAoCC,EAAsBC,GAA9E,IAAA3D,EAAA1F,KAAoBA,KAAAmJ,aAAAA,EAAoCnJ,KAAAoJ,MAAAA,EAAsBpJ,KAAAqJ,QAAAA,EAC5EA,EACGC,KAAKC,EAAAA,mBAAmB1C,IACxByC,KAAKE,EAAAA,KAAK,IACVC,WAAS,WACA,IAAAC,GAAAhE,EAAA0D,MAAAO,eAAAC,IAAA,CAAAF,cAAA,KAAAA,cAEFG,GAAoB,IAAIC,MAAOC,UAAY,IAG/CL,EAAcM,cACmB,IAAjCN,EAAcO,gBACdvE,EAAKyD,aAAae,wBACS,IAA3BR,EAAcS,UACdT,EAAcM,aAAeH,GAE7BnE,EAAKyD,aAAaiB,SAGpB1E,EAAK0D,MAAMiB,SAAS,IAAI1C,EAAqB,aAE7C2C,EAAAA,UAAUC,OAAQ,UAAUd,WAAS,SAACe,GACpC9E,EAAK0D,MAAMiB,SAAS,IAAI1C,EAAqB,yBAgEvD,SAtGauB,EAEJA,EAAAuB,YAAP,SAAmBC,GACjB,OADmBA,EAAAC,UAKdzB,EAAA0B,UAAP,SAAiBF,GACf,OADiBA,EAAAG,QAKZ3B,EAAA4B,iBAAP,SAAwBJ,GACtB,OADwBA,EAAAhB,eAgC1BR,EAAAhJ,UAAA6K,YAAA,SAAYL,EAAuDM,OAArDC,EAAAP,EAAAO,WAAYZ,EAAAK,EAAAL,SAKxB,OAJAY,EAAW,CACTN,SAFiEK,EAAAjE,UAK5DsD,EAAS,IAAIxD,IAItBqC,EAAAhJ,UAAAgL,UAAA,SAAUR,EAA6CM,IACrDC,EADUP,EAAAO,YACC,CACTJ,OAFqDG,EAAAjE,WAOzDmC,EAAAhJ,UAAAiL,YAAA,SACET,EACAM,OADEI,EAAAV,EAAAU,SAAUH,EAAAP,EAAAO,WACVd,EAAAa,EAAAjE,QAEM2C,EAAA0B,IAAA1B,cAERuB,EAAW,CACTvB,cAAatJ,EAAA,GACRsJ,EAAa,CAChBS,SAAQA,OAMdjB,EAAAhJ,UAAAmL,qBAAA,SACEX,EACAM,OADEI,EAAAV,EAAAU,SAAUH,EAAAP,EAAAO,WACVrD,EAAAoD,EAAApD,UAGE0D,EAAAF,IAAA1B,eAAA,CAAAO,eAAA,GAAEA,EAAAqB,EAAArB,eAAgBD,EAAAsB,EAAAtB,aAAcuB,EAAAzK,EAAAwK,EAAA,CAAA,iBAAA,iBAGlB,aAAd1D,EACFqC,IACuB,aAAdrC,IACTqC,IACAD,GAAe,IAAIF,MAAOC,aAGvBE,GAAkBA,EAAiB,KACtCA,EAAiB,GAGnBgB,EAAW,CACTvB,cAAatJ,EAAA,CACX6J,eAAcA,EACdD,aAAYA,GACTuB,+CAlFyBC,EAAAA,oBAA6BC,EAAAA,aAAwBC,EAAAA,+BAjBxFC,EAAAA,sDAhBQH,EAAAA,oBAFPC,EAAAA,aALAC,EAAAA,WAoEAE,EAAAA,CADCC,EAAAA,OAAOpE,2DACwEA,mEAShFmE,EAAAA,CADCC,EAAAA,OAAOnE,2DAC4DA,iEAOpEkE,EAAAA,CADCC,EAAAA,OAAOhE,2DAGiBA,mEAazB+D,EAAAA,CADCC,EAAAA,OAAOlE,2DAGSA,4EA3EjBiE,EAAAA,CADCE,EAAAA,0HAMDF,EAAAA,CADCE,EAAAA,wHAMDF,EAAAA,CADCE,EAAAA,+HAXU5C,EAAYU,EAAAzI,EAAA,CALxB4K,EAAAA,MAAqB,CACpBrF,KAAM,eACNsF,SAAQ,CAAItC,cAAe,CAAEO,eAAgB,6BAmBXuB,EAAAA,aAA6BC,EAAAA,MAAwBC,EAAAA,WAhB5ExC,uBC4KX,SAAA+C,EAAoBC,EAA0B9C,GAA1BpJ,KAAAkM,KAAAA,EAA0BlM,KAAAoJ,MAAAA,QAqHhD,SAnSa6C,EAEJA,EAAAE,OAAP,SAAcC,GACZ,OAAOA,GAIFH,EAAAI,mBAAP,SAA0BD,GACxB,OAAOA,EAAMnF,YAAYqF,aAAW,IAG/BL,EAAAM,OAAP,SAAcjL,GAKZ,OAJiBkL,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,OAAOA,EAAM9K,OAMV2K,EAAAS,QAAP,SAAeC,GAKb,GAJoB,iBAATA,IACTA,EAAOA,EAAKC,MAAM,OAGfjN,MAAMkN,QAAQF,GACjB,MAAM,IAAIG,MAAM,yDAalB,OAViBN,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,OAAO,EAAmBW,QAAM,SAAEC,EAAKC,GACrC,GAAID,EACF,OAAOA,EAAIC,KAIZb,OAMAH,EAAAiB,SAAP,SAAgBC,EAAezG,EAAe0G,GAc5C,OAbiBZ,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAE9C,OADQA,EAAAiB,cACkCC,MAAI,SAAClF,GAC7C,OAAI+E,GAAQ/E,EAAM+E,OAASA,EAClB/E,EACE1B,GAAQ0B,EAAM1B,OAASA,EACzB0B,EACEgF,GAAOhF,EAAMgF,MAAQA,EACvBhF,OADF,SASN6D,EAAAsB,UAAP,SAAiBjM,GAKf,OAJiBkL,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,OAAQA,EAAMnF,YAAYuG,KAAKlM,GAAO,YAAc8K,EAAMnF,YAAYuG,KAAKC,SAASL,QAMjFnB,EAAAyB,WAAP,SAAkBpM,GAKhB,OAJiBkL,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,OAAOuB,GAAG,WAAO,OAAAvB,EAAMwB,QAAQC,OAAOvM,UAMnC2K,EAAA6B,YAAP,SAAmBC,GAcjB,OAbiBvB,EAAAA,eAAe,CAACC,IAAY,SAAGL,OACxC4B,EAAWL,GAAG,WAAO,OAAAvB,EAAMwB,QAAQC,SAAQ,IAEjD,OAAKE,EAEavO,OAAOmN,KAAKqB,GAAU7F,QAAM,SAAC7G,GAAO,OAAAA,EAAIN,QAAQ+M,IAAY,KAE7DhB,QAAM,SAAEC,EAAK1L,GAE5B,OADA0L,EAAI1L,GAAO0M,EAAS1M,GACb0L,IACN,IAPkBgB,MAalB/B,EAAAgC,iBAAP,SAAwB3M,GAyBtB,OAxBiBkL,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,IAAK9K,EAAK,OAAO,MAaTqL,EAZFuB,EAAS,SAAGC,GAAK,OAAAR,GAAG,WAAO,OAAAvB,EAAMgC,KAAKC,gBAAgBF,MAAI,IAKhE,MAHiB,QAGJG,KAAKhN,GAGI,KAFdqL,EAAOrL,EAAIsL,MAAM,MAAMzE,QAAM,SAACgG,GAAK,QAAEA,MAElCxN,SAEFuN,EAAUvB,EAAK,GAAG4B,SAAWL,EAAUvB,EAAK,GAAG4B,SAPtC,MAQGD,KAAKhN,GAGJ,KAFdqL,EAAOrL,EAAIsL,MAAM,MAAMzE,QAAM,SAACgG,GAAK,QAAEA,MAElCxN,SAEFuN,EAAUvB,EAAK,GAAG4B,SAAWL,EAAUvB,EAAK,GAAG4B,SAGjDL,EAAU5M,OAMd2K,EAAAuC,gBAAP,SACElN,OACA,IAGI+D,EAHJoJ,EAAA,GAAAC,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAAD,EAAAC,EAAA,GAAAhO,UAAAgO,GAEKpN,IAAKA,EAAM,IAGG,iBAARA,IACT+D,EAAe/D,EAAI+D,aACnB/D,EAAMA,EAAIA,SAGNqL,EAAOrL,EAAIsL,MAAM,MACjB+B,EAAWnC,EAAAA,eAAe,CAACC,IAAY,SAAGL,GAC9C,IAAKA,EAAMwC,aAAc,OAAOvJ,GAAgB/D,MAE1CuN,EAAsBlB,GAAG,WAAO,OAAAvB,EAAMnF,YAAY2H,aAAaC,uBACrE,GAAgB,KAAZlC,EAAK,GAAW,CAClB,IAAKkC,EACH,MAAM,IAAI/B,MACR,qRAUJH,EAAK,GAAKkC,MAGRD,EAAe,EAAc7B,QAAM,SAAEC,EAAKC,GAC5C,GAAID,EACF,OAAOA,EAAIC,KAIZb,EAAMwC,aAAaf,QAUtB,OARAY,EAAoBA,EAAkBtG,QAAM,SAAC2G,GAAU,OAAU,MAAVA,KACnDF,GAAgBH,GAAqBA,EAAkB9N,QACzD8N,EAAkBM,SAAO,SAACC,GACxBJ,EAAeA,EAAaK,QAAQ,0BAA2BD,MAIvC,iBAAjBJ,IAA2BA,EAAe,IAC9CA,GAAgBvJ,GAAgB/D,KAGzC,OAAOqN,GAMT1C,EAAA/L,UAAAgP,QAAA,SAAQxE,GADR,IAAAhF,EAAA1F,KACUiL,EAAAP,EAAAO,WAAYZ,EAAAK,EAAAL,SACd8E,EAAUnP,KAAKoJ,MAAMO,eAAe8C,EAAYC,QAAQ,iCACxD0C,EAAMpP,KAAKoJ,MAAMO,eAAe8C,EAAYc,UAAU4B,IAC5D,OAAOnP,KAAKkM,KACThH,IAA0CkK,EAAG,sCAC7C9F,KACC+F,EAAAA,KAAG,SAACC,GACF,OAAArE,EAAU7K,EAAA,GACLkP,OAGPC,EAAAA,WAAS,SAACD,OACJE,EACFF,EAAc1B,QAAQC,OAAO,oCAM/B,OAJI2B,EAAYC,SAAS,OACvBD,EAAcA,EAAY5C,MAAM,KAAK,IAGhClH,EAAK0D,MAAMO,eAAeT,EAAauB,aAC1CiF,EAAAA,GAAG,MACHrF,EAAS,IAAI5C,EAAY+H,OAE/BG,EAAAA,YAAU,SAACC,GAET,OADAvF,EAAS,IAAI7C,EAAe,IAAIqI,EAAAA,kBAAkB,CAAEC,OAAQ,EAAGpL,MAAOkL,MAC/DG,EAAAA,WAAWH,QAM1B3D,EAAA/L,UAAA8P,WAAA,SACEtF,EACAM,OADEC,EAAAP,EAAAO,WAAYG,EAAAV,EAAAU,SACZ1E,EAAAsE,EAAAtE,KAAMC,EAAAqE,EAAArE,SAEJoB,EAA0BqD,IAAWrD,OAEzCA,EA+EJ,SAASkI,EACPlI,EACArB,EACAC,EACAuJ,QAAA,IAAAA,IAAAA,EAAA,IAEAnI,EAASA,EAAOU,KAAG,SAACL,GAClB,OAAIA,EAAM1B,OAASA,GACjBC,EAASyG,IAAS8C,EAAS,MAAMvJ,EAASwG,MAA0B,KAAlBxG,EAASwG,KAEvDxG,EAASwG,KADT/E,EAAM+E,OACY,IAElBxG,EAAS0B,UAAY1B,EAAS0B,SAAS1H,SACzCgG,EAAS0B,SAAW1B,EAAS0B,SAASI,KAAG,SAAC0H,GAAS,OAAA/P,EAAA,GAC9C+P,EAAK,CACR/C,KAAQzG,EAASyG,IAAG,IAAI+C,EAAMhD,MAAO8B,QAAQ,KAAM,WAIvD7O,EAAA,GAAYgI,EAAUzB,KACbyB,EAAMC,UAAYD,EAAMC,SAAS1H,SAC1CyH,EAAMC,SAAW4H,EACf7H,EAAMC,SACN3B,EACAC,GACCuJ,GAAa,KAAO9H,EAAM+E,OAIxB/E,MAGT,GAAI8H,EAEF,OAAOnI,EAGT,OAAOD,EAAeC,GApHXkI,CAAelI,EAAQrB,EAAMC,OAEhC0G,EAAgBjC,IAAWiC,cAC3BzE,EAAQyE,EAAc+C,WAAS,SAAChI,GAAS,OAAAA,EAAM1B,OAASA,KAM9D,OAJIkC,GAAS,IACXyE,EAAczE,GAAMxI,EAAA,GAAQiN,EAAczE,GAAWjC,IAGhDsE,EAAW,CAChBlD,OAAMA,EACNsF,cAAaA,KAKjBpB,EAAA/L,UAAAmQ,SAAA,SAAS3F,EAAsDM,OAApDC,EAAAP,EAAAO,WAAYG,EAAAV,EAAAU,SAA0CrE,EAAAiE,EAAAjE,QAC3DgB,EAA0BqD,IAAWrD,OACnCsF,EAAgBjC,IAAWiC,cAC3BjF,EAAKhI,EAAA,GAAuB2G,GAElC,GAAIqB,EAAMF,WAAY,KACdU,EAAQyE,EAAc+C,WAAS,SAAC3O,GAAK,OAAAA,EAAEiF,OAAS0B,EAAMF,cAE5D,GAAIU,EAAQ,EAAG,WAET0H,EAASjD,EAAczE,IACxB0H,EAAOlD,KAAO,IAAI6B,QAAQ,IAAK,IAClC7G,EAAMgF,IAASkD,EAAOlD,IAAG,IAAIhF,EAAM+E,KAEnC/E,EAAMgF,IAAM,IAAIhF,EAAM+E,KAGxB/E,EAAMC,SAAWD,EAAMC,UAAY,GACnCD,EAAMS,MAAQT,EAAMS,OAAyB,IAAhBT,EAAMS,MAAcT,EAAMS,OAASyH,EAAOjI,UAAY,IAAI1H,OACvF2P,EAAOjI,SAAWkI,EAAKD,EAAOjI,UAAY,GAAE,CAAGD,IAAOU,MAAI,SAAEC,EAAGxJ,GAAM,OAAAwJ,EAAEF,MAAQtJ,EAAEsJ,SAEjFwE,EAAczE,GAAS0H,EACvBjD,EAAchJ,KAAK+D,GAKnB,QAHIoI,EAAaF,EAAO5J,KAClBuB,EAAgB,CAACuI,GAEhBA,IACLA,EAAa7C,GAAG,WAAO,OAAAN,EAAcC,MAAI,SAAC7L,GAAK,OAAAA,EAAEiF,OAAS8J,KAAYtI,gBAGpED,EAAcwI,QAAQD,GAI1BzI,EAoEN,SAAS2I,EACP3I,EACAE,EACAtB,EACAgK,QAAA,IAAAA,IAAAA,EAAA,OAEM/H,EAAQb,EAAOqI,WAAS,SAAChI,GAAS,OAAAA,EAAM1B,OAASuB,EAAc0I,MAEjEA,IAAgB1I,EAActH,OAAS,EACzCoH,EAAOa,GAASjC,EAEhBoB,EAAOa,GAAOP,SAAWqI,EACvB3I,EAAOa,GAAOP,SACdJ,EACAtB,EACAgK,EAAc,GAIlB,OAAO5I,EAvFM2I,CAAgB3I,EAAQE,EAAeqI,QAEhDlI,EAAMgF,IAAM,IAAIhF,EAAM+E,KAElB/E,EAAMS,OAAyB,IAAhBT,EAAMS,MACvBd,EAASwI,EAAIxI,EAAM,CAAEK,IAAOU,MAAI,SAAEC,EAAGxJ,GAAM,OAAAwJ,EAAEF,MAAQtJ,EAAEsJ,UAEvDT,EAAMS,MAAQd,EAAOpH,OACrBoH,EAAMpD,EAAOoD,EAAM,CAAEK,KAGvBiF,EAAchJ,KAAK+D,GAGrB,OAAO6C,EAAW,CAChBlD,OAAMA,EACNsF,cAAaA,KAKjBpB,EAAA/L,UAAA0Q,eAAA,SAAelG,EAA4CM,GACzD,OAAOC,EADQP,EAAAO,YACG,CAChBhE,YAFyD+D,EAAA/D,wDAhHnC4J,EAAAA,kBAA2BpF,EAAAA,6BA/KtDE,EAAAA,sDAxBQkF,EAAAA,kBAEuDpF,EAAAA,SAwM9DG,EAAAA,CADCC,EAAAA,OAAOhF,wHAgCR+E,EAAAA,CADCC,EAAAA,OAAOpF,2DAGcA,kEAoBtBmF,EAAAA,CADCC,EAAAA,OAAO/E,2DACoEA,gEAwD5E8E,EAAAA,CADCC,EAAAA,OAAO7E,2DACoEA,sEA5R5E4E,EAAAA,CADCE,EAAAA,qHAMDF,EAAAA,CADCE,EAAAA,iIANUG,EAAWQ,EAAAtL,EAAA,CALvB4K,EAAAA,MAAoB,CACnBrF,KAAM,cACNsF,SAAQ,4BAiLkB6E,EAAAA,WAA2BpF,EAAAA,SA9K1CQ,2CC0Bb,SAxCa6E,EAEJA,EAAA3E,OAAP,SAAczB,GAGZ,OAFAA,EAAAqG,uBAEgC,IAG3BD,EAAAE,aAAP,SAAoB1P,GAQlB,OAPiBkL,EAAAA,eACf,CAACyE,IAA2B,SAC3B7E,GACC,OAAOuB,GAAG,WAAO,OAAAvB,EAAM2E,sBAAsBzD,MAAI,SAAC4D,GAAa,OAAAA,EAAU5P,MAAQA,YAQvFwP,EAAA5Q,UAAAiR,4BAAA,SACEzG,EACAM,OADEI,EAAAV,EAAAU,SAAUH,EAAAP,EAAAO,WACVlE,EAAAiE,EAAAjE,QAEIgK,EAAA3F,IAAA2F,sBAEAnI,EAAQ+E,GAAG,WACT,OAAAoD,EAAsBX,WAAS,SAACc,GAAa,OAAAA,EAAU5P,MAAQyF,EAAQzF,UAC5E,GAECsH,GAAS,EACXmI,EAAsBnI,GAAS7B,EAE/BgK,EAAqBpM,EAAOoM,EAAqB,CAAEhK,IAGrDkE,EAAW,CACT8F,sBAAqBA,yBAtC1BpF,EAAAA,aAqBCC,EAAAA,CADCC,EAAAA,OAAOtE,2DAGOA,mFApBfqE,EAAAA,CADCE,EAAAA,oHADUgF,EAA0BG,EAAA9P,EAAA,CALtC4K,EAAAA,MAAmC,CAClCrF,KAAM,6BACNsF,SAAQ,CAAI+E,sBAAuB,OAGxBD,MCRb,SAASM,EAAWzO,GAClB,MAAwB,mBAAVA,EAGhB,IAAa0O,EAAgB,SAAIC,EAAmBC,eAAA,IAAAA,IAAAA,EAAA,wBAClDC,OAEMC,EAAkBH,EAAkBC,GAC1C,IAAoC,IAAhCH,EAAWK,GACb,MAAM,IAAI3E,MACLwE,EAAkBrR,YAAYyG,KAAI,kDAAkD6K,GAa3F,OAVKD,EAAsC,qBACzCA,EAAsC,mBAAI,IAAII,EAAAA,QAE9CJ,EAAkBC,GAAkB,WAElCH,EAAWK,IAAoBA,EAAgB5Q,MAAMb,KAAMU,WAC3D4Q,EAAsC,mBAAEzO,MAAK,GAC7CyO,EAAsC,mBAAEK,aAGrCH,EAAOlI,KAAKsI,EAAAA,UAAaN,EAAsC,oCCFtE,SAAAO,EAAoBC,EAAwB1J,EAA+BgB,GAA3E,IAAA1D,EAAA1F,KAAoBA,KAAA8R,OAAAA,EAAwB9R,KAAAoI,MAAAA,EAA+BpI,KAAAoJ,MAAAA,EACjE,IAAArB,EAAA/H,KAAAoJ,MAAAO,eAAAsC,EAAAE,QAAApE,OAER+J,EAAOC,OAAOzI,KAAK+H,EAAiBrR,OAAOyJ,WAAS,SAACe,GACnD,GAAIA,aAAiBwH,EAAAA,cAAe,KAC5BC,EAAWtE,GAAG,WAAO,OAAAmE,EAAOI,SAAS1H,EAAM4C,KAAK+E,KAAK9J,SAAS+J,QAAQH,WAAQ,CAClF,CAAE9E,KAAM2E,EAAO1E,IAAI6B,QAAQ,IAAK,OAG5BoD,EAAU,CACd/F,YAAa5G,EAAKsL,aAAa,oCAC/BsB,QAAS5M,EAAKsL,aAAa,gCAC3BuB,MAAO7M,EAAKsL,aAAa,+BAGrBwB,GACH9M,EAAK0C,MAAMqK,SAASC,MAAQ,IAAIC,QAc3C,SAAoBV,EAAwBlK,OACtC4K,EAAM,QAEJvK,EAAQL,EACXgF,QAAM,SAAEC,EAAKC,GAAQ,OAACA,EAAI2F,QAAOjO,EAAOqI,EAAQC,EAAI5E,UAAQ1D,EAAQqI,EAAG,CAAEC,MAAO,IAChFK,MAAI,SAAC7L,GAAK,OAAAA,EAAE0L,OAAS8E,EAAS,GAAG9E,QAEpC,GAAI/E,IACEA,EAAMuK,SACRA,EAASvK,EAAMuK,QAGbvK,EAAMC,UAAYD,EAAMC,SAAS1H,QAAUsR,EAAStR,OAAS,GAAG,KAC5DwP,EAAQ/H,EAAMC,SAASiF,MAAI,SAAC9L,GAAK,OAAAA,EAAE2L,OAAS8E,EAAS,GAAG9E,QAE1DgD,GAASA,EAAMwC,SACjBA,EAASxC,EAAMwC,QAKrB,OAAOA,EAnC4CE,CAAWZ,EAAUlK,GAElErC,EAAKiN,OAASN,EAAQG,GAAgBtB,cAU9C,OALUW,EAAA3R,UAAA8Q,aAAR,SAAqB1P,GACnB,OAAOtB,KAAKoJ,MAAMO,eAAemH,EAA2BE,aAAa1P,KAG3EuQ,EAAA3R,UAAA4S,YAAA,iCAxCD1M,EAAAA,UAASC,KAAA,CAAC,CACTsI,SAAU,qBACVrI,SAAU,0VAZ4ByM,EAAAA,cAA/BC,EAAAA,sBACAvH,EAAAA,SAkDToG,KCpDA,IAAAoB,EAAA,WAsBE,SAAAA,EAAoB7K,EAA+BgB,GAA/BpJ,KAAAoI,MAAAA,EAA+BpI,KAAAoJ,MAAAA,EAgBrD,OAdE6J,EAAA/S,UAAAgT,SAAA,WAAA,IAAAxN,EAAA1F,KACEA,KAAKmT,iBAAmBnT,KAAKoI,MAAMqK,SAASC,KAAKU,qBAAqBD,iBACtEnT,KAAKqT,aAAgBrT,KAAKoI,MAAMqK,SAASC,KAClB,qBAAqCpR,IAE5DtB,KAAKoJ,MACFkK,OAAOxC,EAA2BE,aAAahR,KAAKqT,eACpD/J,KAAK+H,EAAiBrR,MAAOuT,EAAAA,wBAC7B9J,WAAS,SAAE+J,QAAA,IAAAA,IAAAA,EAAA,IACV9N,EAAK+N,kBAAoBD,EAAItC,cAInC+B,EAAA/S,UAAA4S,YAAA,iCA5BD1M,EAAAA,UAASC,KAAA,CAAC,CACTsI,SAAU,kCACVrI,SAAU,kJAVH0M,EAAAA,sBACAvH,EAAAA,SAoCTwH,EAtCA,GCAA,IAAAS,EAAA,WAEA,SAAAA,KAMoC,2BANnCtN,EAAAA,UAASC,KAAA,CAAC,CACTsI,SAAU,oBACVrI,SAAU,gDAIwBoN,EARpC,GCGAC,GAAe,CACbC,QAAS,QACTC,iBAAkB,iBAClBC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,IAAK,KACLC,IAAK,KACLC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,QAAS,KACTC,UAAW,KACXC,QAAS,KACTC,UAAW,UACXC,aAAc,UACdC,aAAc,UACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,UAAW,MC/BbC,GAAA,WAUE,SAAAA,EAAoBC,GAAAzV,KAAAyV,MAAAA,EAFpBzV,KAAA0V,MAAQ,EAOV,OAHEF,EAAAtV,UAAAyV,gBAAA,WAAA,IAAAjQ,EAAA1F,KACE2F,YAAU,WAAO,OAAAD,EAAK+P,MAAMG,cAAcC,UAAS7V,KAAK0V,4BAX3DI,EAAAA,UAASzP,KAAA,CAAC,CAETsI,SAAU,2DAJQoH,EAAAA,6CAOjBvP,EAAAA,MAAKH,KAAA,CAAC,gBAQTmP,EAfA,GCAA,IAAAQ,GAAA,WAsBE,SAAAA,EAAoBC,GAAAjW,KAAAiW,GAAAA,EAJXjW,KAAAkW,SAAW,IAEelW,KAAAmW,cAAgB,IAAIC,EAAAA,aAazD,OATEJ,EAAA9V,UAAAgT,SAAA,WAAA,IAAAxN,EAAA1F,KACEsK,EAAAA,UAAUtK,KAAKiW,GAAGL,cAAe,SAC9BtM,KAAK+M,EAAAA,aAAarW,KAAKkW,UAAW7E,EAAiBrR,OACnDyJ,WAAS,SAAEe,GACV9E,EAAKyQ,cAAcG,KAAK9L,OAI9BwL,EAAA9V,UAAA4S,YAAA,iCAnBDgD,EAAAA,UAASzP,KAAA,CAAC,CAETsI,SAAU,gEAbVoH,EAAAA,gDAgBCvP,EAAAA,6BAEA+P,EAAAA,OAAMlQ,KAAA,CAAC,qBAaV2P,EAjCA,GCAA,IAAAQ,GAAA,WA+BE,SAAAA,EAAoBvR,EAAkCwQ,GAAlCzV,KAAAiF,MAAAA,EAAkCjF,KAAAyV,MAAAA,EAjBtDzV,KAAAyW,SAAU,EAuBZ,OArBEjX,OAAAqC,eACI2U,EAAAtW,UAAA,cAAW,KADf,WAEE,OAAOF,KAAKyW,SAAWzW,KAAK0W,uCAG9BlX,OAAAqC,eACI2U,EAAAtW,UAAA,QAAK,KADT,WAEE,OAAOF,KAAKyW,UAAYzW,KAAK0W,uCAG/BlX,OAAAqC,eACI2U,EAAAtW,UAAA,WAAQ,KADZ,WAEE,OAAOF,KAAKyW,SAAWzW,KAAK0W,MAAQ1W,KAAK0W,OAAS,aAAUC,mCAK9DH,EAAAtW,UAAAyV,gBAAA,WACE3V,KAAK4W,MAAQ5W,KAAK4W,OAAU5W,KAAKyV,MAAmB,cAAiBoB,UACrE7W,KAAKiF,MAAM6R,qCAjCdhB,EAAAA,UAASzP,KAAA,CAAC,CACTsI,SAAU,6DAHYxJ,EAAAA,yBAA8B4Q,EAAAA,6CAMnDvP,EAAAA,MAAKH,KAAA,CAAC,8BAGN0Q,EAAAA,YAAW1Q,KAAA,CAAC,UAAO,CAAAO,KACnBJ,EAAAA,uBAGAA,EAAAA,MAAKH,KAAA,CAAC,2CAGN0Q,EAAAA,YAAW1Q,KAAA,CAAC,4CAKZ0Q,EAAAA,YAAW1Q,KAAA,CAAC,wCAKZ0Q,EAAAA,YAAW1Q,KAAA,CAAC,sBAWfmQ,EArCA,GCAA,IAAAQ,GAmBE,SAAmBC,EAAuBrO,EAAsBsO,EAAsBC,GAAnEnX,KAAAiX,UAAAA,EAAuBjX,KAAA4I,MAAAA,EAAsB5I,KAAAkX,MAAAA,EAAsBlX,KAAAmX,KAAAA,GAGxF,IAAAC,GACE,SAAmBC,EAA0CC,GAA1CtX,KAAAqX,OAAAA,EAA0CrX,KAAAsX,KAAAA,GAG/D,IAAAC,GAAA,WAwCE,SAAAA,EACUC,EACAC,EACAC,GAFA1X,KAAAwX,QAAAA,EACAxX,KAAAyX,MAAAA,EACAzX,KAAA0X,QAAAA,EA4GZ,OAvHElY,OAAAqC,eAAI0V,EAAArX,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK2X,WAAaC,mCAG3BpY,OAAAqC,eAAI0V,EAAArX,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK6X,SAAO,SAAMjP,EAAekP,GAAc,OAAA,EAAcC,IAAMnP,oCASpE2O,EAAArX,UAAA8X,6BAAR,SAAqCC,GAArC,IAAAvS,EAAA1F,KACQkY,EAAmB,GAEzBD,EAAQE,kBAAgB,SAAEd,EAAmCe,EAAuBC,GAClF,GAA4B,MAAxBhB,EAAOe,cAAuB,KAC1Bd,EAAO5R,EAAK+R,MAAMa,mBACtB5S,EAAK8R,QACL,IAAIR,GAAc,MAAO,GAAI,EAAGtR,EAAK6S,OACrCF,GAGFH,EAAG7T,KAAK,IAAI+S,GAAWC,EAAQC,SAC1B,GAAoB,MAAhBe,EACT3S,EAAK+R,MAAMe,OAAOJ,OACb,CACCd,EAAO5R,EAAK+R,MAAMvS,IAAIkT,GAC5B1S,EAAK+R,MAAMgB,KAAKnB,EAAMe,GAEtBH,EAAG7T,KAAK,IAAI+S,GAAWC,EAAM,QAIjC,IAAK,IAAI7W,EAAI,EAAGkY,EAAIR,EAAGvX,OAAQH,EAAIkY,EAAGlY,IACpC0X,EAAG1X,GAAG8W,KAAKqB,QAAQ1B,UAAYiB,EAAG1X,GAAG6W,OAAOS,MAIxCP,EAAArX,UAAA0Y,yBAAR,SAAiCX,GAC/B,IADF,IAAAvS,EAAA1F,KACWQ,EAAI,EAAGkY,EAAI1Y,KAAKyX,MAAM9W,OAAQH,EAAIkY,EAAGlY,IAAK,KAC3CqY,EAAU7Y,KAAKyX,MAAMvS,IAAI1E,GAC/BqY,EAAQF,QAAQ/P,MAAQpI,EACxBqY,EAAQF,QAAQzB,MAAQwB,EACxBG,EAAQF,QAAQxB,KAAOnX,KAAKuY,MAG9BN,EAAQa,uBAAqB,SAAEzB,GACb3R,EAAK+R,MAAMvS,IAAImS,EAAOgB,cAC9BM,QAAQ1B,UAAYI,EAAOS,SAI/BP,EAAArX,UAAA6Y,aAAR,SAAqBR,GACnB,IAAKA,EAAM5X,QAAUX,KAAKgZ,SAOxB,OANAhZ,KAAKyX,MAAMwB,QAEXjZ,KAAKyX,MAAMa,mBAAmBtY,KAAKgZ,UAAUE,UAC7ClZ,KAAKmZ,gBAAiB,OACtBnZ,KAAKoZ,OAAS,MAchB,GATIpZ,KAAKgZ,UAAYhZ,KAAKmZ,iBACxBnZ,KAAKyX,MAAMwB,QACXjZ,KAAKmZ,gBAAiB,IAGnBnZ,KAAKoZ,QAAUb,IAClBvY,KAAKoZ,OAASpZ,KAAK0X,QAAQpK,KAAKiL,GAAOpY,OAAOH,KAAKqZ,YAGjDrZ,KAAKoZ,OAAQ,KACTnB,EAAUjY,KAAKoZ,OAAOE,KAAKf,GAE7BN,IACFjY,KAAKgY,6BAA6BC,GAClCjY,KAAK4Y,yBAAyBX,MAK5BV,EAAArX,UAAAqZ,UAAR,SAAkBhB,GAAlB,IAAA7S,EAAA1F,KACMA,KAAKwZ,QACPjB,EAAMzP,MAAI,SAAEC,EAAGxJ,GAAM,OAACwJ,EAAErD,EAAK8T,SAAWja,EAAEmG,EAAK8T,SAAW,EAAIzQ,EAAErD,EAAK8T,SAAWja,EAAEmG,EAAK8T,UAAY,EAAI,KAEvGjB,EAAMzP,QAIVyO,EAAArX,UAAAuZ,YAAA,WAAA,IAAA/T,EAAA1F,KACMuY,EAAQmB,EAAM1Z,KAAKuY,OACvB,GAAK5Y,MAAMkN,QAAQ0L,GAAnB,KAEMoB,EAAY3Z,KAAK2Z,UAMvB,YAJ6B,IAAlB3Z,KAAK4Z,eAAsD,IAAnB5Z,KAAK6Z,WAAgD,KAAnB7Z,KAAK6Z,YACxFtB,EAAQA,EAAMpQ,QAAM,SAAC2P,GAAQ,OAAA6B,EAAU7B,EAAKpS,EAAKkU,UAAWlU,EAAKmU,eAG3D7Z,KAAK8Z,UACX,IAAK,MACH9Z,KAAKuZ,UAAUhB,GACfvY,KAAK+Y,aAAaR,GAClB,MAEF,IAAK,OACHvY,KAAKuZ,UAAUhB,GACfA,EAAMwB,UACN/Z,KAAK+Y,aAAaR,GAClB,MAEF,QACEvY,KAAK+Y,aAAaR,0BApJzBzC,EAAAA,UAASzP,KAAA,CAAC,CACTsI,SAAU,wDAlBVqL,EAAAA,mBAEAC,EAAAA,wBAJAC,EAAAA,kDAuBC1T,EAAAA,MAAKH,KAAA,CAAC,6BAGNG,EAAAA,MAAKH,KAAA,CAAC,mCAGNG,EAAAA,MAAKH,KAAA,CAAC,oCAGNG,EAAAA,MAAKH,KAAA,CAAC,qCAGNG,EAAAA,MAAKH,KAAA,CAAC,oCAGNG,EAAAA,MAAKH,KAAA,CAAC,oCAGNG,EAAAA,MAAKH,KAAA,CAAC,qCAGNG,EAAAA,MAAKH,KAAA,CAAC,qBA8HTkR,EAvJA,GC1BA,SAAgB4C,KAGd,OADQ,aAIV,SAAgBC,GAAyBzX,GACvC,YAAiBgU,IAAVhU,GAAiC,KAAVA,ECPhC,SAAgB0X,GAAS1X,GAEvB,OAAOA,GAAS2X,OAAO3X,GCAzB,SAAgB4X,GAAKxR,GACnB,OAAOA,GACFA,EAAsB,GAAhByR,KAAKC,UAAmB1R,EAAI,GAAK2R,SAAS,KAChD,GAAK,KAAO,KAAO,KAAO,KAAO,MAAMzL,QAAQ,SAAUsL,IAGhE,SAAgBI,GAAahY,GAI3B,QAHIiY,EAAS,EAGJpa,EAAI,EAAGA,EAAImC,EAAMhC,OAAQH,IAEhCoa,GAAUA,GAAU,GAAKA,EADdjY,EAAMkY,WAAWra,GAE5Boa,GAAU,EAEZ,OAAOA,ECdT,IAAaE,GAAe,IAAIC,EAAAA,eAAyB,gBCQzD,SAAgBC,GAAelW,GAa7B,OAZQ,eACAsE,EAAetE,EAASI,IAAIuG,EAAAA,OAGlC,IAFQ3G,EAAAI,IAAA4V,IAAAG,wBAIR,OAAO7R,EACJiB,SAAS,IAAIxD,GACbyC,KAAK+F,EAAAA,KAAG,SAACmE,GAAO,OAOvB,SAA0BpK,EAActE,OAChCoW,EAAQpW,EAASI,IAAIsG,EAAAA,cACvB0P,EAAMhR,wBAA0Bd,EAAMO,eAAesC,EAAYS,QAAQ,oBAC3EwO,EAAM9Q,SAVa+Q,CAAiB/R,EAAOtE,OACxCsW,aAaP,SAAgBC,GAAkBvW,GAWhC,OAVQ,eAGAwW,EAFexW,EAASI,IAAIuG,EAAAA,OAEf9B,gBAAc,SAACyC,GAAS,OAAAA,EAAMlD,aAAayB,aAAa,KAE3E,OAAO,IAAIpI,SAAO,SAAEC,EAASC,GAC3B8Y,GAAeD,GAAMrY,MAAI,WAAO,OAAAT,EAAQ,cAAaC,OAO3D,SAAgB8Y,GAAeC,GAC7B,OAAOC,OAEL,4BAA2BC,GAAiBF,IAAWA,GAAM,OAC7DvY,MAAI,SAAC0Y,GACLC,EAAAA,mBAAmBD,EAAOlO,YCrD9B,IAAAoO,GAAA,WACE,SAAAA,EAAmBC,EAAqDC,GAArD/b,KAAA8b,YAAAA,EAAqD9b,KAAA+b,UAAAA,EAM1E,OAJEF,EAAA3b,UAAA8b,eAAA,SAAsCC,GAChCjc,KAAK+b,WAAWE,EAAQC,aAAa,YAAalc,KAAK+b,WAC3DE,EAAQC,aAAa,cAAelc,KAAK8b,cAE7CD,EAPA,GASA,IAAaM,GAAwB,CACnCC,UAAA,SAAUL,GACR,OAAO,IAAIF,GAAoB,YAAaE,IAE9CM,eAAA,SAAeN,GACb,OAAO,IAAIF,GAAoB,kBAAmBE,KCdtDO,GAAA,WACE,SAAAA,EACSjb,EACAkb,QADA,IAAAlb,IAAAA,EAAsBmb,SAASC,WAC/B,IAAAF,IAAAA,EAAA,aADAvc,KAAAqB,OAAAA,EACArB,KAAAuc,SAAAA,EAMX,OAHED,EAAApc,UAAAwc,cAAA,SAAqCT,GACnCjc,KAAKqB,OAAOsb,sBAAsB3c,KAAKuc,SAAUN,IAErDK,EATA,GAWA,IAAaM,GAAe,CAC1BC,aAAA,SAAaZ,GACX,OAAO,IAAIK,GAAYL,EAAS,aAElCa,wBACE,OAAO,IAAIR,GAAYE,SAASrZ,KAAM,cAExC4Z,wBACE,OAAO,IAAIT,GAAYE,SAASC,KAAM,cAExCO,cAAA,SAAcf,GACZ,OAAO,IAAIK,GAAYL,EAAS,gBAElCgB,yBACE,OAAO,IAAIX,GAAYE,SAASC,KAAM,gBCrB1C,SAAgBS,GACdjB,EACAkB,EACAC,GAKA,YANA,IAAAD,IAAAA,EAA2BP,GAAaG,qBACxC,IAAAK,IAAAA,EAA2CjB,GAAsBC,aAEjEgB,EAAoBpB,eAAeC,GACnCkB,EAAYT,cAAcT,GAEnB,IAAIoB,EAAAA,YAAU,SAAEC,GACrBrB,EAAQsB,OAAM,SAAI/S,GAChBgT,GAAevB,GACfqB,EAASza,KAAK2H,GACd8S,EAAS3L,gBAGL8L,EAeV,SAA4BH,EAA2BrB,GAErD,OAAA,SAAgBzR,GACdgT,GAAevB,GACfA,EAAQyB,WAAWC,YAAY1B,GAC/BqB,EAAS5Y,MAAM8F,IApBKoT,CAAmBN,EAAUrB,GAQjD,OANAA,EAAQ4B,QAAUJ,EAClBxB,EAAQ6B,QAAUL,EAClBxB,EAAQ8B,UAAYN,EACpBxB,EAAQ+B,UAAYP,EACpBxB,EAAQgC,UAAYR,EAEpB,WACED,GAAevB,GACfqB,EAAS3L,eAcf,SAAS6L,GAAevB,GACtBA,EAAQsB,OAAS,KACjBtB,EAAQ4B,QAAU,KAClB5B,EAAQ6B,QAAU,KAClB7B,EAAQ8B,UAAY,KACpB9B,EAAQ+B,UAAY,KACpB/B,EAAQgC,UAAY,KCjDtB,IAAAC,GAAA,WAiCE,SAAAA,EACkBC,EACRC,EACAnZ,GAFQjF,KAAAme,mBAAAA,EACRne,KAAAoe,KAAAA,EACApe,KAAAiF,MAAAA,EAZVjF,KAAAkW,SAAW,IAKQlW,KAAAqe,SAAW,IAAIjI,EAAAA,aAElCpW,KAAAse,kBAAmB,EAuCrB,OA/BEJ,EAAAhe,UAAAgT,SAAA,WAAA,IAAAxN,EAAA1F,KACEA,KAAKme,mBAAmBE,SAAS/U,KAAK+H,EAAiBrR,OAAOyJ,WAAS,WACrE/D,EAAK6Y,cACL7Y,EAAK4Y,kBAAmB,KAG1BhU,EAAAA,UAAUtK,KAAKoe,KAAkB,cAAiB,SAC/C9U,KACC+M,EAAAA,aAAarW,KAAKkW,UAClB/N,EAAAA,QAAM,SAAE7G,GAAuB,OAAAA,GAAmB,UAAZA,EAAIA,OAC1C+P,EAAiBrR,OAElByJ,WAAS,WACH/D,EAAK4Y,kBACR5Y,EAAK0Y,KAAKxI,cAAc4I,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,EAAMC,YAAY,KAGzFjZ,EAAK4Y,kBAAmB,MAI9BJ,EAAAhe,UAAA4S,YAAA,aAEAoL,EAAAhe,UAAAqe,YAAA,WACU,IAAAK,EAAA5e,KAAAme,mBAAAS,MASZ,SAASC,EAASC,GAChB,GAAInf,MAAMkN,QAAQiS,GAIhB,YAHAA,EAAS/P,SAAO,SAACgQ,GACfF,EAASE,EAAc,aAK3Bvf,OAAOmN,KAAKmS,GAAU/P,SAAO,SAACzN,GAC5Bwd,EAASxd,GAAKid,cACdO,EAASxd,GAAK0d,4BAjBdH,CAASD,EAAa,UACtBA,EAAKL,cAELve,KAAKiF,MAAM6R,qCAlDdhB,EAAAA,UAASzP,KAAA,CAAC,CAETsI,SAAU,yEATqBsQ,EAAAA,mBAAkB7d,WAAA,CAAA,CAAAwF,KAuB9CsY,EAAAA,cA/BHnJ,EAAAA,kBAFA5Q,EAAAA,uDAsBCqB,EAAAA,mCAGAA,EAAAA,wBAGA+P,EAAAA,UAyCH2H,EAtEA,GCAA,IAAAiB,GAAA,WAME,SAAAA,EAAoB1J,GAAAzV,KAAAyV,MAAAA,EAFQzV,KAAAof,KAAO,IAAIhJ,EAAAA,aAOzC,OAHE+I,EAAAjf,UAAAyV,gBAAA,WACE3V,KAAKof,KAAK9I,KAAKtW,KAAKyV,4BAPvBK,EAAAA,UAASzP,KAAA,CAAC,CAAEsI,SAAU,yDAFmBoH,EAAAA,4CAIvCQ,EAAAA,OAAMlQ,KAAA,CAAC,cAOV8Y,EAXA,qBCcE,SAAAE,EAAoBnT,EAA0B9C,GAA1BpJ,KAAAkM,KAAAA,EAA0BlM,KAAAoJ,MAAAA,SAEtCiW,EAAAnf,UAAAof,gBAAR,SAAwBnQ,GACtB,OAAOnP,KAAKoJ,MAAMO,eAAesC,EAAYsB,UAAU4B,KAGzDkQ,EAAAnf,UAAAud,YAAA,SAAY7N,GAEV,OADA5P,KAAKoJ,MAAMiB,SAAS,IAAI7C,EAAeoI,IAChCG,EAAAA,WAAWH,IAIpByP,EAAAnf,UAAAqf,QAAA,SACEA,EACAC,EACApQ,GAHF,IAAA1J,EAAA1F,KAKEwf,EAASA,GAAM,GACfpQ,EAAMA,GAAOpP,KAAKsf,gBAAgBE,EAAOrQ,SACjC,IAAAsQ,EAAAF,EAAAE,OAAQ3Q,EAAAyQ,EAAAzQ,OAAQ4Q,EAAA5e,EAAAye,EAAA,CAAA,SAAA,WAChB7U,EAAA8U,EAAAG,QAAAA,OAAA,IAAAjV,EAAA,OAAAA,EAA6BkV,EAAAJ,EAAAI,gBAErC,OAAO5f,KAAKkM,KACTqT,QAAWE,EAAQrQ,EAAMmQ,EAAQnS,IAAGhN,EAAA,CACnCuf,QAAOA,GACH7Q,GAAU,CACZA,OAAQtP,OAAOmN,KAAKmC,GAAQ/B,QAAM,SAAEC,EAAK1L,OACjCqB,EAAQmM,EAAOxN,GAIrB,OAFK8Y,GAAyBzX,KAAQqK,EAAI1L,GAAOqB,GAE1CqK,IACN,KAEF0S,IAEJpW,KAAKqG,EAAAA,YAAU,SAACC,GAAO,OAACgQ,EAAkB7P,EAAAA,WAAWH,GAAOlK,EAAK+X,YAAY7N,4BAxCnFjE,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAXLhP,EAAAA,kBAEApF,EAAAA,iKCFT,IAAAqU,GAAA,WAWE,SAAAA,EAAoBC,GAAA/f,KAAA+f,KAAAA,EAFpB/f,KAAAmP,QAAU,qBAIV2Q,EAAA5f,UAAAgF,IAAA,WAME,OAAOlF,KAAK+f,KAAKR,QALmB,CAClCE,OAAQ,MACRrS,IAAK,4BAGmD,CAAE+B,QAASnP,KAAKmP,WAG5E2Q,EAAA5f,UAAA8f,OAAA,SAAO7c,OACCoc,EAA0C,CAC9CE,OAAQ,MACRrS,IAAK,2BACLjK,KAAIA,GAGN,OAAOnD,KAAK+f,KAAKR,QAA4CA,EAAS,CACpEpQ,QAASnP,KAAKmP,WAIlB2Q,EAAA5f,UAAA+f,eAAA,SACE9c,EACAyc,QAAA,IAAAA,IAAAA,GAAA,OAEML,EAAuD,CAC3DE,OAAQ,OACRrS,IAAK,2CACLjK,KAAIA,GAGN,OAAOnD,KAAK+f,KAAKR,QAA6CA,EAAS,CACrEK,gBAAeA,EACfzQ,QAASnP,KAAKmP,+BAzCnBxD,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAJLR,6HAFT,qBCkBE,SAAAa,EAAoBC,GAAAngB,KAAAmgB,eAAAA,EA4BtB,OAhCSD,EAAAE,WAAP,SAAkB1V,GAChB,OADkBA,EAAA2V,SAOpBH,EAAAhgB,UAAAkgB,WAAA,SAAW1V,OAAEO,EAAAP,EAAAO,WACX,OAAOjL,KAAKmgB,eAAejb,MAAMoE,KAC/B+F,EAAAA,KAAG,SAACgR,GACF,OAAApV,EAAW,CACToV,QAAOA,SAOfH,EAAAhgB,UAAAogB,cAAA,SAAc5V,EAA6CM,OAA3CC,EAAAP,EAAAO,WAA6ClE,EAAAiE,EAAAjE,QAC3D,OAAO/G,KAAKmgB,eAAeH,OAAOjZ,GAASuC,KACzC+F,EAAAA,KAAG,SAACgR,GACF,OAAApV,EAAW,CACToV,QAAOA,SAOfH,EAAAhgB,UAAA+f,eAAA,SAAe1c,EAAGmH,OAAE3D,EAAA2D,EAAA3D,QAClB,OAAO/G,KAAKmgB,eAAeF,eAAelZ,GAAS,6CA1BjB+Y,0BAPrCnU,EAAAA,sDAPQmU,MAiBPlU,EAAAA,CADCC,EAAAA,OAAOzE,2HAYRwE,EAAAA,CADCC,EAAAA,OAAOxE,2DACgEA,qEAWxEuE,EAAAA,CADCC,EAAAA,OAAOvE,2DACuBA,sEA7B/BsE,EAAAA,CADCE,EAAAA,yHADUoU,EAAY/e,EAAA,CALxB4K,EAAAA,MAAqB,CACpBrF,KAAM,eACNsF,SAAQ,4BAS4B8T,MANzBI,MCZb,IAAAK,GAAA,WA0BE,SAAAA,EACU9K,EACA+K,EACApX,EACYqX,EACZhJ,GAJAzX,KAAAyV,MAAAA,EACAzV,KAAAwgB,SAAAA,EACAxgB,KAAAoJ,MAAAA,EACYpJ,KAAAygB,YAAAA,EACZzgB,KAAAyX,MAAAA,EAoCZ,OAjCU8I,EAAArgB,UAAAwgB,MAAR,WAAA,IAAAhb,EAAA1F,KACMA,KAAK2gB,cACP3gB,KAAK2gB,aAAaC,cAGpB5gB,KAAK2gB,aAAe3gB,KAAKoJ,MACtBkK,OAAOrH,EAAYgC,iBAAiBjO,KAAK6gB,YACzCvX,KAAK+H,EAAiBrR,OACtByJ,WAAS,SAACqX,GACLpb,EAAK+a,aAAeK,GACtBpb,EAAK+R,MAAMwB,QACXvT,EAAK+R,MAAMa,mBAAmB5S,EAAK+a,cAC1B/a,EAAK+a,cAAgBK,EAC9Bpb,EAAK+R,MAAMwB,QACD6H,GAAcpb,EAAK+a,aAC7B/a,EAAK8a,SAAS7C,YAAajY,EAAK+P,MAAmB,cAAiBsL,cAAerb,EAAK+P,MAAMG,mBAKtG2K,EAAArgB,UAAAgT,SAAA,WACMlT,KAAKygB,cAAgBzgB,KAAK6gB,WAC5B7gB,KAAKyX,MAAMa,mBAAmBtY,KAAKygB,cAIvCF,EAAArgB,UAAA4S,YAAA,aAEAyN,EAAArgB,UAAAuZ,YAAA,SAAY/O,IAAEA,EAAAmW,WACM,CAAEG,aAAc,OAAQA,cACxChhB,KAAK0gB,6BA9CV5K,EAAAA,UAASzP,KAAA,CAAC,CACTsI,SAAU,+DAjBVoH,EAAAA,kBAIAkL,EAAAA,iBAOOxV,EAAAA,aALPuO,EAAAA,YAAW5Y,WAAA,CAAA,CAAAwF,KAsBRsa,EAAAA,kBAvBHjH,EAAAA,uDAeCzT,EAAAA,MAAKH,KAAA,CAAC,oBA6CTka,EAnEA,qBC2CE,SAAAY,EACUrc,EACA2b,EACAW,EACA3J,EACArO,GALV,IAAA1D,EAAA1F,KACUA,KAAA8E,SAAAA,EACA9E,KAAAygB,YAAAA,EACAzgB,KAAAohB,MAAAA,EACAphB,KAAAyX,MAAAA,EACAzX,KAAAoJ,MAAAA,EApBVpJ,KAAAqhB,aAAY,CAAKC,OAAQ,GAAIC,QAAS,IAKtCvhB,KAAA2Y,QAAO,GAMP3Y,KAAAwhB,8BAA6B,GAE7BxhB,KAAAyhB,aAAc,EASZzhB,KAAK2Y,QAAU,CACb+I,aAAY,SAAEC,GACZjc,EAAKkc,wBACLlc,EAAKmc,oBAAsBF,EAC3Bjc,EAAKoc,8BA6Gb,OAxGEX,EAAAjhB,UAAAgT,SAAA,WAAA,IAAAxN,EAAA1F,KACEA,KAAKoJ,MACFkK,OAAOxC,EAA2BE,aAAahR,KAAK0S,KAAKW,eACzD/J,KACCnB,EAAAA,QAAM,SACHqL,GACC,YADD,IAAAA,IAAAA,EAAA,KACE9N,EAAK+b,cAAgB7J,EAAQpE,EAAItC,UAAWxL,EAAK+N,sBAEtDpC,EAAiBrR,OAElByJ,WAAS,SAAE+J,GAOV,QAPU,IAAAA,IAAAA,EAAA,IACV9N,EAAK+R,MAAMwB,QACXvT,EAAK+N,kBAAoBD,EAAItC,UACzBxL,EAAKmc,qBACPnc,EAAKkc,wBAGHpO,EAAItC,UAAW,CACjBxL,EAAKqc,sBACCC,EAAiBzb,EAAAA,SAASpG,OAAO,CACrC8hB,UAAW,CAAC,CAAEC,QAAS,mBAAoBC,SAAUzc,EAAK2b,eAC1D1Y,OAAQjD,EAAKZ,WAEfY,EAAK+R,MAAM2K,gBACT1c,EAAK0b,MAAMiB,wBAAwB7O,EAAItC,WACvC,EACA8Q,QAGFtc,EAAK+R,MAAMa,mBAAmB5S,EAAK+a,YAAa/a,EAAKiT,SAGvDjT,EAAK+b,aAAc,MAIzBN,EAAAjhB,UAAAuZ,YAAA,SAAYxB,GACNtK,GAAG,WAAO,OAAAsK,EAAQvF,KAAKsO,aAAaM,WAAWthB,KAAK6hB,qBACtD7hB,KAAK8hB,6BAITX,EAAAjhB,UAAA4S,YAAA,aAEAqO,EAAAjhB,UAAA4hB,0BAAA,WAAA,IAAApc,EAAA1F,KACE,GAAKA,KAAK6hB,sBAAyB7hB,KAAK0S,KAAK4O,QAAWthB,KAAK0S,KAAK6O,SAAlE,CAEA,GAAIvhB,KAAK0S,KAAK4O,OACZ,IAAK,IAAMhgB,KAAOtB,KAAK0S,KAAK4O,OACtBthB,KAAK0S,KAAK4O,OAAOzhB,eAAeyB,KAC7BsW,EAAQ5X,KAAK6hB,oBAAoBvgB,GAAMtB,KAAK0S,KAAK4O,OAAOhgB,GAAKqB,SAChE3C,KAAK6hB,oBAAoBvgB,GAAOtB,KAAK0S,KAAK4O,OAAOhgB,GAAKqB,QAM9D,GAAI3C,KAAK0S,KAAK6O,QAAS,gBACVjgB,GACLghB,EAAK5P,KAAK6O,QAAQ1hB,eAAeyB,KAC9BghB,EAAKd,8BAA8BlgB,KACtCghB,EAAKd,8BAA8BlgB,GAAOghB,EAAKT,oBAAoBvgB,GAAKmI,WAAS,SAC/E9G,GACE+C,EAAKgN,KAAK6O,QAAQjgB,GAAKqB,gBALjC,IAAK,IAAMrB,KAAOtB,KAAK0S,KAAK6O,UAAjBjgB,MAcf6f,EAAAjhB,UAAA6hB,gBAAA,WAAA,IAAArc,EAAA1F,KACEA,KAAKqhB,aAAYjhB,EAAA,GAAQJ,KAAK0S,KAAI,CAAE4O,OAAQ,KAEvCthB,KAAK0S,KAAK4O,QACf9hB,OAAO+iB,iBAAiBviB,KAAKqhB,aAAaC,OAAMlhB,EAAA,GAC3CZ,OAAOmN,KAAK3M,KAAK0S,KAAK4O,QAAQvU,QAAM,SACpCC,EAAK1L,SAAQ,OAAAlB,EAAA,GACT4M,IAAGtC,EAAA,IACLpJ,GAAGlB,EAAA,CACFoiB,YAAY,EACZC,cAAc,EACdvd,IAAG,WAAQ,OAAAQ,EAAKgN,KAAK4O,OAAOhgB,GAAKqB,QAC7B+C,EAAKgN,KAAK4O,OAAOhgB,GAAKohB,QAAU,CAClCC,IAAG,SAAEhc,GACHjB,EAAKgN,KAAK4O,OAAOhgB,GAAKqB,MAAQgE,EAC9BjB,EAAKgN,KAAK6O,QAAWjgB,EAAG,UAAUqF,MAErC+D,MAGL,OAKNyW,EAAAjhB,UAAA0hB,sBAAA,WAAA,IAAAlc,EAAA1F,KACER,OAAOmN,KAAK3M,KAAKwhB,+BAA+BzS,SAAO,SAACzN,GACtDoE,EAAK8b,8BAA8BlgB,GAAKsf,iBAE1C5gB,KAAKwhB,8BAA6B,GAClCxhB,KAAK6hB,oBAAsB,0BA1I9B/L,EAAAA,UAASzP,KAAA,CAAC,CAAEsI,SAAU,wEApBrBpI,EAAAA,gBAMAyT,EAAAA,mBARA4I,EAAAA,gCAUA3I,EAAAA,wBAEOxO,EAAAA,uCAYNjF,EAAAA,MAAKH,KAAA,CAAC,6BA0IT8a,KCnKA,IAAA0B,GAAA,WAWE,SAAAA,EAAoB5M,GAAAjW,KAAAiW,GAAAA,EAFWjW,KAAA8iB,cAAgB,IAAI1M,EAAAA,aAcrD,OAVEyM,EAAA3iB,UAAAgT,SAAA,WAAA,IAAAxN,EAAA1F,KACEsK,EAAAA,UAAUtK,KAAKiW,GAAGL,cAAe,SAC9BtM,KAAK+H,EAAiBrR,OACtByJ,WAAS,SAAEe,GACVA,EAAMuY,kBACNrd,EAAKod,cAAcxM,KAAK9L,OAI9BqY,EAAA3iB,UAAA4S,YAAA,iCAlBDgD,EAAAA,UAASzP,KAAA,CAAC,CAETsI,SAAU,4DANQoH,EAAAA,qDASjBQ,EAAAA,OAAMlQ,KAAA,CAAC,iBAcVwc,EAvBA,GCAA,IAAAG,GAAA,WAaE,SAAAA,EAAgCvN,EAA2B+K,GAA3BxgB,KAAAyV,MAAAA,EAA2BzV,KAAAwgB,SAAAA,EAF3DxgB,KAAAijB,WAAa,IAAIvR,EAAAA,QAoDnB,OAhDEsR,EAAA9iB,UAAAyV,gBAAA,WAAA,IAKM2H,EALN5X,EAAA1F,MACOA,KAAKkjB,gBAAkBljB,KAAKyV,QAC/BzV,KAAKkjB,eAAiBljB,KAAKyV,MAAMG,gBAInC0H,EAAW,IAAI6F,kBAAgB,SAACC,GAC9BA,EAAUrU,SAAO,SAACsU,GACXA,EAAShiB,SAEIsM,GAAG,WACb,OAAAhO,MAAM2jB,KAAKD,EAAShiB,OAAOkiB,YAAYpb,QAAM,SAACqb,GAAQ,OAAAA,aAAgBC,iBAC5E,IAGa9iB,QACb+E,EAAKge,wBAKF/D,QAAQ3f,KAAKkjB,eAAgB,CACpCS,WAAW,IAGbhe,YAAU,WACUgI,GAAG,WACb,OAAAhO,MAAM2jB,KAAK5d,EAAKwd,eAAeK,YAAYpb,QAAM,SAACqb,GAAQ,OAAAA,aAAgBC,iBAChF,IAGa9iB,QAAQ+E,EAAKge,kBAC3B,GAEH1jB,KAAKijB,WAAWxZ,WAAS,WAAO,OAAA6T,EAASsG,iBAG3CZ,EAAA9iB,UAAA0jB,WAAA,WACE5jB,KAAKijB,WAAWpgB,OAChB7C,KAAKijB,WAAWtR,YAGlBqR,EAAA9iB,UAAAwjB,cAAA,WACO1jB,KAAKyV,MAAMG,gBAEhB5V,KAAKwgB,SAAS7C,YAAY3d,KAAKyV,MAAMG,cAAcmL,cAAe/gB,KAAKyV,MAAMG,eAC7E5V,KAAK4jB,mCAzDR9N,EAAAA,UAASzP,KAAA,CAAC,CACTsI,SAAU,+DALyBoH,EAAAA,WAAU3U,WAAA,CAAA,CAAAwF,KAahCsa,EAAAA,kBAbkCD,EAAAA,qDAQ9Cza,EAAAA,MAAKH,KAAA,CAAC,oBAuDT2c,EA/DA,GCAA,IAAAa,GAAA,WAUE,SAAAA,EAAoB1a,EAAoCC,GAApCpJ,KAAAmJ,aAAAA,EAAoCnJ,KAAAoJ,MAAAA,EA8B1D,OA5BEya,EAAA3jB,UAAA4jB,UAAA,SAAUvE,EAA2B1c,GAArC,IAAA6C,EAAA1F,KACEA,KAAKoJ,MAAMiB,SAAS,IAAInD,EAAYqY,QAE9BwE,EAAO,GAEPC,EAAQhkB,KAAKmJ,aAAa8a,kBAC3B1E,EAAQwE,QAAQG,IAAI,kBAAoBF,IAC3CD,EAAuB,cAAI,UAAUC,OAGjC1I,EAAOtb,KAAKoJ,MAAMO,eAAeT,EAAauB,cAC/C8U,EAAQwE,QAAQG,IAAI,oBAAsB5I,IAC7CyI,EAAQ,mBAAqBzI,OAGzBzQ,EAAS7K,KAAKoJ,MAAMO,eAAeT,EAAa0B,WAKtD,OAJK2U,EAAQwE,QAAQG,IAAI,aAAerZ,IACtCkZ,EAAkB,SAAIlZ,EAAOkN,IAGxBlV,EACJshB,OACC5E,EAAQ7F,MAAM,CACZ0K,WAAYL,KAGfza,KAAK+a,EAAAA,UAAQ,WAAO,OAAA3e,EAAK0D,MAAMiB,SAAS,IAAIlD,EAAWoY,6BA9B7D5T,EAAAA,sDANQH,EAAAA,oBACAC,EAAAA,SAqCToY,EAxCA,qBCUE,SAAAS,EAAoBlb,GAAApJ,KAAAoJ,MAAAA,EAgBtB,OAdEkb,EAAApkB,UAAAqkB,UAAA,SACE5hB,QAAA,IAAAA,IAAAA,EAAA,QACA,IAAA8L,EAAA,GAAAC,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAAD,EAAAC,EAAA,GAAAhO,UAAAgO,GAEA,OAAO1O,KAAKoJ,MAAMO,eAChBsC,EAAYuC,gBAAe3N,MAA3BoL,EAAWtH,EAAA,CACThC,GACG8L,EAAkB1B,QAAM,SACxBC,EAAKC,GAAQ,OAACtN,MAAMkN,QAAQI,GAAItI,EAAOqI,EAAQC,GAAGtI,EAAQqI,EAAG,CAAEC,MAChE,4BAhBTtB,EAAAA,kBACA6Y,EAAAA,KAAIne,KAAA,CAAC,CACJK,KAAM,+DANC+E,EAAAA,SAyBT6Y,KAEA,IAAAG,GAAA,WAAA,SAAAA,KAQA,OAHEA,EAAAvkB,UAAAqkB,UAAA,SAAU5hB,QAAA,IAAAA,IAAAA,EAAA,QAAqD,IAAAY,EAAA,GAAAmL,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAAnL,EAAAmL,EAAA,GAAAhO,UAAAgO,GAC7D,MAAwB,iBAAV/L,EAAqBA,EAAQA,EAAM0C,kCANpDsG,EAAAA,kBACA6Y,EAAAA,KAAIne,KAAA,CAAC,CACJK,KAAM,sBAMR+d,EARA,GC5BAC,GAAA,WAGA,SAAAA,KAIiC,2BAJhCC,EAAAA,SAAQte,KAAA,CAAC,CACRue,QAAS,CAACN,IACVO,aAAc,CAACP,QAEgBI,EAPjC,iBCEA,SAAAI,KA2CA,OAtCEA,EAAA5kB,UAAAqkB,UAAA,SACE5hB,EACAoiB,EACAC,GAIA,QALA,IAAAD,IAAAA,EAAA,OAGAA,EAAYA,GAAcA,EAAUE,eAE/BtiB,GAAwB,QAAdoiB,GAAqC,SAAdA,EAAuB,OAAOpiB,MAEhEuiB,EAAc,GACdC,EAAc,GAEbH,GAIHE,EAAcviB,EACXwF,QAAM,SAAC2P,GAAQ,MAAyB,iBAAlBA,EAAKkN,MAC3Blc,MAAI,SAAEC,EAAGxJ,GAAM,OAAAwJ,EAAEic,GAAWzlB,EAAEylB,MACjCG,EAAcxiB,EACXwF,QAAM,SAAC2P,GAAQ,MAAyB,iBAAlBA,EAAKkN,MAC3Blc,MAAI,SAAEC,EAAGxJ,GACR,OAAIwJ,EAAEic,GAAWzlB,EAAEylB,IAAkB,EAC5Bjc,EAAEic,GAAWzlB,EAAEylB,GAAiB,EAC7B,OAXhBE,EAAcviB,EAAMwF,QAAM,SAAC2P,GAAQ,MAAgB,iBAATA,KAAmBhP,OAC7Dqc,EAAcxiB,EAAMwF,QAAM,SAAC2P,GAAQ,MAAgB,iBAATA,KAAmBhP,YAazDsc,EAAMzgB,EACPugB,EACAC,EACAxiB,EAAMwF,QAAM,SACb2P,GACE,MAA4C,iBAApCkN,EAAUlN,EAAKkN,GAAWlN,IACU,iBAApCkN,EAAUlN,EAAKkN,GAAWlN,OAGxC,MAAqB,QAAdiN,EAAsBK,EAASA,EAAOrL,+BAzChDpO,EAAAA,kBACA6Y,EAAAA,KAAIne,KAAA,CAAC,CACJK,KAAM,cAyCRoe,KC9BaO,GAA6B,IAAItK,EAAAA,eAAe,8BAE7DuK,GAAA,WAIE,SAAAA,EAC8C5F,EACpC5N,GADoC9R,KAAA0f,QAAAA,EACpC1f,KAAA8R,OAAAA,EAJF9R,KAAAyhB,aAAc,EA8BxB,OAvBE6D,EAAAplB,UAAAikB,OAAA,SAAO/X,EAAY5B,EAAY3H,OACvB0iB,EAAUC,EAAAA,cAAchb,GAG9B,IAFqB+a,EAAQE,EAAAA,YAAcF,EAAQG,EAAAA,gBAE9B1lB,KAAKyhB,YAAa,KAC/BkE,EAoBZ,SAAyB5d,EAAqBC,QAArB,IAAAD,IAAAA,EAAA,SAAqB,IAAAC,IAAAA,EAAA,QACtC4d,EAASjhB,EAAOsE,KAEtBjB,EAAW4d,EAAUzd,QAAM,SAAC1D,GAAM,OAAAA,EAAGmO,eAC/BiT,EAAW,GAwBjB,OAvBA9d,EACGI,QAAM,SAACC,GAAS,OAAAA,EAAM8I,WAAa9I,EAAM0d,gBACzC/W,SAAO,SAAC3G,OACD2d,EAAaH,EAAUtY,MAAI,SAC/B0Y,GAAO,OAAAA,EAAI7Y,KAAK8X,gBAAkB7c,EAAM+E,KAAK8X,gBAAkBe,EAAIpT,WAG7DjS,EAAAklB,EAAAllB,OAEJolB,GACFF,EAAYxhB,KAAK0hB,GAGfF,EAAYllB,SAAWA,IAAWyH,EAAMsK,MAAQ,IAAI3K,QACtD8d,EAAYxhB,KAAIjE,EAAA,GACXgI,EAAMsK,KAAK3K,OAAM,CACpBoF,KAAM/E,EAAM+E,KACZzG,KAAMiH,GAAG,WAAO,OAAAvF,EAAMsK,KAAK3K,OAAOrB,OAAM0B,EAAM+E,MAC9C9E,SAAUD,EAAMsK,KAAK3K,OAAOM,UAAY,SAKzC,CAAEN,OAAQke,GAAQJ,GAAc7d,SAAQA,GAhDjBke,CAAgBlmB,KAAK8R,OAAO0N,QAChDzX,EAAA4d,EAAA5d,OAAQC,EAAA2d,EAAA3d,SAGdD,EAASD,EAAeC,EAFxBC,EAwFN,SAAwBA,QAAA,IAAAA,IAAAA,EAAA,QAChBme,EAAmB,IAAIC,IAE7B,OAAOpe,EAASG,QAAM,SAACyK,GACrB,OAAIuT,EAAiBjC,IAAItR,EAAQlM,QAEjCyf,EAAiBE,IAAIzT,EAAQlM,OACtB,MA/FM4f,CAAete,QAGpBqF,EAqEZ,SAAoBtF,OACZwe,EAAI,SAAI9kB,GACZ,OAAOA,EAAEsL,QAAM,SAAEC,EAAKC,OAChBtK,EAAyB,CAACsK,GAM9B,OALIA,EAAI5E,WACN4E,EAAI5E,SAAW4E,EAAI5E,SAASI,KAAG,SAAC0H,GAAS,OAAA/P,EAAA,GAAM+P,EAAK,CAAEjI,WAAY+E,EAAIvG,UACtE/D,EAAKgC,EAAA,CAAIsI,GAAQsZ,EAAKtZ,EAAI5E,YAG5B1D,EAAWqI,EAAQrK,KAClB,KAGL,OAAO4jB,EAAKxe,GAlFcye,CAAW9M,EAAM3R,IACvCqE,EAAQqa,EAAAA,SAASra,EAAO,cAAahM,EAAA,GAC/BgM,EAAMH,aAAW7L,EAAA,GAASgM,EAAMH,aACjCjM,KAAK0f,QAAO,CACf3X,OAAMA,EACNsF,cAAaA,KAGfrN,KAAKyhB,aAAc,EAGrB,OAAO5e,EAAKuJ,EAAO5B,wBA9BtBmB,EAAAA,+EAKI+a,EAAAA,OAAMrgB,KAAA,CAACgf,aArBHtS,EAAAA,UAgDTuS,EAhCA,GAiEA,SAASW,GAAQle,EAAyBmI,GACxC,OAAIA,EAEKnI,EAAOU,KAAG,SAACL,GAAS,OAAAhI,EAAA,GACtBgI,EAAK,CACRgF,IAAQ8C,EAAS,IAAI9H,EAAM+E,MACvB/E,EAAMC,UACRD,EAAMC,SAAS1H,QAAU,CACvB0H,SAAU4d,GAAQ7d,EAAMC,SAAa6H,EAAS,IAAI9H,EAAM+E,WAKzDpF,EAAOU,KAAG,SAACL,GAAS,OAAAhI,EAAA,GACtBgI,EAAK,CACRgF,IAAK,IAAIhF,EAAM+E,MACX/E,EAAMC,UACRD,EAAMC,SAAS1H,QAAU,CACvB0H,SAAU4d,GAAQ7d,EAAMC,SAAU,IAAID,EAAM+E,6BChFlD,SAAAwZ,EACUtd,EACAD,EACA0I,EACA8U,EAGRC,GAEA,GARQ7mB,KAAAqJ,QAAAA,EACArJ,KAAAoJ,MAAAA,EACApJ,KAAA8R,OAAAA,EACA9R,KAAA4mB,OAAAA,EAKJC,EAAe,MAAM,IAAI/Z,MAAM,sDAEnC9M,KAAK8mB,6BAfPtnB,OAAAqC,eAAI8kB,EAAAzmB,UAAA,cAAW,KAAf,WACE,OAAOF,KAAKoJ,MAAMO,gBAAc,SAACyC,GAAS,OAAAA,EAAMlD,aAAayB,6CAiBvDgc,EAAAzmB,UAAA4mB,oBAAR,WAAA,IAAAphB,EAAA1F,KACEA,KAAKqJ,QACFC,KAAKC,EAAAA,mBAAmB9B,IACxBgC,WAAS,SAAEiB,OAAE3D,EAAA2D,EAAA3D,QAAc,OAAArB,EAAK6V,eAAexU,OAGpD4f,EAAAzmB,UAAA6mB,cAAA,SAAcC,GACZhnB,KAAK8R,OAAOmV,mBAAmBC,iBAAmBF,GAGpDL,EAAAzmB,UAAAqb,eAAA,SAAeC,GAAf,IAAA9V,EAAA1F,KACUknB,EAAAlnB,KAAA8R,OAAAmV,mBAAAC,iBAIR,OAHAlnB,KAAK+mB,eAAa,WAAO,OAAA,KACzB/mB,KAAK8R,OAAOqV,WAAY,EAEjB5L,GAAeC,GAAQvY,MAAI,WAChCyC,EAAKkhB,OAAOQ,KAAG,WAAC,OAAAllB,EAAAwD,OAAA,OAAA,GAAA,6DACd,MAAA,CAAA,EAAM1F,KAAK8R,OAAOuV,cAAcrnB,KAAK8R,OAAO1E,KAAKka,MAAMnN,EAAAA,qBAAvDzP,EAAAjH,OACAzD,KAAK+mB,cAAcG,qBAUzBP,EAAAzmB,UAAAgF,IAAA,SACE5D,OACA,IAAAmN,EAAA,GAAAC,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAAD,EAAAC,EAAA,GAAAhO,UAAAgO,GAEA,OAAO1O,KAAKoJ,MAAMkK,OAAOrH,EAAYuC,gBAAe3N,MAA3BoL,EAAWtH,EAAA,CAAiBrD,GAAQmN,MAQ/DkY,EAAAzmB,UAAAqnB,QAAA,SAAQjmB,OAA8C,IAAAmN,EAAA,GAAAC,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAAD,EAAAC,EAAA,GAAAhO,UAAAgO,GACpD,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYuC,gBAAe3N,MAA3BoL,EAAWtH,EAAA,CAAiBrD,GAAQmN,0BAhExE9C,EAAAA,WAAUtF,KAAA,CAAC,CAAEwZ,WAAY,oDATVnU,EAAAA,eAAPD,EAAAA,aADwBsH,EAAAA,cADZyU,EAAAA,cA2BFb,EAAmBvlB,WAAA,CAAA,CAAAwF,KAFjCsa,EAAAA,UAAQ,CAAAta,KACR6gB,EAAAA,iPCrBH,SAAAC,EAAoBC,GAApB,IAAAjiB,EACEkiB,EAAAhnB,KAAAZ,OAAOA,YADW0F,EAAAiiB,oBAAAA,IAYtB,OAb8BE,EAAAA,EAAAA,GAK5BH,EAAAxnB,UAAAwa,SAAA,WACU,IAAAoN,EAAA9nB,KAAA2nB,oBAAAG,YACR,OAAOnU,GAAemU,IAAgBA,GAGxCJ,EAAAxnB,UAAA6J,QAAA,WACE,OAAO/J,KAAK0a,YAEhBgN,GAb8BK,QAe9B,IAAaC,GAA2B,CACtC9F,QAAS+F,EAAAA,UACTC,SAAUR,GACVS,KAAM,CAACxB,KCkBT,SAAgByB,KACd,OAAOC,aCjCTve,KAAK5J,UAAUooB,iBAAgB,eACvBC,EAAiBvoB,KAAKwoB,oBAE5B,OAAO,IAAI1e,KAAK9J,KAAKyoB,UAA6B,IAAjBF,GAAwBG,eDuC3D,IAAAC,GAAA,WAAA,SAAAA,KAuD6B,2BAvD5BhE,EAAAA,SAAQte,KAAA,CAAC,CACRue,QAAS,CACPgE,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,aAEAnkB,EACA2Q,GACA3D,EACA2E,GACAe,GACA2G,GACAiB,GACAnJ,GACAuK,GACAtN,EACAkO,GACAzN,EACAoR,GACAjC,GACAG,IAEFiG,QAAS,CACPC,EAAAA,YACAN,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,cAEFnE,aAAc,CACZhgB,EACA2Q,GACA3D,EACA2E,GACAe,GACA2G,GACAiB,GACAnJ,GACAuK,GACAtN,EACAkO,GACAzN,EACAoR,GACAjC,GACAG,IAEFmG,gBAAiB,CACfzV,EACA7B,EACAoB,OAGyB0V,EAvD7B,GA6DAS,GAAA,WAAA,SAAAA,KAU6B,2BAV5BzE,EAAAA,SAAQte,KAAA,CAAC,CACRue,QAAS,CAAC+D,GAAgBjE,IAC1BuE,QAAS,CACPN,GACAjE,GACA2E,EAAAA,WAAWC,WAAW,CAACxY,EAA4BoP,GAAchX,EAAc+C,IAC/Esd,EAAAA,uBAAuBC,UACvBC,EAAAA,wBAAwBD,QAAQ,CAAEloB,IAAK,CAAC,uBAGf8nB,EAV7B,GAgBAM,GAAA,WAAA,SAAAA,KAK6B,2BAL5B/E,EAAAA,SAAQte,KAAA,CAAC,CACRue,QAAS,CAACoE,EAAAA,aAAcL,GAAgBlE,IACxCwE,QAAS,CAACD,EAAAA,aAAaQ,QAAQ,IAAKb,IACpC9D,aAAc,CAACJ,QAEYiF,EAL7B,GAUAC,GAAA,WAAA,SAAAA,KAiEA,OA3DSA,EAAAC,QAAP,SAAelf,OAAEM,QAAA,IAAAN,EAAA,GAAAA,GAAAmf,SAAAA,OAAA,IAAA7e,EAAA,IAAAA,EACf,MAAO,CACL8e,SAAUJ,GACVzH,UAAW,CACT,CAAEC,QAAS6H,EAAAA,cAAe5H,SAAU0H,GACpC,CACE3H,QAASoC,GACT4D,SAAUzD,OAMXkF,EAAAH,QAAP,SAAe9J,GACb,YADa,IAAAA,IAAAA,EAAA,IACN,CACLoK,SAAUV,GACVnH,UAAStd,EAAA,CACPqjB,GACA,CACE9F,QAAS8H,EAAAA,aACT9B,SAAU5C,GACV2E,OAAO,GAET,CACE/H,QAASmD,GACTlD,SAAU,CAAElb,YAAayY,EAAQzY,cAEnC,CACEib,QAASpH,GACTqH,SAAUzC,GAEZ,CACEwC,QAASgI,EAAAA,kBACThC,SAAUrE,GACVoG,OAAO,GAET,CACE/H,QAASiI,EAAAA,gBACTF,OAAO,EACP9B,KAAM,CAAC5hB,EAAAA,UACP6jB,WAAYpP,IAEd,CACEkH,QAASiI,EAAAA,gBACTF,OAAO,EACP9B,KAAM,CAAC5hB,EAAAA,UACP6jB,WAAY/O,IAEd,CACE6G,QAASiI,EAAAA,gBACTF,OAAO,EACP9B,KAAM,CAACxB,IACPyD,WAAYjQ,KAEX+O,EAAAA,YAAYM,UAAUvH,UAAS,CAClC,CAAEC,QAASmI,EAAAA,aAAcD,WAAYhC,4BA7D5CzD,EAAAA,SAAQte,KAAA,CAAC,CACRue,QAAS,CAAC+D,GAAgBjE,IAC1BuE,QAAS,CAACN,GAAgBjE,IAC1BzC,UAAW,CAACqC,QA8DdqF,EAjEA,GEzIAW,GAAA,WAeE,SAAAA,EAAoBC,EAAoCzlB,GAApC9E,KAAAuqB,aAAAA,EAAoCvqB,KAAA8E,SAAAA,SAExDwlB,EAAApqB,UAAAsqB,YAAA,SACEjnB,EACA6I,OAEM0F,EAAS9R,KAAK8E,SAASI,IAAI6N,EAAAA,QAE3B7I,EAAsBlK,KAAKuqB,aAAargB,sBAC9C,OAAIA,IAIJ4H,EAAO2Y,SAAS,CAAC,kBAAmB,CAAEre,MAAO,CAAEse,YAAate,EAAMgB,QAC3D,wBAlBVzB,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAJLrU,EAAAA,oBARYjF,EAAAA,sKAArB,GCAA,ICEiBokB,GCIAC,GCDAC,GHLjBC,GAAA,WAaE,SAAAA,EAAoB1hB,GAAApJ,KAAAoJ,MAAAA,SAEpB0hB,EAAA5qB,UAAAsqB,YAAA,SAAYpiB,EAA+BgE,GAA3C,IAAA1G,EAAA1F,KACM+qB,EACFpd,GAAG,WAAO,OAAAvF,EAAMsK,KAAK3K,OAAOijB,mBAAmBrd,GAAG,WAAC,OAAMvF,EAAMsK,KAAmB,kBACpF,OAAKqY,IACHA,EAAWpd,GAAG,WAEV,OAAAvF,EAAM6iB,YAAY5iB,SAASiF,MAAI,SAAC6C,GAAS,OAAA/D,EAAMgB,IAAIpM,QAAQmP,EAAMhD,OAAS,KAAGuF,KAC1EsY,mBAQFhrB,KAAKoJ,MAAMkK,OAAOrH,EAAYgC,iBAAiB8c,IAAWzhB,KAC/D+F,EAAAA,KAAG,SAAC6b,GACGA,GACHxlB,EAAK0D,MAAMiB,SAAS,IAAI7C,EAAe,CAAEsI,OAAQ,WAP5CJ,EAAAA,IAAG,wBAjBjB/D,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDARLpU,EAAAA,qIAFT,ICEA,SAAiBkf,GACf,SAAAQ,KAQA,SAAAC,KAWA,SAAAC,KAOA,SAAAC,KAYA,SAAAC,KASA,SAAAC,KASA,SAAAC,KAIA,SAAAC,uDA7CA,kFAqCA,wCArDF,CAAiBf,KAAAA,GAAwB,KCIzC,SAAiBC,GACf,SAAAe,KAUA,SAAAC,KAQA,SAAAC,KAIA,SAAAC,KAOA,SAAAC,KAYA,SAAAC,KAKA,SAAAC,KAKA,SAAAC,gIAKA,aAzDF,CAAiBtB,KAAAA,GAAG,KCDpB,SAAiBC,GAOf,SAAAsB,KASA,SAAAC,KAKA,SAAAC,KAKA,SAAAC,KAKA,SAAAC,KAIA,SAAAC,yGAnCF,CAAiB3B,KAAAA,GAAM,KCLvB,OAGE,SAAY4B,GACV,IAAK,IAAMnrB,UADD,IAAAmrB,IAAAA,EAAA,IACQA,EACZA,EAAc5sB,eAAeyB,KAC/BtB,KAAKsB,GAAOmrB,EAAcnrB,KAMlC,mBAGE,SAAAorB,EAAYD,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OANuC6nB,EAAAA,EAAAA,GAMvC6E,GANuCC,IAQvC,IAAAC,GAGE,SAAYH,GACV,IAAK,IAAMnrB,UADD,IAAAmrB,IAAAA,EAAA,IAFZzsB,KAAA6sB,eAAiB,GAGGJ,EACZA,EAAc5sB,eAAeyB,KAC/BtB,KAAKsB,GAAOmrB,EAAcnrB,KAMlC,IAAAwrB,GAAA,SAAAlF,GAGE,SAAAkF,EAAYL,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OAN2C6nB,EAAAA,EAAAA,GAM3CiF,EANA,CAA2CF,IAQ3C,IAAAG,GAAA,SAAAnF,GAGE,SAAAmF,EAAYN,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OANoD6nB,EAAAA,EAAAA,GAMpDkF,EANA,CAAoDD,IAQpD,OAGE,SAAYL,GACV,IAAK,IAAMnrB,UADD,IAAAmrB,IAAAA,EAAA,IACQA,EACZA,EAAc5sB,eAAeyB,KAC/BtB,KAAKsB,GAAOmrB,EAAcnrB,KAMlC,mBAIE,SAAA0rB,EAAYP,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OAPoE6nB,EAAAA,EAAAA,GAOpEmF,GAPoEC,IASpE,mBAME,SAAAC,EACET,eAAA,IAAAA,IAAAA,EAAA,IAEA7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OARU6nB,EAAAA,EAAAA,GAQVqF,GARUF,IAUV,mBAIE,SAAAG,EAAYV,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OAP4D6nB,EAAAA,EAAAA,GAO5DsF,GAP4DH,IAS5D,mBAME,SAAAI,EAAYX,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OAT8E6nB,EAAAA,EAAAA,GAS9EuF,GAT8ED,IAW9E,mBAKE,SAAAE,EAAYZ,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OARgE6nB,EAAAA,EAAAA,GAQhEwF,GARgEF,IAUhE,IChHiBG,GCIAC,GCFAC,kBHsHf,SAAAC,EAAYhB,eAAA,IAAAA,IAAAA,EAAA,IACV7E,EAAAhnB,KAAAZ,KAAMysB,IAAczsB,KAExB,OARU6nB,EAAAA,EAAAA,GAQV4F,GARUJ,KCnHV,SAAiBC,GACf,SAAAvhB,KAIA,SAAAof,KAQA,SAAAuC,uDAbF,CAAiBJ,KAAAA,GAAO,KCIxB,SAAiBC,GACf,SAAAxhB,KAIA,SAAA4hB,KAKA,SAAAC,KASA,SAAAC,KAmBA,SAAAC,wHAtCF,CAAiBP,KAAAA,GAAqB,KEFtC,SAAiBQ,GAoBf,SAAAC,iBApBF,CAAiBD,EAAAA,OAAAA,EAAAA,KAAI,KDArB,SAAiBP,GACf,SAAAzhB,KAMA,SAAAkiB,iCAPF,CAAiBT,KAAAA,GAAO,KEFxB,IAAAU,GAAA,WAgBE,SAAAA,EAAoBnO,EAA2B3W,GAA3BpJ,KAAA+f,KAAAA,EAA2B/f,KAAAoJ,MAAAA,SAJ/C5J,OAAAqC,eAAIqsB,EAAAhuB,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKoJ,MAAMO,eAAesC,EAAYS,QAAQ,kEAKvDwhB,EAAAhuB,UAAAiuB,iBAAA,WAME,OAAOnuB,KAAK+f,KAAKR,QALmB,CAClCE,OAAQ,MACRrS,IAAK,sCAGoE,CACzE+B,QAASnP,KAAKmP,+BAjBnBxD,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDALLR,UACA5T,EAAAA,oJALT,qBCiBE,SAAA2iB,EACUrO,EACA5W,EACAC,EACuCsW,GAHvC1f,KAAA+f,KAAAA,EACA/f,KAAAmJ,aAAAA,EACAnJ,KAAAoJ,MAAAA,EACuCpJ,KAAA0f,QAAAA,SAGjD0O,EAAAluB,UAAAmuB,MAAA,SAAMC,EAAkBC,GAAxB,IAAA7oB,EAAA1F,KACQ6K,EAAS7K,KAAKoJ,MAAMO,eAAeT,EAAa0B,WAMtD,OAJA5K,KAAKmJ,aAAaqlB,UAChBxuB,KAAKoJ,MAAMO,eAAesC,EAAYM,OAAO,gBAAgBkiB,aAGxDnL,EAAAA,KAAKtjB,KAAKmJ,aAAaulB,yBAAyBplB,KACrDiG,EAAAA,WAAS,WACP,OAAA+T,EAAAA,KACE5d,EAAKyD,aAAawlB,4BAChBL,EACAC,EACA,IAAIK,EAAAA,YAAWxuB,EAAA,GAAOyK,GAAUA,EAAOkN,IAAM,CAAE8W,SAAUhkB,EAAOkN,WAItExI,EAAAA,WAAS,WAAO,OAAA7J,EAAK0D,MAAMiB,SAAS,IAAIxD,MACxCwI,EAAAA,KAAG,eACKqb,EACJ/c,GAAG,WAAO,OAAApD,OAAOukB,QAAQ1iB,MAAMse,iBAAiBhlB,EAAKga,SAAW,IAAIgL,aAAe,IACrFhlB,EAAK0D,MAAMiB,SAAS,IAAI0kB,EAAAA,SAAS,CAACrE,QAEpClhB,EAAAA,KAAK,KAIT4kB,EAAAluB,UAAA8uB,OAAA,WAAA,IAAAtpB,EAAA1F,KACQivB,EAASjvB,KAAKoJ,MAAMO,eAAesC,EAAYS,QAAQ,mCAE7D,OAAO1M,KAAK+f,KACTR,QACC,CACEE,OAAQ,MACRrS,IAAK,uBAEP,KACA6hB,GAED3lB,KACCiG,EAAAA,WAAS,WAEP,OADA7J,EAAKyD,aAAaiB,SACX1E,EAAK0D,MAAMiB,SAAS,IAAIxD,4BArDxC8E,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAJLR,UANA7T,EAAAA,oBADAC,EAAAA,sCAkBJyV,EAAAA,UAAQ,CAAAta,KAAI8f,EAAAA,OAAMrgB,KAAA,CAAC,mPCPtB,SAAA6oB,EAAoB9lB,GAAApJ,KAAAoJ,MAAAA,SAEpB8lB,EAAAhvB,UAAAiM,OAAA,WACE,OAAOnM,KAAKoJ,MAAMO,eAAesC,EAAYE,SAG/C+iB,EAAAhvB,UAAAmM,mBAAA,WACE,OAAOrM,KAAKoJ,MAAMO,eAAesC,EAAYI,qBAG/C6iB,EAAAhvB,UAAAqM,OAAA,eAAO,IAAAlG,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACL,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYM,OAAM1L,MAAlBoL,EAAWtH,EAAW0B,MAGzD6oB,EAAAhvB,UAAAwM,QAAA,eAAQ,IAAArG,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACN,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYS,QAAO7L,MAAnBoL,EAAWtH,EAAY0B,MAG1D6oB,EAAAhvB,UAAAgN,SAAA,eAAS,IAAA7G,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACP,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYiB,SAAQrM,MAApBoL,EAAWtH,EAAa0B,MAG3D6oB,EAAAhvB,UAAAqN,UAAA,eAAU,IAAAlH,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACR,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYsB,UAAS1M,MAArBoL,EAAWtH,EAAc0B,MAG5D6oB,EAAAhvB,UAAAwN,WAAA,eAAW,IAAArH,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACT,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYyB,WAAU7M,MAAtBoL,EAAWtH,EAAe0B,MAG7D6oB,EAAAhvB,UAAA4N,YAAA,eAAY,IAAAzH,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACV,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAY6B,YAAWjN,MAAvBoL,EAAWtH,EAAgB0B,MAG9D6oB,EAAAhvB,UAAA+N,iBAAA,eAAiB,IAAA5H,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACf,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYgC,iBAAgBpN,MAA5BoL,EAAWtH,EAAqB0B,MAGnE6oB,EAAAhvB,UAAAsO,gBAAA,eAAgB,IAAAnI,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACd,OAAO1O,KAAKoJ,MAAMO,eAAesC,EAAYuC,gBAAe3N,MAA3BoL,EAAWtH,EAAoB0B,MAGlE6oB,EAAAhvB,UAAAivB,4BAAA,WACE,OAAOnvB,KAAKoJ,MAAMiB,SAAS,IAAIxD,IAGjCqoB,EAAAhvB,UAAAkvB,yBAAA,eAAyB,IAAA/oB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACvB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAK5D,EAAgB4oB,KAAAxuB,MAAhB4F,EAAgB9B,EAAA,MAAA,GAAI0B,OAGrD6oB,EAAAhvB,UAAAovB,iBAAA,eAAiB,IAAAjpB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACf,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAKvD,EAAQuoB,KAAAxuB,MAARiG,EAAQnC,EAAA,MAAA,GAAI0B,OAG7C6oB,EAAAhvB,UAAAqvB,uBAAA,eAAuB,IAAAlpB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACrB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAKrD,EAAcqoB,KAAAxuB,MAAdmG,EAAcrC,EAAA,MAAA,GAAI0B,2BA3DpDsF,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAVLpU,EAAAA,wICDT,IAAA+jB,GAAA,WAKE,SAAAA,EAAoB1qB,GAAA9E,KAAA8E,SAAAA,SAEpB0qB,EAAAtvB,UAAAuvB,eAAA,SACEC,EACA5qB,GAEA,YAFA,IAAAA,IAAAA,EAAW9E,KAAK8E,UAET4qB,EAAmBC,cAAc7qB,wBAR3C6G,EAAAA,WAAUtF,KAAA,CAAC,CAAEwZ,WAAY,oDAHLtZ,EAAAA,2IAArB,GCAA,IAAAqpB,GAAA,WAIA,SAAAA,IAEmB5vB,KAAA6vB,SAAW,IAAIzJ,WAEhCwJ,EAAA1vB,UAAA4vB,cAAA,SACEC,OAEMC,EAAOrV,GAAaoV,EAAgBE,SAE1C,IAAIjwB,KAAK6vB,SAAS3L,IAAI8L,GAAtB,KAEM/T,EAAU8T,EAAgBrT,gBAGhC,OAFA1c,KAAK6vB,SAASxJ,IAAI2J,GAEX/T,IAGT2T,EAAA1vB,UAAAgwB,cAAA,SAAcjU,OACN+T,EAAOrV,GAAasB,EAAQkU,aAClCnwB,KAAK6vB,SAASO,OAAOJ,GAErB/T,EAAQyB,WAAWC,YAAY1B,IAGjC2T,EAAA1vB,UAAAgkB,IAAA,SAAI+L,OACID,EAAOrV,GAAasV,GAE1B,OAAOjwB,KAAK6vB,SAAS3L,IAAI8L,wBA3B5BrkB,EAAAA,WAAUtF,KAAA,CAAC,CAAEwZ,WAAY,kHAJ1B,GCEA,kBACE,SAAAwQ,EAAmBC,GAAAtwB,KAAAswB,aAAAA,EAKrB,OADED,EAAAnwB,UAAAqwB,QAAA,aACFF,KAEA,IAAAG,GAAA,SAAA5I,GAAA,SAAA4I,mDAQA,OAR4C3I,EAAAA,EAAAA,GAC1C2I,EAAAtwB,UAAAuwB,SAAA,WACE,OAAO,GAGTD,EAAAtwB,UAAAqwB,QAAA,WACEvwB,KAAKswB,aAAarX,SAEtBuX,EARA,CAA4CH,mBAW1C,SAAAK,EAAYJ,EAAwC1nB,GAApD,IAAAlD,EACEkiB,EAAAhnB,KAAAZ,KAAMswB,IAAatwB,YAD+B0F,EAAAkD,MAAAA,IAOtD,OARiDif,EAAAA,EAAAA,GAK/C6I,EAAAxwB,UAAAuwB,SAAA,WACE,OAAOjW,KAAKmW,IAAInW,KAAKoW,IAAI,EAAG5wB,KAAK4I,OAAQ5I,KAAKswB,aAAa3vB,SAE/D+vB,GARiDL,IAUjD,IAAaQ,GAAqB,CAChCC,MAAA,SAAMR,GACJ,OAAO,IAAIE,GAAuBF,IAEpCS,OAAA,SAAOT,GACL,OAAO,IAAII,GAA4BJ,EAAcA,EAAa3vB,SAEpEqwB,QAAA,SAAQV,GACN,OAAO,IAAII,GAA4BJ,EAAc,IAEvDW,OAAA,SAAOX,EAAgC1nB,GACrC,OAAO,IAAI8nB,GAA4BJ,EAAc1nB,QCxCvD,SAAmBsoB,GAAAlxB,KAAAkxB,MAAAA,GAKrB,IAAAC,GAAA,SAAAvJ,GACE,SAAAuJ,EAAYD,UACVtJ,EAAAhnB,KAAAZ,KAAMkxB,IAAMlxB,KAMhB,OARkD6nB,EAAAA,EAAAA,GAKhDsJ,EAAAjxB,UAAAkxB,SAAA,SAASnV,GACPA,EAAQC,aAAa,QAASlc,KAAKkxB,QAEvCC,EARA,CAAkDE,mBAWhD,SAAAC,WACE1J,EAAAhnB,KAAAZ,OAAOA,KAIX,OAN+C6nB,EAAAA,EAAAA,GAK7CyJ,EAAApxB,UAAAkxB,SAAA,SAAS7tB,KACX+tB,GAN+CD,IAQlCE,GAA4B,CACvCC,MAAA,SAAMN,GACJ,OAAO,IAAIC,GAA6BD,IAE1CO,gBACE,OAAO,IAAIH,mBCzBb,SAAAI,EACSzB,EACG9S,EACAwU,QADA,IAAAxU,IAAAA,EAA2BP,GAAaG,qBACxC,IAAA4U,IAAAA,EAAmDJ,GAA0BE,QAFhFzxB,KAAAiwB,QAAAA,EACGjwB,KAAAmd,YAAAA,EACAnd,KAAA2xB,wBAAAA,EAad,OARED,EAAAxxB,UAAAwc,cAAA,eACQT,EAAUjc,KAAK4xB,gBAKrB,OAHA5xB,KAAK2xB,wBAAwBP,SAASnV,GACtCjc,KAAKmd,YAAYT,cAAcT,GAExBA,GAEXyV,KAEA,IAAAG,GAAA,SAAAjK,GAAA,SAAAiK,mDAOA,OAP0ChK,EAAAA,EAAAA,GACxCgK,EAAA3xB,UAAA0xB,cAAA,eACQ3V,EAAUO,SAASoV,cAAc,SAGvC,OAFA3V,EAAQkU,YAAcnwB,KAAKiwB,QAEpBhU,GAEX4V,EAPA,CAA0CH,mBAS1C,SAAAI,mDAOA,OAP2CjK,EAAAA,EAAAA,GACzCiK,EAAA5xB,UAAA0xB,cAAA,eACQ3V,EAAUO,SAASoV,cAAc,UAGvC,OAFA3V,EAAQkU,YAAcnwB,KAAKiwB,QAEpBhU,GAEX6V,GAP2CJ,IAS9BK,GAAmB,CAC9BC,mBAAA,SAAmB/B,GACjB,OAAO,IAAI6B,GAAsB7B,EAASrT,GAAaE,iBAEzDmV,mBAAA,SAAmBhC,GACjB,OAAO,IAAI6B,GAAsB7B,EAASrT,GAAaG,iBAEzDmV,kBAAA,SAAkBjC,GAChB,OAAO,IAAI4B,GAAqB5B,EAASrT,GAAaG,iBAExDoV,mBAAA,SAAmBlC,GACjB,OAAO,IAAI4B,GAAqB5B,EAASrT,GAAaK,iCC/CxD,SAAAmV,EAAmBzZ,GAAA3Y,KAAA2Y,QAAAA,EAMrB,OAHEyZ,EAAAlyB,UAAAmyB,WAAA,SAAWC,GACT,OAAOtyB,KAAK2Y,SAEhByZ,KAEA,mBAGE,SAAAG,WACE3K,EAAAhnB,KAAAZ,UAAM2W,IAAU3W,KAEpB,OAJU6nB,EAAAA,EAAAA,GAIV0K,GAJUH,mBAMV,SAAAI,mDAMA,OANyE3K,EAAAA,EAAAA,GACvE2K,EAAAtyB,UAAAmyB,WAAA,SAAWC,GAAX,IAAA5sB,EAAA1F,KAGE,OAFAR,OAAOmN,KAAK3M,KAAK2Y,SAAS5J,SAAO,SAACzN,GAAO,OAACgxB,EAAaG,SAASnxB,GAAOoE,EAAKiT,QAAQrX,MACpFgxB,EAAaI,kBAAkB5b,gBACxB9W,KAAK2Y,SAEhB6Z,GANyEJ,mBAQzE,SAAAO,mDAIA,OAJ+E9K,EAAAA,EAAAA,GAC7E8K,EAAAzyB,UAAAmyB,WAAA,WACE,OAAOryB,KAAK2Y,SAEhBga,GAJ+EP,IAMlEQ,GAAmB,CAC9BnB,KAAA,WACE,OAAO,IAAIc,IAEbnsB,UAAA,SAAqCuS,GACnC,OAAO,IAAI6Z,GAA4B7Z,IAEzCka,SAAA,SAA2Cla,GACzC,OAAO,IAAIga,GAA2Bha,mBCnCxC,SAAAma,EACS3lB,EACGgQ,EACAC,QADA,IAAAD,IAAAA,EAA2BP,GAAaG,qBACxC,IAAAK,IAAAA,EAA2CjB,GAAsBC,aAFpEpc,KAAAmN,KAAAA,EACGnN,KAAAmd,YAAAA,EACAnd,KAAAod,oBAAAA,EAYd,OAPE0V,EAAA5yB,UAAA6yB,aAAA,WAAA,IAAArtB,EAAA1F,KACE,OAAO0P,EAAAA,GAAG,MAAMpG,KACdiG,EAAAA,WAAS,WACP,OAAA2N,GAAgBxX,EAAKksB,gBAAiBlsB,EAAKyX,YAAazX,EAAK0X,0BAIrE0V,KAEA,IAAAE,GAAA,SAAApL,GACE,SAAAoL,EAAYC,EAAa9V,EAA2BC,UAClDwK,EAAAhnB,KAAAZ,KAAMizB,EAAK9V,EAAaC,IAAoBpd,KAShD,OAX2C6nB,EAAAA,EAAAA,GAKzCmL,EAAA9yB,UAAA0xB,cAAA,eACQ3V,EAAUO,SAASoV,cAAc,UAGvC,OAFA3V,EAAQgX,IAAMjzB,KAAKmN,KAEZ8O,GAEX+W,EAXA,CAA2CF,mBAczC,SAAAI,EAAYC,EAAchW,EAA2BC,UACnDwK,EAAAhnB,KAAAZ,KAAMmzB,EAAMhW,EAAaC,IAAoBpd,KAUjD,OAZ0C6nB,EAAAA,EAAAA,GAKxCqL,EAAAhzB,UAAA0xB,cAAA,eACQ3V,EAAUO,SAASoV,cAAc,QAIvC,OAHA3V,EAAQmX,IAAM,aACdnX,EAAQkX,KAAOnzB,KAAKmN,KAEb8O,GAEXiX,GAZ0CJ,IAc7BO,GAAmB,CAC9BC,4BAAA,SAA4BL,EAAalX,GACvC,OAAO,IAAIiX,GACTC,EACArW,GAAaE,eACbX,GAAsBC,UAAUL,KAGpCwX,4BAAA,SAA4BN,EAAalX,GACvC,OAAO,IAAIiX,GACTC,EACArW,GAAaG,eACbZ,GAAsBC,UAAUL,KAGpCyX,2BAAA,SAA2BP,EAAalX,GACtC,OAAO,IAAImX,GACTD,EACArW,GAAaG,eACbZ,GAAsBC,UAAUL,KAGpC0X,6BAAA,SAA6BR,EAAalX,GACxC,OAAO,IAAIiX,GACTC,EACArW,GAAaK,gBACbd,GAAsBC,UAAUL,KAGpC2X,4BAAA,SAA4BT,EAAalX,GACvC,OAAO,IAAImX,GACTD,EACArW,GAAaK,gBACbd,GAAsBC,UAAUL,SCpEpC,SAAmBkU,GAAAjwB,KAAAiwB,QAAAA,GAKrB,mBACE,SAAA0D,EACEziB,EACQ0iB,EACAC,QAAA,IAAAA,IAAAA,EAAmCjB,GAAiBnB,QAH9D,IAAA/rB,EAKEkiB,EAAAhnB,KAAAZ,KAAMkR,IAAUlR,YAHR0F,EAAAkuB,kBAAAA,EACAluB,EAAAmuB,gBAAAA,IAoBZ,OAxBsEhM,EAAAA,EAAAA,GASpE8L,EAAAzzB,UAAAyvB,cAAA,SAAc7qB,GACZ9E,KAAK4zB,kBAAkBrD,cAGjBuD,EADWhvB,EAASI,IAAI0d,EAAAA,0BACLP,wBAA+CriB,KAAKiwB,SAEvEqC,EAAetyB,KAAK4zB,kBAAkBtD,aAAalO,gBACvD0R,EACA9zB,KAAK4zB,kBAAkBnD,WACvB3rB,GAIF,OAFA9E,KAAK6zB,gBAAgBxB,WAAWC,GAEhC,GAEJqB,GAxBsEI,IA0BtE,mBACE,SAAAC,EACE9iB,EACQ2iB,EACA1W,QADA,IAAA0W,IAAAA,EAAmCjB,GAAiBnB,aACpD,IAAAtU,IAAAA,EAA2BP,GAAaE,gBAHlD,IAAApX,EAKEkiB,EAAAhnB,KAAAZ,KAAMkR,IAAUlR,YAHR0F,EAAAmuB,gBAAAA,EACAnuB,EAAAyX,YAAAA,IAoBZ,OAxB0E0K,EAAAA,EAAAA,GASxEmM,EAAA9zB,UAAAyvB,cAAA,SAAc7qB,OACNmvB,EAASnvB,EAASI,IAAIgvB,EAAAA,gBAEtB5B,EADWxtB,EAASI,IAAI0d,EAAAA,0BAE3BP,wBAA+CriB,KAAKiwB,SACpD9vB,OAAO2E,GAEV9E,KAAK6zB,gBAAgBxB,WAAWC,GAEhC2B,EAAOE,WAAW7B,EAAa8B,cACzBnY,EAAwBqW,EAAqB,SAA0BpZ,UAAU,GAGvF,OAFAlZ,KAAKmd,YAAYT,cAAcT,GAE/B,GAEJ+X,GAxB0ED,IA0B1E,mBACE,SAAAM,EACE5T,EACQmT,EACAC,QAAA,IAAAA,IAAAA,EAAkBjB,GAAiBnB,QAH7C,IAAA/rB,EAKEkiB,EAAAhnB,KAAAZ,KAAMygB,IAAYzgB,YAHV0F,EAAAkuB,kBAAAA,EACAluB,EAAAmuB,gBAAAA,IAiBZ,OArB4EhM,EAAAA,EAAAA,GAS1EwM,EAAAn0B,UAAAyvB,cAAA,WACE3vB,KAAK4zB,kBAAkBrD,cAEjB+D,EAAkBt0B,KAAK4zB,kBAAkBtD,aAAahY,mBAC1DtY,KAAKiwB,QACLjwB,KAAK6zB,gBAAgBlb,QACrB3Y,KAAK4zB,kBAAkBnD,YAIzB,OAFA6D,EAAgBxd,gBAEhB,GAEJud,GArB4EN,IAuB5E,IAAaQ,GAAsB,CACjCC,sBAAA,SACEtjB,EACAyH,GAEA,OAAO,IAAIqb,GACT9iB,EACAyH,GAAWia,GAAiBxsB,UAAUuS,KAG1C8b,2BAAA,SACEvjB,EACAof,EACA3X,GAEA,OAAO,IAAIgb,GACTziB,EACA2f,GAAmBE,OAAOT,GAC1B3X,GAAWia,GAAiBxsB,UAAUuS,KAG1C+b,0BAAA,SACEjU,EACA6P,EACA3X,GAEA,OAAO,IAAI0b,GACT5T,EACAoQ,GAAmBE,OAAOT,GAC1B3X,GAAWia,GAAiBC,SAASla,KAGzCgc,4BAAA,SACEzjB,EACAof,EACA3X,GAEA,OAAO,IAAIgb,GACTziB,EACA2f,GAAmBG,QAAQV,GAC3B3X,GAAWia,GAAiBxsB,UAAUuS,KAG1Cic,2BAAA,SACEnU,EACA6P,EACA3X,GAEA,OAAO,IAAI0b,GACT5T,EACAoQ,GAAmBG,QAAQV,GAC3B3X,GAAWia,GAAiBC,SAASla,KAGzCkc,4BAAA,SACE3jB,EACAof,EACA3X,GAEA,OAAO,IAAIgb,GACTziB,EACA2f,GAAmBC,MAAMR,GACzB3X,GAAWia,GAAiBxsB,UAAUuS,KAG1Cmc,2BAAA,SACErU,EACA6P,EACA3X,GAEA,OAAO,IAAI0b,GACT5T,EACAoQ,GAAmBC,MAAMR,GACzB3X,GAAWia,GAAiBC,SAASla,MCzK3Coc,GAAA,WAMA,SAAAA,IAIW/0B,KAAAg1B,OAAS,IAAI5O,IAEtBpmB,KAAAi1B,gBAA0D,UAc1DF,EAAA70B,UAAAg1B,KAAA,SACEC,EACAC,EACAC,EACAC,EACA/Y,GALF,IAAA7W,EAAA1F,KAOE,QAHA,IAAAs1B,IAAAA,EAAA,aACA,IAAA/Y,IAAAA,EAAA,aAEI4Y,aAAyBrC,GAAiB,KACtCyC,EAAWJ,EACXK,EAAyC,iBAArBJ,EAAgCA,EAAmB,EACvEK,EAA4C,iBAAxBJ,EAAmCA,EAAsB,IAEnF,OAAIr1B,KAAKg1B,OAAO9Q,IAAIqR,EAASpoB,MAAcuC,EAAAA,GAAG,IAAIgmB,YAAY,SAEvDH,EAASxC,eAAezpB,KAC7BqsB,EAAAA,WAAS,SAACC,GACR,OAAAhxB,EAAAA,OACEgxB,EAAOtsB,KAAKoM,EAAAA,MAAM+f,GAAajsB,EAAAA,KAAKgsB,IACpCzlB,EAAAA,WAAW,IAAI2lB,YAAY,cAG/BrmB,EAAAA,KAAG,WAAO,OAAA3J,EAAKsvB,OAAO3O,IAAIkP,EAASpoB,SACnCuI,EAAAA,MAAM,KACNmgB,EAAAA,YAAY,CAAEC,WAAY,EAAGC,UAAU,SAIvCC,EAAYb,EACVlF,EAAU,GAAmC,GAC7CrpB,EAAI,EAEV,OAAKovB,GAAc/F,IAEP+F,GAAa/F,IACvB+F,EAAY,CAAC,OAGVr2B,MAAMkN,QAAQmpB,KACjBA,EAAY,CAACA,IAGR,IAAI3Y,EAAAA,YAAU,SAAC4Y,GACpB,EAAwBlnB,SAAO,SAAE3B,EAAKxE,OAWhCstB,EAVE50B,EAAM8L,EAAMA,EAAI+oB,MAAM/oB,EAAIgpB,YAAY,KAAO,GAAK7b,KAExD,GAAI7U,EAAKuvB,gBAAgB3zB,GAGvB,OAFA20B,EAAWpzB,YACXozB,EAAWtkB,WAIbjM,EAAKuvB,gBAAgB3zB,GAAO,IAAI+0B,EAAAA,cAGnB,WAATzvB,IACFsvB,EAAU1Z,SAASoV,cAAc,WACzBhrB,KAAO,kBACXwG,IACF,EAA+B6lB,IAAM7lB,GAGvC,EAA+BkpB,KAAOrG,GAC7B7iB,IACT8oB,EAAU1Z,SAASoV,cAAc,SACzBhrB,KAAO,WACf,EAA6BwsB,IAAM,aAE/BhmB,IACF,EAA6B+lB,KAAO/lB,KAGtC8oB,EAAU1Z,SAASoV,cAAc,UACHzB,YAAcF,EAG9CiG,EAAQ3Y,OAAM,WACZ7X,EAAKuvB,gBAAgB3zB,GAAKuB,OAC1B6C,EAAKuvB,gBAAgB3zB,GAAKqQ,WAEtB/I,IAAUotB,EAAUr1B,OAAS,IAC/Bs1B,EAAWpzB,OACXozB,EAAWtkB,aAIf6K,SAAS+Z,cAAcjB,GAAa3Y,sBAAsBJ,EAAU2Z,UArD/DnmB,EAAAA,WAAW,mDApDvBpE,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,kHAPd,qBCUE,SAAA2W,EAAoBptB,GAAApJ,KAAAoJ,MAAAA,SAEpBotB,EAAAt2B,UAAAkgB,WAAA,WACE,OAAOpgB,KAAKoJ,MAAMO,eAAeuW,GAAaE,aAGhDoW,EAAAt2B,UAAAu2B,mBAAA,WACE,OAAOz2B,KAAKoJ,MAAMiB,SAAS,IAAIjD,IAGjCovB,EAAAt2B,UAAAw2B,sBAAA,eAAsB,IAAArwB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACpB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAKhD,EAAagoB,KAAAxuB,MAAbwG,EAAa1C,EAAA,MAAA,GAAI0B,OAGlDmwB,EAAAt2B,UAAAy2B,uBAAA,eAAuB,IAAAtwB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GACrB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAK/C,EAAc+nB,KAAAxuB,MAAdyG,EAAc3C,EAAA,MAAA,GAAI0B,2BAnBpDsF,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDANLpU,EAAAA,0JCaP,SAAAmrB,EAAoBxtB,GAAApJ,KAAAoJ,MAAAA,SAEpBwtB,EAAA12B,UAAAuK,YAAA,WACE,OAAOzK,KAAKoJ,MAAMO,eAAeT,EAAauB,cAGhDmsB,EAAA12B,UAAA0K,UAAA,WACE,OAAO5K,KAAKoJ,MAAMO,eAAeT,EAAa0B,YAGhDgsB,EAAA12B,UAAA4K,iBAAA,WACE,OAAO9K,KAAKoJ,MAAMO,eAAeT,EAAa4B,mBAGhD8rB,EAAA12B,UAAA22B,oBAAA,eAAoB,IAAAxwB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GAClB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAK5C,EAAW4nB,KAAAxuB,MAAX4G,EAAW9C,EAAA,MAAA,GAAI0B,OAGhDuwB,EAAA12B,UAAA42B,kBAAA,eAAkB,IAAAzwB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GAChB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAK3C,EAAS2nB,KAAAxuB,MAAT6G,EAAS/C,EAAA,MAAA,GAAI0B,OAG9CuwB,EAAA12B,UAAA62B,oBAAA,eAAoB,IAAA1wB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GAClB,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAKxC,EAAWwnB,KAAAxuB,MAAXgH,EAAWlD,EAAA,MAAA,GAAI0B,OAGhDuwB,EAAA12B,UAAA82B,6BAAA,eAA6B,IAAA3wB,EAAA,GAAAqI,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAArI,EAAAqI,GAAAhO,UAAAgO,GAC3B,OAAO1O,KAAKoJ,MAAMiB,SAAQ,IAAK1C,EAAoB0nB,KAAAxuB,MAApB8G,EAAoBhD,EAAA,MAAA,GAAI0B,2BA/B1DsF,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,oDAVLpU,EAAAA,wICET,IAAaoM,GAAO,SAAavW,GAAY,OAAA,SAA0BiC,EAAGuU,GAAS,OAAAA,EAAKxW,KAE3E21B,GAAW,eACtB,IAAAtqB,EAAA,GAAA+B,EAAA,EAAAA,EAAAhO,UAAAC,OAAA+N,IAAA/B,EAAA+B,GAAAhO,UAAAgO,mBACwBnL,EAAGuU,GAAS,OAAAnL,EAAKI,QAAM,SAAEC,EAAK1L,GAAQ,OAAA0L,EAAI1L,KAAMwW,MAE1Eof,GAAA,WAAA,SAAAA,IAIEl3B,KAAAm3B,GAAKtf,GAEL7X,KAAAo3B,OAASH,8BANVtrB,EAAAA,WAAUtF,KAAA,CAAC,CACVwZ,WAAY,kHADd,svE/DiEA,SAA6B9X,GACtBpI,MAAMkN,QAAQ9E,KACjBA,EAAS,CAACA,IAGZiB,EAAW3E,KAAIxD,MAAfmI,EAAUrE,EAASoD,4De3DrB,SAAiCpH,QAAA,IAAAA,IAAAA,EAAA,GAC/BA,EAAS6Z,KAAKmW,IAAInW,KAAKoW,IAAI,EAAGjwB,GAAS,SAEjC02B,EAAS,6BACTC,EAAS,6BAKTC,EAAS,SAAIC,GAAmB,OAAAA,EAAOhd,KAAKid,MAAMjd,KAAKC,SAAW+c,EAAO72B,UAEzE4tB,EAAW5uB,MAAM,CAAEgB,OAAMA,IAC/B4tB,EAAS,GAAKgJ,EAAUF,GACxB9I,EAAS,GAAKgJ,EAAUD,GACxB/I,EAAS,GAAKgJ,EATE,cAUhBhJ,EAAS,GAAKgJ,EATG,wBAWjB,IAAK,IAAI/2B,EAAI,EAAGA,EAAIG,EAAQH,IAC1B+tB,EAAS/tB,GAAK+2B,EAXJF,sFAcZ,OAAO9I,EAASzlB,MAAI,WAAO,MAAA,GAAM0R,KAAKC,YAAUid,KAAK,gIiDtCvD,SAAoCC,OAC5BjY,EAA2B,GAEjC,IAAK,IAAMkY,KAAUD,EACdtd,GAASud,IACZlY,EAAQrb,KAAK,CACX/C,IAAKs2B,EACLj1B,MAAOg1B,EAAMC,KAGnB,OAAOlY","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","import { ABP } from '../models/common';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: ABP.FullRoute[],\r\n): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ofActionSuccessful,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n} from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  ModifyOpenedTabCount,\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(private oAuthService: OAuthService, private store: Store, private actions: Actions) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of, throwError } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const defaultResourceName = snq(() => state.environment.localization.defaultResourceName);\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = defaultResourceName;\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    const apiName = this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n    const api = this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n    return this.http\r\n      .get<ApplicationConfiguration.Response>(`${api}/api/abp/application-configuration`)\r\n      .pipe(\r\n        tap(configuration =>\r\n          patchState({\r\n            ...configuration,\r\n          }),\r\n        ),\r\n        switchMap(configuration => {\r\n          let defaultLang: string =\r\n            configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n          if (defaultLang.includes(';')) {\r\n            defaultLang = defaultLang.split(';')[0];\r\n          }\r\n\r\n          return this.store.selectSnapshot(SessionState.getLanguage)\r\n            ? of(null)\r\n            : dispatch(new SetLanguage(defaultLang));\r\n        }),\r\n        catchError(err => {\r\n          dispatch(new RestOccurError(new HttpErrorResponse({ status: 0, error: err })));\r\n          return throwError(err);\r\n        }),\r\n      );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if ((parent.url || '').replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.children = route.children || [];\r\n      route.order = route.order || route.order === 0 ? route.order : (parent.children || []).length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({\r\n      environment,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngComponentOutlet=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const { routes } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const segments = snq(() => router.parseUrl(event.url).root.children.primary.segments, [\r\n          { path: router.url.replace('/', '') },\r\n        ] as any);\r\n\r\n        const layouts = {\r\n          application: this.getComponent('Theme.ApplicationLayoutComponent'),\r\n          account: this.getComponent('Theme.AccountLayoutComponent'),\r\n          empty: this.getComponent('Theme.EmptyLayoutComponent'),\r\n        };\r\n\r\n        const expectedLayout =\r\n          (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts[expectedLayout].component;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(debounceTime(this.debounce), takeUntilDestroy(this))\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const { skipGetAppConfiguration } = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    if (skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (!isUndefinedOrEmptyString(value)) acc[key] = value;\r\n\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models/common';\r\nimport { getAbpRoutes, organizeRoutes } from '../utils/route-utils';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes, wrappers } = transformedRoutes;\r\n      wrappers = reduceWrappers(wrappers);\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n\r\nfunction reduceWrappers(wrappers: ABP.FullRoute[] = []) {\r\n  const existingWrappers = new Set();\r\n\r\n  return wrappers.filter(wrapper => {\r\n    if (existingWrappers.has(wrapper.name)) return false;\r\n\r\n    existingWrappers.add(wrapper.name);\r\n    return true;\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store, Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\nimport { SetLanguage } from '../actions/session.actions';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n\r\n    this.listenToSetLanguage();\r\n  }\r\n\r\n  private listenToSetLanguage() {\r\n    this.actions\r\n      .pipe(ofActionSuccessful(SetLanguage))\r\n      .subscribe(({ payload }) => this.registerLocale(payload));\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { LocalizationService } from './services/localization.service';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { CORE_OPTIONS } from './tokens/options.token';\r\nimport { noop } from './utils/common-utils';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [LocalizationService],\r\n          useFactory: noop,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    router.navigate(['/account/login'], { state: { redirectUrl: state.url } });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    currentCulture: CurrentCulture;\r\n    defaultResourceName: string;\r\n    languages: Language[];\r\n    values: LocalizationValue;\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface CurrentCulture {\r\n    cultureName: string;\r\n    dateTimeFormat: DateTimeFormat;\r\n    displayName: string;\r\n    englishName: string;\r\n    isRightToLeft: boolean;\r\n    name: string;\r\n    nativeName: string;\r\n    threeLetterIsoLanguageName: string;\r\n    twoLetterIsoLanguageName: string;\r\n  }\r\n\r\n  export interface DateTimeFormat {\r\n    calendarAlgorithmType: string;\r\n    dateSeparator: string;\r\n    fullDateTimePattern: string;\r\n    longTimePattern: string;\r\n    shortDatePattern: string;\r\n    shortTimePattern: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    /**\r\n     *\r\n     * @deprecated To be deleted in v3.0\r\n     */\r\n    requirements?: Config.Requirements;\r\n    skipGetAppConfiguration?: boolean;\r\n  }\r\n\r\n  export interface Test {\r\n    baseHref?: Router;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Option<T> {\r\n    key: Extract<keyof T, string>;\r\n    value: T[Extract<keyof T, string>];\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    hmr?: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface ApiConfig {\r\n    [key: string]: string;\r\n    url: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: ApiConfig;\r\n    default: ApiConfig;\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export type Config = Partial<{\r\n    apiName: string;\r\n    skipHandleError: boolean;\r\n    observe: Observe;\r\n  }>;\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n\r\n    return this.rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          this.oAuthService.logOut();\r\n          return this.store.dispatch(new GetAppConfiguration());\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    return of(null).pipe(\r\n      switchMap(() =>\r\n        fromLazyLoad<E>(this.createElement(), this.domStrategy, this.crossOriginStrategy),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(\r\n    component: T,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Set();\r\n\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event>;\r\n  /**\r\n   *\r\n   * @deprecated Use other overload that requires a strategy as first param\r\n   */\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content?: string,\r\n    targetQuery?: string,\r\n    position?: InsertPosition,\r\n  ): Observable<void>;\r\n  load(\r\n    strategyOrUrl: LoadingStrategy | string | string[],\r\n    retryTimesOrType?: number | 'script' | 'style',\r\n    retryDelayOrContent?: number | string,\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<Event | void> {\r\n    if (strategyOrUrl instanceof LoadingStrategy) {\r\n      const strategy = strategyOrUrl;\r\n      const retryTimes = typeof retryTimesOrType === 'number' ? retryTimesOrType : 2;\r\n      const retryDelay = typeof retryDelayOrContent === 'number' ? retryDelayOrContent : 1000;\r\n\r\n      if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n      return strategy.createStream().pipe(\r\n        retryWhen(error$ =>\r\n          concat(\r\n            error$.pipe(delay(retryDelay), take(retryTimes)),\r\n            throwError(new CustomEvent('error')),\r\n          ),\r\n        ),\r\n        tap(() => this.loaded.add(strategy.path)),\r\n        delay(100),\r\n        shareReplay({ bufferSize: 1, refCount: true }),\r\n      );\r\n    }\r\n\r\n    let urlOrUrls = strategyOrUrl;\r\n    const content = (retryDelayOrContent as string) || '';\r\n    const type = retryTimesOrType as 'script' | 'style';\r\n\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n"]}