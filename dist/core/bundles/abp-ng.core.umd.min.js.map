{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/common-utils.ts","ng://@abp/ng.core/lib/utils/number-utils.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/tokens/options.token.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/strategies/cross-origin.strategy.ts","ng://@abp/ng.core/lib/strategies/dom.strategy.ts","ng://@abp/ng.core/lib/utils/lazy-load-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/localization.module.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/dtos.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/content-projection.service.ts","ng://@abp/ng.core/lib/services/dom-insertion.service.ts","ng://@abp/ng.core/lib/strategies/container.strategy.ts","ng://@abp/ng.core/lib/strategies/content-security.strategy.ts","ng://@abp/ng.core/lib/strategies/content.strategy.ts","ng://@abp/ng.core/lib/strategies/context.strategy.ts","ng://@abp/ng.core/lib/strategies/loading.strategy.ts","ng://@abp/ng.core/lib/strategies/projection.strategy.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/services/track-by.service.ts","ng://@abp/ng.core/lib/utils/form-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","AddRoute","payload","SetEnvironment","environment","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","AddReplaceableComponent","RestOccurError","SetLanguage","SetTenant","ModifyOpenedTabCount","operation","SetRemember","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","index","order","sort","a","ABP_ROUTES","getAbpRoutes","SessionState","oAuthService","store","actions","pipe","ofActionSuccessful","take","subscribe","sessionDetail","selectSnapshot","SessionState_1","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","hasValidAccessToken","remember","logOut","dispatch","fromEvent","window","event","getLanguage","_a","language","getTenant","tenant","getSessionDetail","setLanguage","_b","patchState","setTenant","setRemember","getState","modifyOpenedTabCount","_c","detail","OAuthService","Store","Actions","Injectable","tslib_1.__decorate","Action","Selector","State","defaults","ConfigState","http","getAll","state","getApplicationInfo","application","getOne","createSelector","ConfigState_1","getDeep","keys","split","isArray","Error","reduce","acc","val","getRoute","path","url","flattedRoutes","find","getApiUrl","apis","default","getSetting","snq","setting","values","getSettings","keyword","settings","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","trim","getLocalization","interpolateParams","_i","selector","localization","defaultResourceName","params","forEach","param","replace","addData","apiName","api","tap","configuration","switchMap","defaultLang","includes","of","catchError","err","HttpErrorResponse","status","throwError","patchRoute","patchRouteDeep","parentUrl","child","findIndex","addRoute","parent_1","tslib_1.__spread","parentName_1","unshift","updateRouteDeep","parentIndex","setEnvironment","HttpClient","ReplaceableComponentsState","replaceableComponents","getComponent","ReplaceableComponentsState_1","component","replaceableComponentsAction","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","Subject","complete","takeUntil","DynamicLayoutComponent","router","events","NavigationEnd","segments","parseUrl","root","primary","layouts","account","empty","expectedLayout","snapshot","data","layout","wrapper","findLayout","ngOnDestroy","Router","ActivatedRoute","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","select","distinctUntilChanged","res","externalComponent","RouterOutletComponent","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","InputEventDebounceDirective","el","debounce","debounceEvent","EventEmitter","debounceTime","emit","Output","EllipsisDirective","enabled","width","undefined","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","l","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","noop","isUndefinedOrEmptyString","isNumber","Number","uuid","Math","random","toString","generateHash","hashed","charCodeAt","CORE_OPTIONS","InjectionToken","getInitialData","skipGetAppConfiguration","oAuth","checkAccessToken","toPromise","localeInitializer","lang","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","CrossOriginStrategy","crossorigin","integrity","setCrossOrigin","element","setAttribute","CROSS_ORIGIN_STRATEGY","Anonymous","UseCredentials","DomStrategy","position","document","head","insertElement","insertAdjacentElement","DOM_STRATEGY","AfterElement","AppendToBody","AppendToHead","BeforeElement","PrependToHead","fromLazyLoad","domStrategy","crossOriginStrategy","Observable","observer","onload","clearCallbacks","handleError","parentNode","removeChild","createErrorHandler","onerror","onabort","onemptied","onstalled","onsuspend","FormSubmitDirective","formGroupDirective","host","ngSubmit","executedNgSubmit","markAsDirty","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","InitDirective","init","RestService","getApiFromStore","request","config","method","options","observe","skipHandleError","providedIn","ProfileService","rest","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","subscription","unsubscribe","condition","isGranted","parentElement","currentValue","Renderer2","Optional","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","providers","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","set","ComponentFactoryResolver","StopPropagationDirective","stopPropEvent","stopPropagation","VisibilityDirective","completed$","focusedElement","MutationObserver","mutations","mutation","from","childNodes","node","HTMLElement","removeFromDOM","childList","disconnect","ApiInterceptor","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","LocalizationPipe","transform","Pipe","MockLocalizationPipe","LocalizationModule","NgModule","exports","declarations","SortPipe","sortOrder","sortKey","toLowerCase","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","transformedRoutes","abpRoutes","transformed","loadChildren","abpPackage","abp","setUrls","transformRoutes","existingWrappers","Set","add","reduceWrappers","flat","flatRoutes","setValue","Inject","LocalizationService","ngZone","otherInstance","listenToSetLanguage","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","P","fulfilled","rejected","result","instant","NgZone","SkipSelf","LocaleId","localizationService","_super","tslib_1.__extends","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","localStorage","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","BaseCoreModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","imports","OAuthModule","entryComponents","RootCoreModule","NgxsModule","forFeature","NgxsRouterPluginModule","forRoot","NgxsStoragePluginModule","TestCoreModule","CoreModule","forTest","baseHref","ngModule","APP_BASE_HREF","NGXS_PLUGINS","multi","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","OAuthStorage","AuthGuard","oauthService","canActivate","navigate","redirectUrl","ApplicationConfiguration","ABP","Config","PermissionGuard","resource","requiredPolicy","routeConfig","access","Response","Localization","Language","CurrentCulture","DateTimeFormat","Auth","Value","CurrentUser","Root","Test","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Option","Environment","Application","ApiConfig","Apis","Requirements","LocalizationWithDefault","initialValues","PagedResultDto","ListResultDto","LimitedResultRequestDto","maxResultCount","PagedResultRequestDto","PagedAndSortedResultRequestDto","CreationAuditedEntityDto","EntityDto","CreationAuditedEntityWithUserDto","AuditedEntityDto","AuditedEntityWithUserDto","FullAuditedEntityDto","Profile","ReplaceableComponents","Session","FullAuditedEntityWithUserDto","ChangePasswordRequest","ReplaceableComponent","ReplaceableTemplateDirectiveInput","ReplaceableTemplateData","RouteData","Rest","Request","SessionDetail","ApplicationConfigurationService","getConfiguration","AuthService","login","username","password","configure","oAuthConfig","loadDiscoveryDocument","fetchTokenUsingPasswordFlow","HttpHeaders","__tenant","history","Navigate","logout","issuer","ConfigStateService","dispatchGetAppConfiguration","dispatchPatchRouteByName","bind","dispatchAddRoute","dispatchSetEnvironment","ContentProjectionService","projectContent","projectionStrategy","injectContent","DomInsertionService","inserted","insertContent","contentStrategy","hash","content","removeContent","textContent","delete","ContainerStrategy","containerRef","prepare","ClearContainerStrategy","getIndex","InsertIntoContainerStrategy","min","max","CONTAINER_STRATEGY","Clear","Append","Prepend","Insert","nonce","LooseContentSecurityStrategy","applyCSP","ContentSecurityStrategy","NoContentSecurityStrategy","CONTENT_SECURITY_STRATEGY","Loose","None","ContentStrategy","contentSecurityStrategy","createElement","StyleContentStrategy","ScriptContentStrategy","CONTENT_STRATEGY","AppendScriptToBody","AppendScriptToHead","AppendStyleToHead","PrependStyleToHead","ContextStrategy","setContext","componentRef","NoContextStrategy","ComponentContextStrategy","instance","changeDetectorRef","TemplateContextStrategy","CONTEXT_STRATEGY","Template","LoadingStrategy","createStream","ScriptLoadingStrategy","src","StyleLoadingStrategy","href","rel","LOADING_STRATEGY","AppendAnonymousScriptToBody","AppendAnonymousScriptToHead","AppendAnonymousStyleToHead","PrependAnonymousScriptToHead","PrependAnonymousStyleToHead","ComponentProjectionStrategy","containerStrategy","contextStrategy","factory","ProjectionStrategy","RootComponentProjectionStrategy","appRef","ApplicationRef","attachView","hostView","TemplateProjectionStrategy","embeddedViewRef","PROJECTION_STRATEGY","AppendComponentToBody","AppendComponentToContainer","AppendTemplateToContainer","PrependComponentToContainer","PrependTemplateToContainer","ProjectComponentToContainer","ProjectTemplateToContainer","LazyLoadService","loaded","loadedLibraries","load","strategyOrUrl","retryTimesOrType","retryDelayOrContent","targetQuery","strategy_1","retryTimes_1","retryDelay_1","CustomEvent","retryWhen","error$","shareReplay","bufferSize","refCount","urlOrUrls","subscriber","library","slice","lastIndexOf","ReplaySubject","text","querySelector","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","trackByDeep","TrackByService","by","byDeep","lowers","uppers","getRandom","chrSet","floor","join","_enum","member"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","import { ABP } from '../models/common';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: ABP.FullRoute[],\r\n): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ofActionSuccessful,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n} from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  ModifyOpenedTabCount,\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(private oAuthService: OAuthService, private store: Store, private actions: Actions) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    return dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of, throwError } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      if (!state.localization) return defaultValue || key;\r\n\r\n      const defaultResourceName = snq(() => state.environment.localization.defaultResourceName);\r\n      if (keys[0] === '') {\r\n        if (!defaultResourceName) {\r\n          throw new Error(\r\n            `Please check your environment. May you forget set defaultResourceName?\r\n              Here is the example:\r\n               { production: false,\r\n                 localization: {\r\n                   defaultResourceName: 'MyProjectName'\r\n                  }\r\n               }`,\r\n          );\r\n        }\r\n\r\n        keys[0] = defaultResourceName;\r\n      }\r\n\r\n      let localization = (keys as any).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state.localization.values);\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || key;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    const apiName = this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n    const api = this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n    return this.http\r\n      .get<ApplicationConfiguration.Response>(`${api}/api/abp/application-configuration`)\r\n      .pipe(\r\n        tap(configuration =>\r\n          patchState({\r\n            ...configuration,\r\n          }),\r\n        ),\r\n        switchMap(configuration => {\r\n          let defaultLang: string =\r\n            configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n          if (defaultLang.includes(';')) {\r\n            defaultLang = defaultLang.split(';')[0];\r\n          }\r\n\r\n          return this.store.selectSnapshot(SessionState.getLanguage)\r\n            ? of(null)\r\n            : dispatch(new SetLanguage(defaultLang));\r\n        }),\r\n        catchError(err => {\r\n          dispatch(new RestOccurError(new HttpErrorResponse({ status: 0, error: err })));\r\n          return throwError(err);\r\n        }),\r\n      );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if ((parent.url || '').replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.children = route.children || [];\r\n      route.order = route.order || route.order === 0 ? route.order : (parent.children || []).length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({\r\n      environment,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngComponentOutlet=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const { routes } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const segments = snq(() => router.parseUrl(event.url).root.children.primary.segments, [\r\n          { path: router.url.replace('/', '') },\r\n        ] as any);\r\n\r\n        const layouts = {\r\n          application: this.getComponent('Theme.ApplicationLayoutComponent'),\r\n          account: this.getComponent('Theme.AccountLayoutComponent'),\r\n          empty: this.getComponent('Theme.EmptyLayoutComponent'),\r\n        };\r\n\r\n        const expectedLayout =\r\n          (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts[expectedLayout].component;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(debounceTime(this.debounce), takeUntilDestroy(this))\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const { skipGetAppConfiguration } = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    if (skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (!isUndefinedOrEmptyString(value)) acc[key] = value;\r\n\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models/common';\r\nimport { getAbpRoutes, organizeRoutes } from '../utils/route-utils';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes, wrappers } = transformedRoutes;\r\n      wrappers = reduceWrappers(wrappers);\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n\r\nfunction reduceWrappers(wrappers: ABP.FullRoute[] = []) {\r\n  const existingWrappers = new Set();\r\n\r\n  return wrappers.filter(wrapper => {\r\n    if (existingWrappers.has(wrapper.name)) return false;\r\n\r\n    existingWrappers.add(wrapper.name);\r\n    return true;\r\n  });\r\n}\r\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Store, Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { Config } from '../models/config';\r\nimport { SetLanguage } from '../actions/session.actions';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private store: Store,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n\r\n    this.listenToSetLanguage();\r\n  }\r\n\r\n  private listenToSetLanguage() {\r\n    this.actions\r\n      .pipe(ofActionSuccessful(SetLanguage))\r\n      .subscribe(({ payload }) => this.registerLocale(payload));\r\n  }\r\n\r\n  setRouteReuse(reuse: ShouldReuseRoute) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    this.setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await this.router.navigateByUrl(this.router.url).catch(noop);\r\n        this.setRouteReuse(shouldReuseRoute);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { LocalizationService } from './services/localization.service';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { CORE_OPTIONS } from './tokens/options.token';\r\nimport { noop } from './utils/common-utils';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [LocalizationService],\r\n          useFactory: noop,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    router.navigate(['/account/login'], { state: { redirectUrl: state.url } });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    currentCulture: CurrentCulture;\r\n    defaultResourceName: string;\r\n    languages: Language[];\r\n    values: LocalizationValue;\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface CurrentCulture {\r\n    cultureName: string;\r\n    dateTimeFormat: DateTimeFormat;\r\n    displayName: string;\r\n    englishName: string;\r\n    isRightToLeft: boolean;\r\n    name: string;\r\n    nativeName: string;\r\n    threeLetterIsoLanguageName: string;\r\n    twoLetterIsoLanguageName: string;\r\n  }\r\n\r\n  export interface DateTimeFormat {\r\n    calendarAlgorithmType: string;\r\n    dateSeparator: string;\r\n    fullDateTimePattern: string;\r\n    longTimePattern: string;\r\n    shortDatePattern: string;\r\n    shortTimePattern: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    /**\r\n     *\r\n     * @deprecated To be deleted in v3.0\r\n     */\r\n    requirements?: Config.Requirements;\r\n    skipGetAppConfiguration?: boolean;\r\n  }\r\n\r\n  export interface Test {\r\n    baseHref?: Router;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Option<T> {\r\n    key: Extract<keyof T, string>;\r\n    value: T[Extract<keyof T, string>];\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    hmr?: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization: { defaultResourceName: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface ApiConfig {\r\n    [key: string]: string;\r\n    url: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: ApiConfig;\r\n    default: ApiConfig;\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","export class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export type Config = Partial<{\r\n    apiName: string;\r\n    skipHandleError: boolean;\r\n    observe: Observe;\r\n  }>;\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n\r\n    return this.rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          this.oAuthService.logOut();\r\n          return this.store.dispatch(new GetAppConfiguration());\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    return of(null).pipe(\r\n      switchMap(() =>\r\n        fromLazyLoad<E>(this.createElement(), this.domStrategy, this.crossOriginStrategy),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(\r\n    component: T,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Set();\r\n\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event>;\r\n  /**\r\n   *\r\n   * @deprecated Use other overload that requires a strategy as first param\r\n   */\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content?: string,\r\n    targetQuery?: string,\r\n    position?: InsertPosition,\r\n  ): Observable<void>;\r\n  load(\r\n    strategyOrUrl: LoadingStrategy | string | string[],\r\n    retryTimesOrType?: number | 'script' | 'style',\r\n    retryDelayOrContent?: number | string,\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<Event | void> {\r\n    if (strategyOrUrl instanceof LoadingStrategy) {\r\n      const strategy = strategyOrUrl;\r\n      const retryTimes = typeof retryTimesOrType === 'number' ? retryTimesOrType : 2;\r\n      const retryDelay = typeof retryDelayOrContent === 'number' ? retryDelayOrContent : 1000;\r\n\r\n      if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n      return strategy.createStream().pipe(\r\n        retryWhen(error$ =>\r\n          concat(\r\n            error$.pipe(delay(retryDelay), take(retryTimes)),\r\n            throwError(new CustomEvent('error')),\r\n          ),\r\n        ),\r\n        tap(() => this.loaded.add(strategy.path)),\r\n        delay(100),\r\n        shareReplay({ bufferSize: 1, refCount: true }),\r\n      );\r\n    }\r\n\r\n    let urlOrUrls = strategyOrUrl;\r\n    const content = (retryDelayOrContent as string) || '';\r\n    const type = retryTimesOrType as 'script' | 'style';\r\n\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n"]}