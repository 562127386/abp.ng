{"version":3,"file":"abp-ng.core.js","sources":["ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/replaceable-components.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/states/replaceable-components.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/replaceable-route-container.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/common-utils.ts","ng://@abp/ng.core/lib/utils/number-utils.ts","ng://@abp/ng.core/lib/utils/form-utils.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/tokens/options.token.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/strategies/cross-origin.strategy.ts","ng://@abp/ng.core/lib/strategies/dom.strategy.ts","ng://@abp/ng.core/lib/utils/lazy-load-utils.ts","ng://@abp/ng.core/lib/utils/localization-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/init.directive.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/replaceable-template.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/localization.module.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/plugins/config.plugin.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/utils/date-extensions.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/dtos.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/replaceable-components.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/services/auth.service.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/content-projection.service.ts","ng://@abp/ng.core/lib/services/dom-insertion.service.ts","ng://@abp/ng.core/lib/strategies/container.strategy.ts","ng://@abp/ng.core/lib/strategies/content-security.strategy.ts","ng://@abp/ng.core/lib/strategies/content.strategy.ts","ng://@abp/ng.core/lib/strategies/context.strategy.ts","ng://@abp/ng.core/lib/strategies/loading.strategy.ts","ng://@abp/ng.core/lib/strategies/projection.strategy.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/tokens/list.token.ts","ng://@abp/ng.core/lib/services/list.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/services/track-by.service.ts","ng://@abp/ng.core/lib/validators/credit-card.validator.ts","ng://@abp/ng.core/lib/validators/range.validator.ts","ng://@abp/ng.core/lib/validators/required.validator.ts","ng://@abp/ng.core/lib/validators/string-length.validator.ts","ng://@abp/ng.core/lib/validators/url.validator.ts","ng://@abp/ng.core/lib/validators/index.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\n\r\nexport class PatchRouteByName {\r\n  static readonly type = '[Config] Patch Route By Name';\r\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\r\n}\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2425#issue-355018812\r\n */\r\nexport class AddRoute {\r\n  static readonly type = '[Config] Add Route';\r\n  constructor(public payload: Omit<ABP.Route, 'children'>) {}\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(public payload: ReplaceableComponents.ReplaceableComponent) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string, public dispatchAppConfiguration?: boolean) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","import { ABP } from '../models/common';\r\n\r\nexport function organizeRoutes(\r\n  routes: ABP.FullRoute[],\r\n  wrappers: ABP.FullRoute[] = [],\r\n  parentNameArr = [] as ABP.FullRoute[],\r\n  parentName: string = null,\r\n): ABP.FullRoute[] {\r\n  const filter = route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\r\n    }\r\n\r\n    if (route.parentName && route.parentName !== parentName) {\r\n      parentNameArr.push(route);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  if (parentName) {\r\n    // recursive block\r\n    return routes.filter(filter);\r\n  }\r\n\r\n  const filteredRoutes = routes.filter(filter);\r\n\r\n  if (parentNameArr.length) {\r\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\r\n  }\r\n\r\n  return filteredRoutes;\r\n}\r\n\r\nexport function setChildRoute(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: ABP.FullRoute[],\r\n): ABP.FullRoute[] {\r\n  return routes.map(route => {\r\n    if (route.children && route.children.length) {\r\n      route.children = setChildRoute(route.children, parentNameArr);\r\n    }\r\n\r\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\r\n    if (foundedChildren && foundedChildren.length) {\r\n      route.children = [...(route.children || []), ...foundedChildren];\r\n    }\r\n\r\n    return route;\r\n  });\r\n}\r\n\r\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\r\n  if (!routes.length) return [];\r\n  return routes\r\n    .map((route, index) => {\r\n      return {\r\n        ...route,\r\n        order: typeof route.order === 'undefined' ? index + 1 : route.order,\r\n      };\r\n    })\r\n    .sort((a, b) => a.order - b.order)\r\n    .map(route => {\r\n      if (route.children && route.children.length) {\r\n        route.children = sortRoutes(route.children);\r\n      }\r\n\r\n      return route;\r\n    });\r\n}\r\n\r\nconst ABP_ROUTES = [] as ABP.FullRoute[];\r\n\r\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\r\n  if (!Array.isArray(routes)) {\r\n    routes = [routes];\r\n  }\r\n\r\n  ABP_ROUTES.push(...routes);\r\n}\r\n\r\nexport function getAbpRoutes(): ABP.FullRoute[] {\r\n  return ABP_ROUTES;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ofActionSuccessful,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n} from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  ModifyOpenedTabCount,\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(private oAuthService: OAuthService, private store: Store, private actions: Actions) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const { sessionDetail } = this.store.selectSnapshot(SessionState) || { sessionDetail: {} };\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage(\r\n    { patchState, dispatch }: StateContext<Session.State>,\r\n    { payload, dispatchAppConfiguration = true }: SetLanguage,\r\n  ) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    if (dispatchAppConfiguration) return dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of, throwError } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { ABP } from '../models/common';\r\nimport { Config } from '../models/config';\r\nimport { organizeRoutes } from '../utils/route-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getRoute(path?: string, name?: string, url?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const { flattedRoutes } = state;\r\n      return (flattedRoutes as ABP.FullRoute[]).find(route => {\r\n        if (path && route.path === path) {\r\n          return route;\r\n        } else if (name && route.name === name) {\r\n          return route;\r\n        } else if (url && route.url === url) {\r\n          return route;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = k => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) || getPolicy(keys[1].trim());\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(k => !!k);\r\n\r\n        if (keys.length !== 2) return false;\r\n\r\n        return getPolicy(keys[0].trim()) && getPolicy(keys[1].trim());\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      const warn = (message: string) => {\r\n        if (!state.environment.production) console.warn(message);\r\n      };\r\n\r\n      if (keys.length < 2) {\r\n        warn('The localization source separator (::) not found.');\r\n        return defaultValue || (key as string);\r\n      }\r\n      if (!state.localization) return defaultValue || keys[1];\r\n\r\n      const sourceName =\r\n        keys[0] ||\r\n        snq(() => state.environment.localization.defaultResourceName) ||\r\n        state.localization.defaultResourceName;\r\n      const sourceKey = keys[1];\r\n\r\n      if (sourceName === '_') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      if (!sourceName) {\r\n        warn(\r\n          'Localization source name is not specified and the defaultResourceName was not defined!',\r\n        );\r\n\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      const source = state.localization.values[sourceName];\r\n      if (!source) {\r\n        warn('Could not find localization source: ' + sourceName);\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      let localization = source[sourceKey];\r\n      if (typeof localization === 'undefined') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization && interpolateParams && interpolateParams.length) {\r\n        interpolateParams.forEach(param => {\r\n          localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\r\n        });\r\n      }\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n      return localization || defaultValue || (key as string);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    const apiName = this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n    const api = this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n    return this.http\r\n      .get<ApplicationConfiguration.Response>(`${api}/api/abp/application-configuration`)\r\n      .pipe(\r\n        tap(configuration =>\r\n          patchState({\r\n            ...configuration,\r\n          }),\r\n        ),\r\n        switchMap(configuration => {\r\n          let defaultLang: string =\r\n            configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n          if (defaultLang.includes(';')) {\r\n            defaultLang = defaultLang.split(';')[0];\r\n          }\r\n\r\n          document.documentElement.setAttribute(\r\n            'lang',\r\n            configuration.localization.currentCulture.cultureName,\r\n          );\r\n          return this.store.selectSnapshot(SessionState.getLanguage)\r\n            ? of(null)\r\n            : dispatch(new SetLanguage(defaultLang, false));\r\n        }),\r\n        catchError(err => {\r\n          dispatch(new RestOccurError(new HttpErrorResponse({ status: 0, error: err })));\r\n          return throwError(err);\r\n        }),\r\n      );\r\n  }\r\n\r\n  @Action(PatchRouteByName)\r\n  patchRoute(\r\n    { patchState, getState }: StateContext<Config.State>,\r\n    { name, newValue }: PatchRouteByName,\r\n  ) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n\r\n    routes = patchRouteDeep(routes, name, newValue);\r\n\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const index = flattedRoutes.findIndex(route => route.name === name);\r\n\r\n    if (index > -1) {\r\n      flattedRoutes[index] = { ...flattedRoutes[index], ...newValue } as ABP.FullRoute;\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(AddRoute)\r\n  addRoute({ patchState, getState }: StateContext<Config.State>, { payload }: AddRoute) {\r\n    let routes: ABP.FullRoute[] = getState().routes;\r\n    const flattedRoutes = getState().flattedRoutes;\r\n    const route: ABP.FullRoute = { ...payload };\r\n\r\n    if (route.parentName) {\r\n      const index = flattedRoutes.findIndex(r => r.name === route.parentName);\r\n\r\n      if (index < 0) return;\r\n\r\n      const parent = flattedRoutes[index];\r\n      if ((parent.url || '').replace('/', '')) {\r\n        route.url = `${parent.url}/${route.path}`;\r\n      } else {\r\n        route.url = `/${route.path}`;\r\n      }\r\n\r\n      route.children = route.children || [];\r\n      route.order = route.order || route.order === 0 ? route.order : (parent.children || []).length;\r\n      parent.children = [...(parent.children || []), route].sort((a, b) => a.order - b.order);\r\n\r\n      flattedRoutes[index] = parent;\r\n      flattedRoutes.push(route);\r\n\r\n      let parentName = parent.name;\r\n      const parentNameArr = [parentName];\r\n\r\n      while (parentName) {\r\n        parentName = snq(() => flattedRoutes.find(r => r.name === parentName).parentName);\r\n\r\n        if (parentName) {\r\n          parentNameArr.unshift(parentName);\r\n        }\r\n      }\r\n\r\n      routes = updateRouteDeep(routes, parentNameArr, parent);\r\n    } else {\r\n      route.url = `/${route.path}`;\r\n\r\n      if (route.order || route.order === 0) {\r\n        routes = [...routes, route].sort((a, b) => a.order - b.order);\r\n      } else {\r\n        route.order = routes.length;\r\n        routes = [...routes, route];\r\n      }\r\n\r\n      flattedRoutes.push(route);\r\n    }\r\n\r\n    return patchState({\r\n      routes,\r\n      flattedRoutes,\r\n    });\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({\r\n      environment,\r\n    });\r\n  }\r\n}\r\n\r\nfunction patchRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  name: string,\r\n  newValue: Partial<ABP.FullRoute>,\r\n  parentUrl: string = '',\r\n): ABP.FullRoute[] {\r\n  routes = routes.map(route => {\r\n    if (route.name === name) {\r\n      newValue.url = `${parentUrl}/${(!newValue.path || newValue.path === ''\r\n        ? route.path\r\n        : newValue.path) || ''}`;\r\n\r\n      if (newValue.children && newValue.children.length) {\r\n        newValue.children = newValue.children.map(child => ({\r\n          ...child,\r\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\r\n        }));\r\n      }\r\n\r\n      return { ...route, ...newValue };\r\n    } else if (route.children && route.children.length) {\r\n      route.children = patchRouteDeep(\r\n        route.children,\r\n        name,\r\n        newValue,\r\n        (parentUrl || '/') + route.path,\r\n      );\r\n    }\r\n\r\n    return route;\r\n  });\r\n\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes;\r\n  }\r\n\r\n  return organizeRoutes(routes);\r\n}\r\n\r\nfunction updateRouteDeep(\r\n  routes: ABP.FullRoute[],\r\n  parentNameArr: string[],\r\n  newValue: ABP.FullRoute,\r\n  parentIndex = 0,\r\n) {\r\n  const index = routes.findIndex(route => route.name === parentNameArr[parentIndex]);\r\n\r\n  if (parentIndex === parentNameArr.length - 1) {\r\n    routes[index] = newValue;\r\n  } else {\r\n    routes[index].children = updateRouteDeep(\r\n      routes[index].children,\r\n      parentNameArr,\r\n      newValue,\r\n      parentIndex + 1,\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import { State, Action, StateContext, Selector, createSelector } from '@ngxs/store';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport snq from 'snq';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n  }\r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Component, OnDestroy, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngComponentOutlet=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n})\r\nexport class DynamicLayoutComponent implements OnDestroy {\r\n  layout: Type<any>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\r\n    const { routes } = this.store.selectSnapshot(ConfigState.getAll);\r\n\r\n    router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        const segments = snq(() => router.parseUrl(event.url).root.children.primary.segments, [\r\n          { path: router.url.replace('/', '') },\r\n        ] as any);\r\n\r\n        const layouts = {\r\n          application: this.getComponent('Theme.ApplicationLayoutComponent'),\r\n          account: this.getComponent('Theme.AccountLayoutComponent'),\r\n          empty: this.getComponent('Theme.EmptyLayoutComponent'),\r\n        };\r\n\r\n        const expectedLayout =\r\n          (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\r\n\r\n        this.layout = layouts[expectedLayout].component;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\r\n  let layout = eLayoutType.empty;\r\n\r\n  const route = routes\r\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\r\n    .find(r => r.path === segments[0].path);\r\n\r\n  if (route) {\r\n    if (route.layout) {\r\n      layout = route.layout;\r\n    }\r\n\r\n    if (route.children && route.children.length && segments.length > 1) {\r\n      const child = route.children.find(c => c.path === segments[1].path);\r\n\r\n      if (child && child.layout) {\r\n        layout = child.layout;\r\n      }\r\n    }\r\n  }\r\n\r\n  return layout;\r\n}\r\n","import { Component, OnDestroy, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit, OnDestroy {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(private route: ActivatedRoute, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(takeUntilDestroy(this), distinctUntilChanged())\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n})\r\nexport class InputEventDebounceDirective implements OnInit, OnDestroy {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'input')\r\n      .pipe(debounceTime(this.debounce), takeUntilDestroy(this))\r\n      .subscribe((event: Event) => {\r\n        this.debounceEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const { skipGetAppConfiguration } = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    if (skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang).then(() => resolve('resolved'), reject);\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string) {\r\n  return import(\r\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\r\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","import { ApplicationConfiguration } from '../models/application-configuration';\r\n\r\nexport function createLocalizer(localization: ApplicationConfiguration.Localization) {\r\n  return (resourceName: string, key: string, defaultValue: string) => {\r\n    if (resourceName === '_') return key;\r\n\r\n    const resource = localization.values[resourceName];\r\n\r\n    if (!resource) return defaultValue;\r\n\r\n    return resource[key] || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizerWithFallback(localization: ApplicationConfiguration.Localization) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultValue: string) => {\r\n    const { localized } = findLocalization(resourceNames, keys);\r\n    return localized || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizationPipeKeyGenerator(\r\n  localization: ApplicationConfiguration.Localization,\r\n) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultKey: string) => {\r\n    const { resourceName, key } = findLocalization(resourceNames, keys);\r\n    return !resourceName ? defaultKey : resourceName === '_' ? key : `${resourceName}::${key}`;\r\n  };\r\n}\r\n\r\nfunction createLocalizationFinder(localization: ApplicationConfiguration.Localization) {\r\n  const localize = createLocalizer(localization);\r\n\r\n  return (resourceNames: string[], keys: string[]) => {\r\n    resourceNames = resourceNames.concat(localization.defaultResourceName).filter(Boolean);\r\n\r\n    const resourceCount = resourceNames.length;\r\n    const keyCount = keys.length;\r\n\r\n    for (let i = 0; i < resourceCount; i++) {\r\n      const resourceName = resourceNames[i];\r\n\r\n      for (let j = 0; j < keyCount; j++) {\r\n        const key = keys[j];\r\n        const localized = localize(resourceName, key, null);\r\n        if (localized) return { resourceName, key, localized };\r\n      }\r\n    }\r\n\r\n    return { resourceName: undefined, key: undefined, localized: undefined };\r\n  };\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { takeUntilDestroy } from '../utils';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n})\r\nexport class FormSubmitDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(() => {\r\n        if (!this.executedNgSubmit) {\r\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n        }\r\n\r\n        this.executedNgSubmit = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (!isUndefinedOrEmptyString(value)) acc[key] = value;\r\n\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Optional,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states';\r\nimport { takeUntilDestroy } from '../utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild((this.elRef.nativeElement as HTMLElement).parentElement, this.elRef.nativeElement);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\nimport compare from 'just-compare';\r\nimport snq from 'snq';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]' })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe((res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n})\r\nexport class StopPropagationDirective implements OnInit, OnDestroy {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, 'click')\r\n      .pipe(takeUntilDestroy(this))\r\n      .subscribe((event: MouseEvent) => {\r\n        event.stopPropagation();\r\n        this.stopPropEvent.emit(event);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models/common';\r\nimport { getAbpRoutes, organizeRoutes } from '../utils/route-utils';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(\r\n    @Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      const transformedRoutes = transformRoutes(this.router.config);\r\n      let { routes, wrappers } = transformedRoutes;\r\n      wrappers = reduceWrappers(wrappers);\r\n\r\n      routes = organizeRoutes(routes, wrappers);\r\n      const flattedRoutes = flatRoutes(clone(routes));\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n        routes,\r\n        flattedRoutes,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n\r\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\r\n  const abpRoutes = [...getAbpRoutes()];\r\n\r\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\r\n  const transformed = [] as ABP.FullRoute[];\r\n  routes\r\n    .filter(route => route.component || route.loadChildren)\r\n    .forEach(route => {\r\n      const abpPackage = abpRoutes.find(\r\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper,\r\n      );\r\n\r\n      const { length } = transformed;\r\n\r\n      if (abpPackage) {\r\n        transformed.push(abpPackage);\r\n      }\r\n\r\n      if (transformed.length === length && (route.data || {}).routes) {\r\n        transformed.push({\r\n          ...route.data.routes,\r\n          path: route.path,\r\n          name: snq(() => route.data.routes.name, route.path),\r\n          children: route.data.routes.children || [],\r\n        } as ABP.FullRoute);\r\n      }\r\n    });\r\n\r\n  return { routes: setUrls(transformed), wrappers };\r\n}\r\n\r\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\r\n  if (parentUrl) {\r\n    // recursive block\r\n    return routes.map(route => ({\r\n      ...route,\r\n      url: `${parentUrl}/${route.path}`,\r\n      ...(route.children &&\r\n        route.children.length && {\r\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\r\n        }),\r\n    }));\r\n  }\r\n\r\n  return routes.map(route => ({\r\n    ...route,\r\n    url: `/${route.path}`,\r\n    ...(route.children &&\r\n      route.children.length && {\r\n        children: setUrls(route.children, `/${route.path}`),\r\n      }),\r\n  }));\r\n}\r\n\r\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\r\n  const flat = (r: ABP.FullRoute[]) => {\r\n    return r.reduce((acc, val) => {\r\n      let value: ABP.FullRoute[] = [val];\r\n      if (val.children) {\r\n        val.children = val.children.map(child => ({ ...child, parentName: val.name }));\r\n        value = [val, ...flat(val.children)];\r\n      }\r\n\r\n      return [...acc, ...value];\r\n    }, []);\r\n  };\r\n\r\n  return flat(routes);\r\n}\r\n\r\nfunction reduceWrappers(wrappers: ABP.FullRoute[] = []) {\r\n  const existingWrappers = new Set();\r\n\r\n  return wrappers.filter(wrapper => {\r\n    if (existingWrappers.has(wrapper.name)) return false;\r\n\r\n    existingWrappers.add(wrapper.name);\r\n    return true;\r\n  });\r\n}\r\n","import { Injectable, Injector, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { Config } from '../models/config';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { createLocalizer, createLocalizerWithFallback } from '../utils/localization-utils';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  get languageChange(): Observable<SetLanguage> {\r\n    return this.actions.pipe(ofActionSuccessful(SetLanguage));\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private store: Store,\r\n    private injector: Injector,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n\r\n    this.listenToSetLanguage();\r\n  }\r\n\r\n  private listenToSetLanguage() {\r\n    this.languageChange.subscribe(({ payload }) => this.registerLocale(payload));\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const router = this.injector.get(Router);\r\n    const { shouldReuseRoute } = router.routeReuseStrategy;\r\n    router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    router.navigated = false;\r\n\r\n    return registerLocale(locale).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await router.navigateByUrl(router.url).catch(noop);\r\n        router.routeReuseStrategy.shouldReuseRoute = shouldReuseRoute;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  localize(resourceName: string, key: string, defaultValue: string): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizer),\r\n      map(localize => localize(resourceName, key, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeSync(resourceName: string, key: string, defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizer(localization)(resourceName, key, defaultValue);\r\n  }\r\n\r\n  localizeWithFallback(\r\n    resourceNames: string[],\r\n    keys: string[],\r\n    defaultValue: string,\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizerWithFallback),\r\n      map(localizeWithFallback => localizeWithFallback(resourceNames, keys, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeWithFallbackSync(resourceNames: string[], keys: string[], defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizerWithFallback(localization)(resourceNames, keys, defaultValue);\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { LocalizationService } from './services/localization.service';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { CORE_OPTIONS } from './tokens/options.token';\r\nimport { noop } from './utils/common-utils';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return localStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot({ key: ['SessionState'] }),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [LocalizationService],\r\n          useFactory: noop,\r\n        },\r\n        ...OAuthModule.forRoot().providers,\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","export const enum eLayoutType {\r\n  account = 'account',\r\n  application = 'application',\r\n  empty = 'empty',\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    router.navigate(['/account/login'], { state: { redirectUrl: state.url } });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RestOccurError } from '../actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let resource =\r\n      snq(() => route.data.routes.requiredPolicy) || snq(() => route.data.requiredPolicy as string);\r\n    if (!resource) {\r\n      resource = snq(\r\n        () =>\r\n          route.routeConfig.children.find(child => state.url.indexOf(child.path) > -1).data\r\n            .requiredPolicy,\r\n      );\r\n\r\n      if (!resource) {\r\n        return of(true);\r\n      }\r\n    }\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport namespace ApplicationConfiguration {\r\n  export interface Response {\r\n    localization: Localization;\r\n    auth: Auth;\r\n    setting: Value;\r\n    currentUser: CurrentUser;\r\n    features: Value;\r\n  }\r\n\r\n  export interface Localization {\r\n    currentCulture: CurrentCulture;\r\n    defaultResourceName: string;\r\n    languages: Language[];\r\n    values: LocalizationValue;\r\n  }\r\n\r\n  export interface LocalizationValue {\r\n    [key: string]: { [key: string]: string };\r\n  }\r\n\r\n  export interface Language {\r\n    cultureName: string;\r\n    uiCultureName: string;\r\n    displayName: string;\r\n    flagIcon: string;\r\n  }\r\n\r\n  export interface CurrentCulture {\r\n    cultureName: string;\r\n    dateTimeFormat: DateTimeFormat;\r\n    displayName: string;\r\n    englishName: string;\r\n    isRightToLeft: boolean;\r\n    name: string;\r\n    nativeName: string;\r\n    threeLetterIsoLanguageName: string;\r\n    twoLetterIsoLanguageName: string;\r\n  }\r\n\r\n  export interface DateTimeFormat {\r\n    calendarAlgorithmType: string;\r\n    dateSeparator: string;\r\n    fullDateTimePattern: string;\r\n    longTimePattern: string;\r\n    shortDatePattern: string;\r\n    shortTimePattern: string;\r\n  }\r\n\r\n  export interface Auth {\r\n    policies: Policy;\r\n    grantedPolicies: Policy;\r\n  }\r\n\r\n  export interface Policy {\r\n    [key: string]: boolean;\r\n  }\r\n\r\n  export interface Value {\r\n    values: ABP.Dictionary<string>;\r\n  }\r\n\r\n  export interface CurrentUser {\r\n    isAuthenticated: boolean;\r\n    id: string;\r\n    tenantId: string;\r\n    userName: string;\r\n    email: string;\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { Config } from './config';\r\n\r\nexport namespace ABP {\r\n  export interface Root {\r\n    environment: Partial<Config.Environment>;\r\n    /**\r\n     *\r\n     * @deprecated To be deleted in v3.0\r\n     */\r\n    requirements?: Config.Requirements;\r\n    skipGetAppConfiguration?: boolean;\r\n  }\r\n\r\n  export interface Test {\r\n    baseHref?: Router;\r\n  }\r\n\r\n  export type PagedResponse<T> = {\r\n    totalCount: number;\r\n  } & PagedItemsResponse<T>;\r\n\r\n  export interface PagedItemsResponse<T> {\r\n    items: T[];\r\n  }\r\n\r\n  export interface PageQueryParams {\r\n    filter?: string;\r\n    sorting?: string;\r\n    skipCount?: number;\r\n    maxResultCount?: number;\r\n  }\r\n\r\n  export interface Route {\r\n    children?: Route[];\r\n    invisible?: boolean;\r\n    layout?: eLayoutType;\r\n    name: string;\r\n    order?: number;\r\n    parentName?: string;\r\n    path: string;\r\n    requiredPolicy?: string;\r\n    iconClass?: string;\r\n  }\r\n\r\n  export interface FullRoute extends Route {\r\n    url?: string;\r\n    wrapper?: boolean;\r\n  }\r\n\r\n  export interface BasicItem {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface Option<T> {\r\n    key: Extract<keyof T, string>;\r\n    value: T[Extract<keyof T, string>];\r\n  }\r\n\r\n  export interface Dictionary<T = any> {\r\n    [key: string]: T;\r\n  }\r\n\r\n  export type ExtractFromOutput<\r\n    T extends EventEmitter<any> | Subject<any>\r\n  > = T extends EventEmitter<infer X> ? X : T extends Subject<infer Y> ? Y : never;\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { AuthConfig } from 'angular-oauth2-oidc';\r\nimport { ApplicationConfiguration } from './application-configuration';\r\nimport { ABP } from './common';\r\n\r\nexport namespace Config {\r\n  export type State = ApplicationConfiguration.Response &\r\n    ABP.Root & { environment: Environment } & {\r\n      routes: ABP.FullRoute[];\r\n      flattedRoutes: ABP.FullRoute[];\r\n    };\r\n\r\n  export interface Environment {\r\n    application: Application;\r\n    production: boolean;\r\n    hmr?: boolean;\r\n    oAuthConfig: AuthConfig;\r\n    apis: Apis;\r\n    localization?: { defaultResourceName?: string };\r\n  }\r\n\r\n  export interface Application {\r\n    name: string;\r\n    logoUrl?: string;\r\n  }\r\n\r\n  export interface ApiConfig {\r\n    [key: string]: string;\r\n    url: string;\r\n  }\r\n\r\n  export interface Apis {\r\n    [key: string]: ApiConfig;\r\n    default: ApiConfig;\r\n  }\r\n\r\n  export interface Requirements {\r\n    layouts: Type<any>[];\r\n  }\r\n\r\n  export interface LocalizationWithDefault {\r\n    key: string;\r\n    defaultValue: string;\r\n  }\r\n\r\n  export type LocalizationParam = string | LocalizationWithDefault;\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleObject {\r\n  extraProperties: ABP.Dictionary<any>;\r\n\r\n  constructor(initialValues: Partial<ExtensibleObject> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExtensibleEntityDto<TKey = string> extends ExtensibleObject {\r\n  id: TKey;\r\n\r\n  constructor(initialValues: Partial<ExtensibleEntityDto<TKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityDto<TPrimaryKey = string> extends ExtensibleEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creationTime: Date | string;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleCreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: Date | string;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<ExtensibleCreationAuditedEntityWithUserDto<TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  isDeleted: boolean;\r\n  deleterId?: string;\r\n  deletionTime: Date | string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleFullAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n  deleter: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","export namespace Profile {\r\n  export interface State {\r\n    profile: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    userName: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    phoneNumber: string;\r\n  }\r\n\r\n  export interface ChangePasswordRequest {\r\n    currentPassword: string;\r\n    newPassword: string;\r\n  }\r\n}\r\n","import { Type, EventEmitter } from '@angular/core';\r\nimport { ABP } from './common';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nexport namespace ReplaceableComponents {\r\n  export interface State {\r\n    replaceableComponents: ReplaceableComponent[];\r\n  }\r\n\r\n  export interface ReplaceableComponent {\r\n    component: Type<any>;\r\n    key: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateDirectiveInput<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: { -readonly [K in keyof I]: { value: I[K]; twoWay?: boolean } };\r\n    outputs: { -readonly [K in keyof O]: (value: ABP.ExtractFromOutput<O[K]>) => void };\r\n    componentKey: string;\r\n  }\r\n\r\n  export interface ReplaceableTemplateData<\r\n    I,\r\n    O extends { [K in keyof O]: EventEmitter<any> | Subject<any> }\r\n  > {\r\n    inputs: ReplaceableTemplateInputs<I>;\r\n    outputs: ReplaceableTemplateOutputs<O>;\r\n    componentKey: string;\r\n  }\r\n\r\n  export type ReplaceableTemplateInputs<T> = {\r\n    [K in keyof T]: T[K];\r\n  };\r\n\r\n  export type ReplaceableTemplateOutputs<\r\n    T extends { [K in keyof T]: EventEmitter<any> | Subject<any> }\r\n  > = {\r\n    [K in keyof T]: (value: ABP.ExtractFromOutput<T[K]>) => void;\r\n  };\r\n\r\n  export interface RouteData<T = any> {\r\n    key: string;\r\n    defaultComponent: Type<T>;\r\n  }\r\n}\r\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nexport namespace Rest {\r\n  export type Config = Partial<{\r\n    apiName: string;\r\n    skipHandleError: boolean;\r\n    observe: Observe;\r\n  }>;\r\n\r\n  export const enum Observe {\r\n    Body = 'body',\r\n    Events = 'events',\r\n    Response = 'response',\r\n  }\r\n\r\n  export const enum ResponseType {\r\n    ArrayBuffer = 'arraybuffer',\r\n    Blob = 'blob',\r\n    JSON = 'json',\r\n    Text = 'text',\r\n  }\r\n\r\n  export interface Request<T> {\r\n    body?: T;\r\n    headers?:\r\n      | HttpHeaders\r\n      | {\r\n          [header: string]: string | string[];\r\n        };\r\n    method: string;\r\n    params?:\r\n      | HttpParams\r\n      | {\r\n          [param: string]: any;\r\n        };\r\n    reportProgress?: boolean;\r\n    responseType?: ResponseType;\r\n    url: string;\r\n    withCredentials?: boolean;\r\n  }\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport namespace Session {\r\n  export interface State {\r\n    language: string;\r\n    tenant: ABP.BasicItem;\r\n    sessionDetail: SessionDetail;\r\n  }\r\n\r\n  export interface SessionDetail {\r\n    openedTabCount: number;\r\n    lastExitTime: number;\r\n    remember: boolean;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, tap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { SessionState } from '../states/session.state';\r\nimport { RestService } from './rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    this.oAuthService.configure(\r\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\r\n    );\r\n\r\n    return from(this.oAuthService.loadDiscoveryDocument()).pipe(\r\n      switchMap(() =>\r\n        from(\r\n          this.oAuthService.fetchTokenUsingPasswordFlow(\r\n            username,\r\n            password,\r\n            new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n          ),\r\n        ),\r\n      ),\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n\r\n    return this.rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        switchMap(() => {\r\n          this.oAuthService.logOut();\r\n          return this.store.dispatch(new GetAppConfiguration());\r\n        }),\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  AddRoute,\r\n  GetAppConfiguration,\r\n  PatchRouteByName,\r\n  SetEnvironment,\r\n} from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\r\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchPatchRouteByName(...args: ConstructorParameters<typeof PatchRouteByName>) {\r\n    return this.store.dispatch(new PatchRouteByName(...args));\r\n  }\r\n\r\n  dispatchAddRoute(...args: ConstructorParameters<typeof AddRoute>) {\r\n    return this.store.dispatch(new AddRoute(...args));\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    return of(null).pipe(\r\n      switchMap(() =>\r\n        fromLazyLoad<E>(this.createElement(), this.domStrategy, this.crossOriginStrategy),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(\r\n    component: T,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\nimport { uuid } from '../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Set();\r\n\r\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event>;\r\n  /**\r\n   *\r\n   * @deprecated Use other overload that requires a strategy as first param\r\n   */\r\n  load(\r\n    urlOrUrls: string | string[],\r\n    type: 'script' | 'style',\r\n    content?: string,\r\n    targetQuery?: string,\r\n    position?: InsertPosition,\r\n  ): Observable<void>;\r\n  load(\r\n    strategyOrUrl: LoadingStrategy | string | string[],\r\n    retryTimesOrType?: number | 'script' | 'style',\r\n    retryDelayOrContent?: number | string,\r\n    targetQuery: string = 'body',\r\n    position: InsertPosition = 'beforeend',\r\n  ): Observable<Event | void> {\r\n    if (strategyOrUrl instanceof LoadingStrategy) {\r\n      const strategy = strategyOrUrl;\r\n      const retryTimes = typeof retryTimesOrType === 'number' ? retryTimesOrType : 2;\r\n      const retryDelay = typeof retryDelayOrContent === 'number' ? retryDelayOrContent : 1000;\r\n\r\n      if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n      return strategy.createStream().pipe(\r\n        retryWhen(error$ =>\r\n          concat(\r\n            error$.pipe(delay(retryDelay), take(retryTimes)),\r\n            throwError(new CustomEvent('error')),\r\n          ),\r\n        ),\r\n        tap(() => this.loaded.add(strategy.path)),\r\n        delay(100),\r\n        shareReplay({ bufferSize: 1, refCount: true }),\r\n      );\r\n    }\r\n\r\n    let urlOrUrls = strategyOrUrl;\r\n    const content = (retryDelayOrContent as string) || '';\r\n    const type = retryTimesOrType as 'script' | 'style';\r\n\r\n    if (!urlOrUrls && !content) {\r\n      return throwError('Should pass url or content');\r\n    } else if (!urlOrUrls && content) {\r\n      urlOrUrls = [null];\r\n    }\r\n\r\n    if (!Array.isArray(urlOrUrls)) {\r\n      urlOrUrls = [urlOrUrls];\r\n    }\r\n\r\n    return new Observable(subscriber => {\r\n      (urlOrUrls as string[]).forEach((url, index) => {\r\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\r\n\r\n        if (this.loadedLibraries[key]) {\r\n          subscriber.next();\r\n          subscriber.complete();\r\n          return;\r\n        }\r\n\r\n        this.loadedLibraries[key] = new ReplaySubject();\r\n\r\n        let library;\r\n        if (type === 'script') {\r\n          library = document.createElement('script');\r\n          library.type = 'text/javascript';\r\n          if (url) {\r\n            (library as HTMLScriptElement).src = url;\r\n          }\r\n\r\n          (library as HTMLScriptElement).text = content;\r\n        } else if (url) {\r\n          library = document.createElement('link');\r\n          library.type = 'text/css';\r\n          (library as HTMLLinkElement).rel = 'stylesheet';\r\n\r\n          if (url) {\r\n            (library as HTMLLinkElement).href = url;\r\n          }\r\n        } else {\r\n          library = document.createElement('style');\r\n          (library as HTMLStyleElement).textContent = content;\r\n        }\r\n\r\n        library.onload = () => {\r\n          this.loadedLibraries[key].next();\r\n          this.loadedLibraries[key].complete();\r\n\r\n          if (index === urlOrUrls.length - 1) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n          }\r\n        };\r\n\r\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const LIST_QUERY_DEBOUNCE_TIME = new InjectionToken<number>('LIST_QUERY_DEBOUNCE_TIME');\r\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\r\nimport { debounceTime, shareReplay, switchMap, tap } from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { PagedResultDto } from '../models/dtos';\r\nimport { LIST_QUERY_DEBOUNCE_TIME } from '../tokens/list.token';\r\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\r\n\r\n@Injectable()\r\nexport class ListService implements OnDestroy {\r\n  private _filter = '';\r\n  set filter(value: string) {\r\n    this._filter = value;\r\n    this.get();\r\n  }\r\n  get filter(): string {\r\n    return this._filter;\r\n  }\r\n\r\n  private _maxResultCount = 10;\r\n  set maxResultCount(value: number) {\r\n    this._maxResultCount = value;\r\n    this.get();\r\n  }\r\n  get maxResultCount(): number {\r\n    return this._maxResultCount;\r\n  }\r\n\r\n  private _page = 1;\r\n  set page(value: number) {\r\n    this._page = value;\r\n    this.get();\r\n  }\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  private _sortKey = '';\r\n  set sortKey(value: string) {\r\n    this._sortKey = value;\r\n    this.get();\r\n  }\r\n  get sortKey(): string {\r\n    return this._sortKey;\r\n  }\r\n\r\n  private _sortOrder = '';\r\n  set sortOrder(value: string) {\r\n    this._sortOrder = value;\r\n    this.get();\r\n  }\r\n  get sortOrder(): string {\r\n    return this._sortOrder;\r\n  }\r\n\r\n  private _query$ = new ReplaySubject<ABP.PageQueryParams>(1);\r\n\r\n  get query$(): Observable<ABP.PageQueryParams> {\r\n    return this._query$\r\n      .asObservable()\r\n      .pipe(debounceTime(this.delay || 300), shareReplay({ bufferSize: 1, refCount: true }));\r\n  }\r\n\r\n  private _isLoading$ = new BehaviorSubject(false);\r\n\r\n  get isLoading$(): Observable<boolean> {\r\n    return this._isLoading$.asObservable();\r\n  }\r\n\r\n  get = () => {\r\n    this._query$.next({\r\n      filter: this._filter || undefined,\r\n      maxResultCount: this._maxResultCount,\r\n      skipCount: (this._page - 1) * this._maxResultCount,\r\n      sorting: this._sortOrder ? `${this._sortKey} ${this._sortOrder}` : undefined,\r\n    });\r\n  };\r\n\r\n  constructor(@Optional() @Inject(LIST_QUERY_DEBOUNCE_TIME) private delay: number) {\r\n    this.get();\r\n  }\r\n\r\n  hookToQuery<T extends any>(\r\n    streamCreatorCallback: QueryStreamCreatorCallback<T>,\r\n  ): Observable<PagedResultDto<T>> {\r\n    this._isLoading$.next(true);\r\n\r\n    return this.query$.pipe(\r\n      switchMap(streamCreatorCallback),\r\n      tap(() => this._isLoading$.next(false)),\r\n      shareReplay({ bufferSize: 1, refCount: true }),\r\n      takeUntilDestroy(this),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n\r\nexport type QueryStreamCreatorCallback<T> = (\r\n  query: ABP.PageQueryParams,\r\n) => Observable<PagedResultDto<T>>;\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface CreditCardError {\r\n  creditCard: true;\r\n}\r\n\r\nexport function validateCreditCard(): ValidatorFn {\r\n  return (control: AbstractControl): CreditCardError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidCreditCard(String(control.value)) ? null : { creditCard: true };\r\n  };\r\n}\r\n\r\nfunction isValidCreditCard(value: string): boolean {\r\n  value = value.replace(/[ -]/g, '');\r\n\r\n  if (!/^[0-9]{13,19}$/.test(value)) return false;\r\n\r\n  let checksum = 0;\r\n  let multiplier = 1;\r\n\r\n  for (let i = value.length; i > 0; i--) {\r\n    const digit = Number(value[i - 1]) * multiplier;\r\n    /* tslint:disable-next-line:no-bitwise */\r\n    checksum += (digit % 10) + ~~(digit / 10);\r\n\r\n    multiplier = (multiplier * 2) % 3;\r\n  }\r\n\r\n  return checksum % 10 === 0;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RangeError {\r\n  range: {\r\n    max: number;\r\n    min: number;\r\n  };\r\n}\r\n\r\nexport interface RangeOptions {\r\n  maximum?: number;\r\n  minimum?: number;\r\n}\r\n\r\nexport function validateRange({ maximum = Infinity, minimum = 0 }: RangeOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RangeError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = Number(control.value);\r\n    return getMinError(value, minimum, maximum) || getMaxError(value, maximum, minimum);\r\n  };\r\n}\r\n\r\nfunction getMaxError(value: number, max: number, min: number): RangeError {\r\n  return value > max ? { range: { max, min } } : null;\r\n}\r\n\r\nfunction getMinError(value: number, min: number, max: number): RangeError {\r\n  return value < min ? { range: { min, max } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RequiredError {\r\n  required: true;\r\n}\r\n\r\nexport interface RequiredOptions {\r\n  allowEmptyStrings?: boolean;\r\n}\r\n\r\nexport function validateRequired({ allowEmptyStrings }: RequiredOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RequiredError | null => {\r\n    return control.pristine || isValidRequired(control.value, allowEmptyStrings)\r\n      ? null\r\n      : { required: true };\r\n  };\r\n}\r\n\r\nfunction isValidRequired(value: any, allowEmptyStrings: boolean): boolean {\r\n  if (value || value === 0 || value === false) return true;\r\n\r\n  if (allowEmptyStrings && value === '') return true;\r\n\r\n  return false;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface StringLengthError {\r\n  maxlength?: {\r\n    requiredLength: number;\r\n  };\r\n  minlength?: {\r\n    requiredLength: number;\r\n  };\r\n}\r\n\r\nexport interface StringLengthOptions {\r\n  maximumLength?: number;\r\n  minimumLength?: number;\r\n}\r\n\r\nexport function validateStringLength({\r\n  maximumLength = Infinity,\r\n  minimumLength = 0,\r\n}: StringLengthOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): StringLengthError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = String(control.value);\r\n\r\n    return getMinLengthError(value, minimumLength) || getMaxLengthError(value, maximumLength);\r\n  };\r\n}\r\n\r\nfunction getMaxLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length > requiredLength ? { maxlength: { requiredLength } } : null;\r\n}\r\n\r\nfunction getMinLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length < requiredLength ? { minlength: { requiredLength } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface UrlError {\r\n  url: true;\r\n}\r\n\r\nexport function validateUrl(): ValidatorFn {\r\n  return (control: AbstractControl): UrlError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidUrl(control.value) ? null : { url: true };\r\n  };\r\n}\r\n\r\nfunction isValidUrl(value: string): boolean {\r\n  if (/^http(s)?:\\/\\/[^/]/.test(value) || /^ftp:\\/\\/[^/]/.test(value)) {\r\n    const a = document.createElement('a');\r\n    a.href = value;\r\n    return !!a.host;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { Validators } from '@angular/forms';\r\nimport { validateCreditCard } from './credit-card.validator';\r\nimport { validateRange } from './range.validator';\r\nimport { validateRequired } from './required.validator';\r\nimport { validateStringLength } from './string-length.validator';\r\nimport { validateUrl } from './url.validator';\r\nexport * from './credit-card.validator';\r\nexport * from './range.validator';\r\nexport * from './required.validator';\r\nexport * from './string-length.validator';\r\nexport * from './url.validator';\r\n\r\nexport const AbpValidators = {\r\n  creditCard: validateCreditCard,\r\n  emailAddress: () => Validators.email,\r\n  range: validateRange,\r\n  required: validateRequired,\r\n  stringLength: validateStringLength,\r\n  url: validateUrl,\r\n};\r\n"],"names":["tslib_1.__decorate","tslib_1.__spread","differentLocales","noop","tslib_1.__extends"],"mappings":"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"}