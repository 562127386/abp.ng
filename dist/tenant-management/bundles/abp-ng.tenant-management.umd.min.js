!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ng-bootstrap/ng-bootstrap"),require("@ngxs/store"),require("primeng/table"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("@angular/router"),require("@abp/ng.feature-management"),require("@ngx-validate/core")):"function"==typeof define&&define.amd?define("@abp/ng.tenant-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ng-bootstrap/ng-bootstrap","@ngxs/store","primeng/table","@angular/forms","rxjs","rxjs/operators","@angular/router","@abp/ng.feature-management","@ngx-validate/core"],t):t(((e=e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["tenant-management"]={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.ngBootstrap,e.store,e.table,e.ng.forms,e.rxjs,e.rxjs.operators,e.ng.router,e.ng_featureManagement,e.core$1)}(this,(function(e,t,n,a,r,o,i,s,l,p,c,u,d){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var g=function(){return(g=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function m(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}function b(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function f(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,r,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(a=o.next()).done;)i.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i}function h(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(f(arguments[t]));return e}var y=function(){function e(e){this.payload=e}return e.type="[TenantManagement] Get Tenant",e}();var v=function(){function e(e){this.payload=e}return e.type="[TenantManagement] Get Tenant By Id",e}();var T=function(){function e(e){this.payload=e}return e.type="[TenantManagement] Create Tenant",e}();var S=function(){function e(e){this.payload=e}return e.type="[TenantManagement] Update Tenant",e}();var M=function(){function e(e){this.payload=e}return e.type="[TenantManagement] Delete Tenant",e}();var C=function(){function e(e){this.rest=e}return e.prototype.getTenant=function(e){void 0===e&&(e={});var t={method:"GET",url:"/api/multi-tenancy/tenants",params:e};return this.rest.request(t)},e.prototype.getTenantById=function(e){var t={method:"GET",url:"/api/multi-tenancy/tenants/"+e};return this.rest.request(t)},e.prototype.deleteTenant=function(e){var t={method:"DELETE",url:"/api/multi-tenancy/tenants/"+e};return this.rest.request(t)},e.prototype.createTenant=function(e){var t={method:"POST",url:"/api/multi-tenancy/tenants",body:e};return this.rest.request(t)},e.prototype.updateTenant=function(e){var t="/api/multi-tenancy/tenants/"+e.id;delete e.id;var n={method:"PUT",url:t,body:e};return this.rest.request(n)},e.prototype.getDefaultConnectionString=function(e){var t={method:"GET",responseType:"text",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"};return this.rest.request(t)},e.prototype.updateDefaultConnectionString=function(e){var t={method:"PUT",url:"/api/multi-tenancy/tenants/"+e.id+"/default-connection-string",params:{defaultConnectionString:e.defaultConnectionString}};return this.rest.request(t)},e.prototype.deleteDefaultConnectionString=function(e){var t={method:"DELETE",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"};return this.rest.request(t)},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.RestService}]},e.ngInjectableDef=a.ɵɵdefineInjectable({factory:function(){return new e(a.ɵɵinject(t.RestService))},token:e,providedIn:"root"}),e}();var D=function(){function e(e){this.tenantManagementService=e}return e.get=function(e){return e.result.items||[]},e.getTenantsTotalCount=function(e){return e.result.totalCount},e.prototype.get=function(e,t){var n=e.patchState,a=t.payload;return this.tenantManagementService.getTenant(a).pipe(p.tap((function(e){return n({result:e})})))},e.prototype.getById=function(e,t){var n=e.patchState,a=t.payload;return this.tenantManagementService.getTenantById(a).pipe(p.tap((function(e){return n({selectedItem:e})})))},e.prototype.delete=function(e,t){var n=t.payload;return this.tenantManagementService.deleteTenant(n)},e.prototype.add=function(e,t){var n=t.payload;return this.tenantManagementService.createTenant(n)},e.prototype.update=function(e,t){var n=e.getState,a=t.payload;return this.tenantManagementService.updateTenant(g({},n().selectedItem,a))},e.ctorParameters=function(){return[{type:C}]},m([o.Action(y),b("design:type",Function),b("design:paramtypes",[Object,y]),b("design:returntype",void 0)],e.prototype,"get",null),m([o.Action(v),b("design:type",Function),b("design:paramtypes",[Object,v]),b("design:returntype",void 0)],e.prototype,"getById",null),m([o.Action(M),b("design:type",Function),b("design:paramtypes",[Object,M]),b("design:returntype",void 0)],e.prototype,"delete",null),m([o.Action(T),b("design:type",Function),b("design:paramtypes",[Object,T]),b("design:returntype",void 0)],e.prototype,"add",null),m([o.Action(S),b("design:type",Function),b("design:paramtypes",[Object,S]),b("design:returntype",void 0)],e.prototype,"update",null),m([o.Selector(),b("design:type",Function),b("design:paramtypes",[Object]),b("design:returntype",Array)],e,"get",null),m([o.Selector(),b("design:type",Function),b("design:paramtypes",[Object]),b("design:returntype",Number)],e,"getTenantsTotalCount",null),e=m([o.State({name:"TenantManagementState",defaults:{result:{},selectedItem:{}}}),b("design:paramtypes",[C])],e)}();var F=function(){function e(e,t,n,a){var r=this;this.confirmationService=e,this.tenantService=t,this.fb=n,this.store=a,this.selectedModalContent={},this.visibleFeatures=!1,this.pageQuery={},this.loading=!1,this.modalBusy=!1,this.sortOrder="",this.sortKey="",this.onVisibleFeaturesChange=function(e){r.visibleFeatures=e}}return Object.defineProperty(e.prototype,"useSharedDatabase",{get:function(){return this.defaultConnectionStringForm.get("useSharedDatabase").value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"connectionString",{get:function(){return this.defaultConnectionStringForm.get("defaultConnectionString").value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDisabledSaveButton",{get:function(){return!!this.selectedModalContent&&(!("saveConnStr"!==this.selectedModalContent.type||!this.defaultConnectionStringForm||!this.defaultConnectionStringForm.invalid)||!("saveTenant"!==this.selectedModalContent.type||!this.tenantForm||!this.tenantForm.invalid))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.get()},e.prototype.onSearch=function(e){this.pageQuery.filter=e,this.get()},e.prototype.createTenantForm=function(){this.tenantForm=this.fb.group({name:[this.selected.name||"",[s.Validators.required,s.Validators.maxLength(256)]]})},e.prototype.createDefaultConnectionStringForm=function(){this.defaultConnectionStringForm=this.fb.group({useSharedDatabase:this._useSharedDatabase,defaultConnectionString:[this.defaultConnectionString||""]})},e.prototype.openModal=function(e,t,n){this.selectedModalContent={title:e,template:t,type:n},this.isModalVisible=!0},e.prototype.onEditConnectionString=function(e){var t=this;this.store.dispatch(new v(e)).pipe(p.pluck("TenantManagementState","selectedItem"),p.switchMap((function(n){return t.selected=n,t.tenantService.getDefaultConnectionString(e)}))).subscribe((function(e){t._useSharedDatabase=!e,t.defaultConnectionString=e||"",t.createDefaultConnectionStringForm(),t.openModal("AbpTenantManagement::ConnectionStrings",t.connectionStringModalTemplate,"saveConnStr")}))},e.prototype.addTenant=function(){this.selected={},this.createTenantForm(),this.openModal("AbpTenantManagement::NewTenant",this.tenantModalTemplate,"saveTenant")},e.prototype.editTenant=function(e){var t=this;this.store.dispatch(new v(e)).pipe(p.pluck("TenantManagementState","selectedItem")).subscribe((function(e){t.selected=e,t.createTenantForm(),t.openModal("AbpTenantManagement::Edit",t.tenantModalTemplate,"saveTenant")}))},e.prototype.save=function(){var e=this.selectedModalContent.type;e&&("saveTenant"===e?this.saveTenant():"saveConnStr"===e&&this.saveConnectionString())},e.prototype.saveConnectionString=function(){var e=this;this.modalBusy||(this.modalBusy=!0,this.useSharedDatabase||!this.useSharedDatabase&&!this.connectionString?this.tenantService.deleteDefaultConnectionString(this.selected.id).pipe(p.take(1),p.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})):this.tenantService.updateDefaultConnectionString({id:this.selected.id,defaultConnectionString:this.connectionString}).pipe(p.take(1),p.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})))},e.prototype.saveTenant=function(){var e=this;this.tenantForm.valid&&!this.modalBusy&&(this.modalBusy=!0,this.store.dispatch(this.selected.id?new S(g({},this.selected,this.tenantForm.value,{id:this.selected.id})):new T(this.tenantForm.value)).pipe(p.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1,e.get()})))},e.prototype.delete=function(e,t){var n=this;this.confirmationService.warn("AbpTenantManagement::TenantDeletionConfirmationMessage","AbpTenantManagement::AreYouSure",{messageLocalizationParams:[t]}).subscribe((function(t){"confirm"===t&&n.store.dispatch(new M(e)).subscribe((function(){return n.get()}))}))},e.prototype.onPageChange=function(e){this.pageQuery.skipCount=e.first,this.pageQuery.maxResultCount=e.rows,this.get()},e.prototype.get=function(){var e=this;this.loading=!0,this.store.dispatch(new y(this.pageQuery)).pipe(p.finalize((function(){return e.loading=!1}))).subscribe()},e.prototype.onSharedDatabaseChange=function(e){e||setTimeout((function(){var e=document.getElementById("defaultConnectionString");e&&e.focus()}),0)},e.decorators=[{type:a.Component,args:[{selector:"abp-tenants",template:'<div id="wrapper" class="card">\r\n  <div class="card-header">\r\n    <div class="row">\r\n      <div class="col col-md-6">\r\n        <h5 class="card-title">{{ \'AbpTenantManagement::Tenants\' | abpLocalization }}</h5>\r\n      </div>\r\n      <div class="text-right col col-md-6">\r\n        <button\r\n          *abpPermission="\'AbpTenantManagement.Tenants.Create\'"\r\n          id="create-tenants"\r\n          class="btn btn-primary"\r\n          type="button"\r\n          (click)="addTenant()"\r\n        >\r\n          <i class="fa fa-plus mr-1"></i>\r\n          <span>{{ \'AbpTenantManagement::NewTenant\' | abpLocalization }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="card-body">\r\n    <div id="data-tables-table-filter" class="data-tables-filter">\r\n      <label\r\n        ><input\r\n          type="search"\r\n          class="form-control form-control-sm"\r\n          [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n          (input.debounce)="onSearch($event.target.value)"\r\n      /></label>\r\n    </div>\r\n    <p-table\r\n      *ngIf="[150, 0] as columnWidths"\r\n      [value]="data$ | async"\r\n      [abpTableSort]="{ key: sortKey, order: sortOrder }"\r\n      [lazy]="true"\r\n      [lazyLoadOnInit]="false"\r\n      [paginator]="true"\r\n      [rows]="10"\r\n      [totalRecords]="totalCount$ | async"\r\n      [loading]="loading"\r\n      [resizableColumns]="true"\r\n      [scrollable]="true"\r\n      (onLazyLoad)="onPageChange($event)"\r\n    >\r\n      <ng-template pTemplate="colgroup">\r\n        <colgroup>\r\n          <col *ngFor="let width of columnWidths" [ngStyle]="{ \'width.px\': width || undefined }" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns>\r\n        <tr\r\n          abp-table-empty-message\r\n          [attr.colspan]="columnWidths.length"\r\n          localizationResource="AbpTenantManagement"\r\n          localizationProp="NoDataAvailableInDatatable"\r\n        ></tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th>{{ \'AbpTenantManagement::Actions\' | abpLocalization }}</th>\r\n          <th pResizableColumn (click)="sortOrderIcon.sort(\'name\')">\r\n            {{ \'AbpTenantManagement::TenantName\' | abpLocalization }}\r\n            <abp-sort-order-icon\r\n              #sortOrderIcon\r\n              sortKey="name"\r\n              [(selectedSortKey)]="sortKey"\r\n              [(order)]="sortOrder"\r\n            >\r\n            </abp-sort-order-icon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-data>\r\n        <tr>\r\n          <td class="text-center">\r\n            <div ngbDropdown container="body" class="d-inline-block">\r\n              <button\r\n                class="btn btn-primary btn-sm dropdown-toggle"\r\n                data-toggle="dropdown"\r\n                aria-haspopup="true"\r\n                ngbDropdownToggle\r\n              >\r\n                <i class="fa fa-cog mr-1"></i>{{ \'AbpTenantManagement::Actions\' | abpLocalization }}\r\n              </button>\r\n              <div ngbDropdownMenu>\r\n                <button\r\n                  *abpPermission="\'AbpTenantManagement.Tenants.Update\'"\r\n                  ngbDropdownItem\r\n                  (click)="editTenant(data.id)"\r\n                >\r\n                  {{ \'AbpTenantManagement::Edit\' | abpLocalization }}\r\n                </button>\r\n                <button\r\n                  *abpPermission="\'AbpTenantManagement.Tenants.ManageConnectionStrings\'"\r\n                  ngbDropdownItem\r\n                  (click)="onEditConnectionString(data.id)"\r\n                >\r\n                  {{ \'AbpTenantManagement::Permission:ManageConnectionStrings\' | abpLocalization }}\r\n                </button>\r\n                <button\r\n                  *abpPermission="\'AbpTenantManagement.Tenants.ManageFeatures\'"\r\n                  ngbDropdownItem\r\n                  (click)="providerKey = data.id; visibleFeatures = true"\r\n                >\r\n                  {{ \'AbpTenantManagement::Permission:ManageFeatures\' | abpLocalization }}\r\n                </button>\r\n                <button\r\n                  *abpPermission="\'AbpTenantManagement.Tenants.Delete\'"\r\n                  ngbDropdownItem\r\n                  (click)="delete(data.id, data.name)"\r\n                >\r\n                  {{ \'AbpTenantManagement::Delete\' | abpLocalization }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </td>\r\n          <td>{{ data.name }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<abp-modal size="md" [(visible)]="isModalVisible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ selectedModalContent.title | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <ng-container *ngTemplateOutlet="selectedModalContent?.template"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button #abpClose type="button" class="btn btn-secondary">\r\n      {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" (click)="save()" [disabled]="isDisabledSaveButton">{{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<ng-template #tenantModalTemplate>\r\n  <form [formGroup]="tenantForm" (ngSubmit)="save()" validateOnSubmit>\r\n    <div class="mt-2">\r\n      <div class="form-group">\r\n        <label for="name">{{ \'AbpTenantManagement::TenantName\' | abpLocalization }}</label>\r\n        <input type="text" id="name" class="form-control" formControlName="name" autofocus />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #connectionStringModalTemplate>\r\n  <form [formGroup]="defaultConnectionStringForm" (ngSubmit)="save()" validateOnSubmit>\r\n    <div class="form-group">\r\n      <div class="custom-checkbox custom-control mb-2">\r\n        <input\r\n          id="useSharedDatabase"\r\n          type="checkbox"\r\n          class="custom-control-input"\r\n          formControlName="useSharedDatabase"\r\n          autofocus\r\n          (ngModelChange)="onSharedDatabaseChange($event)"\r\n        />\r\n        <label for="useSharedDatabase" class="custom-control-label">{{\r\n          \'AbpTenantManagement::DisplayName:UseSharedDatabase\' | abpLocalization\r\n        }}</label>\r\n      </div>\r\n    </div>\r\n    <div class="form-group" *ngIf="!useSharedDatabase">\r\n      <label for="defaultConnectionString">{{\r\n        \'AbpTenantManagement::DisplayName:DefaultConnectionString\' | abpLocalization\r\n      }}</label>\r\n      <input\r\n        type="text"\r\n        id="defaultConnectionString"\r\n        class="form-control"\r\n        formControlName="defaultConnectionString"\r\n      />\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<abp-feature-management\r\n  *abpReplaceableTemplate="{\r\n    inputs: {\r\n      providerName: { value: \'T\' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visibleFeatures, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisibleFeaturesChange },\r\n    componentKey: \'FeatureManagement.FeatureManagementComponent\'\r\n  }"\r\n  [(visible)]="visibleFeatures"\r\n  providerName="T"\r\n  [providerKey]="providerKey"\r\n>\r\n</abp-feature-management>\r\n'}]}],e.ctorParameters=function(){return[{type:n.ConfirmationService},{type:C},{type:s.FormBuilder},{type:o.Store}]},e.propDecorators={tenantModalTemplate:[{type:a.ViewChild,args:["tenantModalTemplate",{static:!1}]}],connectionStringModalTemplate:[{type:a.ViewChild,args:["connectionStringModalTemplate",{static:!1}]}]},m([o.Select(D.get),b("design:type",l.Observable)],e.prototype,"data$",void 0),m([o.Select(D.getTenantsTotalCount),b("design:type",l.Observable)],e.prototype,"totalCount$",void 0),e}();var w,A={requiredPolicy:"AbpTenantManagement.Tenants",replaceableComponent:{key:"TenantManagement.TenantsComponent",defaultComponent:F}},I=[{path:"",redirectTo:"tenants",pathMatch:"full"},{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard,t.PermissionGuard],children:[{path:"tenants",component:t.ReplaceableRouteContainerComponent,data:A}]}],j=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[c.RouterModule.forChild(I)],exports:[c.RouterModule]}]}],e}(),O=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{declarations:[F],imports:[j,o.NgxsModule.forFeature([D]),d.NgxValidateCoreModule,t.CoreModule,i.TableModule,n.ThemeSharedModule,r.NgbDropdownModule,u.FeatureManagementModule]}]}],e}();!function(e){function t(){}function n(){}function a(){}function r(){}function o(){}e.State=t,e.Item=n,e.AddRequest=a,e.UpdateRequest=r,e.DefaultConnectionStringRequest=o}(w||(w={}));var z=function(){function e(e){this.store=e}return e.prototype.get=function(){return this.store.selectSnapshot(D.get)},e.prototype.getTenantsTotalCount=function(){return this.store.selectSnapshot(D.getTenantsTotalCount)},e.prototype.dispatchGetTenants=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(y.bind.apply(y,h([void 0],e))))},e.prototype.dispatchGetTenantById=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(v.bind.apply(v,h([void 0],e))))},e.prototype.dispatchCreateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(T.bind.apply(T,h([void 0],e))))},e.prototype.dispatchUpdateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(S.bind.apply(S,h([void 0],e))))},e.prototype.dispatchDeleteTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(M.bind.apply(M,h([void 0],e))))},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:o.Store}]},e.ngInjectableDef=a.ɵɵdefineInjectable({factory:function(){return new e(a.ɵɵinject(o.Store))},token:e,providedIn:"root"}),e}();e.CreateTenant=T,e.DeleteTenant=M,e.GetTenantById=v,e.GetTenants=y,e.TenantManagementModule=O,e.TenantManagementService=C,e.TenantManagementState=D,e.TenantManagementStateService=z,e.TenantsComponent=F,e.UpdateTenant=S,e.ɵa=F,e.ɵb=D,e.ɵc=C,e.ɵd=y,e.ɵe=v,e.ɵf=T,e.ɵg=S,e.ɵh=M,e.ɵj=j,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.tenant-management.umd.min.js.map