{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management-state.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","GetTenants","payload","type","GetTenantById","CreateTenant","UpdateTenant","DeleteTenant","TenantManagementService","rest","getTenant","params","request","method","url","getTenantById","id","deleteTenant","createTenant","body","updateTenant","getDefaultConnectionString","responseType","updateDefaultConnectionString","defaultConnectionString","deleteDefaultConnectionString","Injectable","args","providedIn","RestService","TenantManagementState","tenantManagementService","get","_a","result","items","getTenantsTotalCount","totalCount","_b","patchState","pipe","tap","getById","selectedItem","delete","_","add","update","getState","tslib_1.__decorate","Action","Selector","State","name","defaults","TenantsComponent","confirmationService","tenantService","fb","store","_this","selectedModalContent","visibleFeatures","pageQuery","maxResultCount","loading","modalBusy","sortOrder","sortKey","onVisibleFeaturesChange","defaultConnectionStringForm","invalid","tenantForm","ngOnInit","onSearch","filter","createTenantForm","group","selected","Validators","required","maxLength","createDefaultConnectionStringForm","useSharedDatabase","_useSharedDatabase","openModal","title","template","isModalVisible","onEditConnectionString","dispatch","pluck","switchMap","subscribe","fetchedConnectionString","connectionStringModalTemplate","addTenant","tenantModalTemplate","editTenant","save","saveTenant","saveConnectionString","connectionString","take","finalize","valid","warn","messageLocalizationParams","status","Toaster","Status","confirm","onPageChange","page","skipCount","onSharedDatabaseChange","setTimeout","document","getElementById","focus","Component","selector","ConfirmationService","FormBuilder","Store","ViewChild","static","Select","Observable","TenantManagement","Éµ0","requiredPolicy","replaceableComponent","defaultComponent","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","children","ReplaceableRouteContainerComponent","data","TenantManagementRoutingModule","NgModule","imports","RouterModule","forChild","exports","TenantManagementModule","declarations","NgxsModule","forFeature","NgxValidateCoreModule","CoreModule","TableModule","ThemeSharedModule","NgbDropdownModule","FeatureManagementModule","Item","AddRequest","UpdateRequest","DefaultConnectionStringRequest","TenantManagementStateService","selectSnapshot","dispatchGetTenants","_i","bind","dispatchGetTenantById","dispatchCreateTenant","dispatchUpdateTenant","dispatchDeleteTenant"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TenantManagement } from '../models/tenant-management';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\nexport class GetTenants {\r\n  static readonly type = '[TenantManagement] Get Tenant';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetTenantById {\r\n  static readonly type = '[TenantManagement] Get Tenant By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateTenant {\r\n  static readonly type = '[TenantManagement] Create Tenant';\r\n  constructor(public payload: TenantManagement.AddRequest) {}\r\n}\r\n\r\nexport class UpdateTenant {\r\n  static readonly type = '[TenantManagement] Update Tenant';\r\n  constructor(public payload: TenantManagement.UpdateRequest) {}\r\n}\r\n\r\nexport class DeleteTenant {\r\n  static readonly type = '[TenantManagement] Delete Tenant';\r\n  constructor(public payload: string) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { TenantManagement } from '../models/tenant-management';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TenantManagementService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getTenant(params = {} as ABP.PageQueryParams): Observable<TenantManagement.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/multi-tenancy/tenants',\r\n      params\r\n    };\r\n\r\n    return this.rest.request<null, TenantManagement.Response>(request);\r\n  }\r\n\r\n  getTenantById(id: string): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/multi-tenancy/tenants/${id}`\r\n    };\r\n\r\n    return this.rest.request<null, ABP.BasicItem>(request);\r\n  }\r\n\r\n  deleteTenant(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}`\r\n    };\r\n\r\n    return this.rest.request<null, null>(request);\r\n  }\r\n\r\n  createTenant(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<TenantManagement.AddRequest> = {\r\n      method: 'POST',\r\n      url: '/api/multi-tenancy/tenants',\r\n      body\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\r\n  }\r\n\r\n  updateTenant(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\r\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      body\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\r\n  }\r\n\r\n  getDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'GET',\r\n      responseType: Rest.ResponseType.Text,\r\n      url\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\r\n  }\r\n\r\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\r\n    const url = `/api/multi-tenancy/tenants/${payload.id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      params: { defaultConnectionString: payload.defaultConnectionString }\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\r\n  }\r\n\r\n  deleteDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'DELETE',\r\n      url\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenantById,\r\n  GetTenants,\r\n  UpdateTenant,\r\n} from '../actions/tenant-management.actions';\r\nimport { TenantManagement } from '../models/tenant-management';\r\nimport { TenantManagementService } from '../services/tenant-management.service';\r\n\r\n@State<TenantManagement.State>({\r\n  name: 'TenantManagementState',\r\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\r\n})\r\nexport class TenantManagementState {\r\n  @Selector()\r\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\r\n    return result.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\r\n    return result.totalCount;\r\n  }\r\n\r\n  constructor(private tenantManagementService: TenantManagementService) {}\r\n\r\n  @Action(GetTenants)\r\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\r\n    return this.tenantManagementService.getTenant(payload).pipe(\r\n      tap(result =>\r\n        patchState({\r\n          result,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetTenantById)\r\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\r\n    return this.tenantManagementService.getTenantById(payload).pipe(\r\n      tap(selectedItem =>\r\n        patchState({\r\n          selectedItem,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteTenant)\r\n  delete(_, { payload }: DeleteTenant) {\r\n    return this.tenantManagementService.deleteTenant(payload);\r\n  }\r\n\r\n  @Action(CreateTenant)\r\n  add(_, { payload }: CreateTenant) {\r\n    return this.tenantManagementService.createTenant(payload);\r\n  }\r\n\r\n  @Action(UpdateTenant)\r\n  update({ getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\r\n    return this.tenantManagementService.updateTenant({ ...getState().selectedItem, ...payload });\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenantById,\r\n  GetTenants,\r\n  UpdateTenant,\r\n} from '../../actions/tenant-management.actions';\r\nimport { TenantManagementService } from '../../services/tenant-management.service';\r\nimport { TenantManagementState } from '../../states/tenant-management.state';\r\n\r\ninterface SelectedModalContent {\r\n  type: 'saveConnStr' | 'saveTenant';\r\n  title: string;\r\n  template: TemplateRef<any>;\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-tenants',\r\n  templateUrl: './tenants.component.html',\r\n})\r\nexport class TenantsComponent implements OnInit {\r\n  @Select(TenantManagementState.get)\r\n  data$: Observable<ABP.BasicItem[]>;\r\n\r\n  @Select(TenantManagementState.getTenantsTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  selected: ABP.BasicItem;\r\n\r\n  tenantForm: FormGroup;\r\n\r\n  defaultConnectionStringForm: FormGroup;\r\n\r\n  defaultConnectionString: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  selectedModalContent = {} as SelectedModalContent;\r\n\r\n  visibleFeatures = false;\r\n\r\n  providerKey: string;\r\n\r\n  _useSharedDatabase: boolean;\r\n\r\n  pageQuery: ABP.PageQueryParams = { maxResultCount: 10 };\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  get useSharedDatabase(): boolean {\r\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\r\n  }\r\n\r\n  get connectionString(): string {\r\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\r\n  }\r\n\r\n  @ViewChild('tenantModalTemplate', { static: false })\r\n  tenantModalTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('connectionStringModalTemplate', { static: false })\r\n  connectionStringModalTemplate: TemplateRef<any>;\r\n\r\n  get isDisabledSaveButton(): boolean {\r\n    if (!this.selectedModalContent) return false;\r\n\r\n    if (\r\n      this.selectedModalContent.type === 'saveConnStr' &&\r\n      this.defaultConnectionStringForm &&\r\n      this.defaultConnectionStringForm.invalid\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.selectedModalContent.type === 'saveTenant' &&\r\n      this.tenantForm &&\r\n      this.tenantForm.invalid\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onVisibleFeaturesChange = (value: boolean) => {\r\n    this.visibleFeatures = value;\r\n  };\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private tenantService: TenantManagementService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n  }\r\n\r\n  onSearch(value: string) {\r\n    this.pageQuery.filter = value;\r\n    this.get();\r\n  }\r\n\r\n  private createTenantForm() {\r\n    this.tenantForm = this.fb.group({\r\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\r\n    });\r\n  }\r\n\r\n  private createDefaultConnectionStringForm() {\r\n    this.defaultConnectionStringForm = this.fb.group({\r\n      useSharedDatabase: this._useSharedDatabase,\r\n      defaultConnectionString: [this.defaultConnectionString || ''],\r\n    });\r\n  }\r\n\r\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\r\n    this.selectedModalContent = {\r\n      title,\r\n      template,\r\n      type,\r\n    };\r\n\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  onEditConnectionString(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(\r\n        pluck('TenantManagementState', 'selectedItem'),\r\n        switchMap(selected => {\r\n          this.selected = selected;\r\n          return this.tenantService.getDefaultConnectionString(id);\r\n        }),\r\n      )\r\n      .subscribe(fetchedConnectionString => {\r\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\r\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\r\n        this.createDefaultConnectionStringForm();\r\n        this.openModal(\r\n          'AbpTenantManagement::ConnectionStrings',\r\n          this.connectionStringModalTemplate,\r\n          'saveConnStr',\r\n        );\r\n      });\r\n  }\r\n\r\n  addTenant() {\r\n    this.selected = {} as ABP.BasicItem;\r\n    this.createTenantForm();\r\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\r\n  }\r\n\r\n  editTenant(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\r\n      .subscribe(selected => {\r\n        this.selected = selected;\r\n        this.createTenantForm();\r\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\r\n      });\r\n  }\r\n\r\n  save() {\r\n    const { type } = this.selectedModalContent;\r\n    if (!type) return;\r\n    if (type === 'saveTenant') this.saveTenant();\r\n    else if (type === 'saveConnStr') this.saveConnectionString();\r\n  }\r\n\r\n  saveConnectionString() {\r\n    if (this.modalBusy) return;\r\n\r\n    this.modalBusy = true;\r\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\r\n      this.tenantService\r\n        .deleteDefaultConnectionString(this.selected.id)\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    } else {\r\n      this.tenantService\r\n        .updateDefaultConnectionString({\r\n          id: this.selected.id,\r\n          defaultConnectionString: this.connectionString,\r\n        })\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  saveTenant() {\r\n    if (!this.tenantForm.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\r\n          : new CreateTenant(this.tenantForm.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn(\r\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\r\n        'AbpTenantManagement::AreYouSure',\r\n        {\r\n          messageLocalizationParams: [name],\r\n        },\r\n      )\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteTenant(id)).subscribe(() => this.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(page: number) {\r\n    this.pageQuery.skipCount = (page - 1) * this.pageQuery.maxResultCount;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetTenants(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n\r\n  onSharedDatabaseChange(value: boolean) {\r\n    if (!value) {\r\n      setTimeout(() => {\r\n        const defaultConnectionString = document.getElementById(\r\n          'defaultConnectionString',\r\n        ) as HTMLInputElement;\r\n        if (defaultConnectionString) {\r\n          defaultConnectionString.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  DynamicLayoutComponent,\r\n  PermissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'tenants',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpTenantManagement.Tenants',\r\n          replaceableComponent: {\r\n            key: 'TenantManagement.TenantsComponent',\r\n            defaultComponent: TenantsComponent,\r\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TenantManagementRoutingModule {}\r\n","import { ABP } from '@abp/ng.core';\r\n\r\nexport namespace TenantManagement {\r\n  export interface State {\r\n    result: Response;\r\n    selectedItem: Item;\r\n  }\r\n\r\n  export type Response = ABP.PagedResponse<Item>;\r\n\r\n  export interface Item {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface AddRequest {\r\n    name: string;\r\n  }\r\n\r\n  export interface UpdateRequest extends AddRequest {\r\n    id: string;\r\n  }\r\n\r\n  export interface DefaultConnectionStringRequest {\r\n    id: string;\r\n    defaultConnectionString: string;\r\n  }\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { TenantManagementState } from './states/tenant-management.state';\r\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\r\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  imports: [\r\n    TenantManagementRoutingModule,\r\n    NgxsModule.forFeature([TenantManagementState]),\r\n    NgxValidateCoreModule,\r\n    CoreModule,\r\n    TableModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    FeatureManagementModule,\r\n  ],\r\n})\r\nexport class TenantManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { TenantManagementState } from '../states/tenant-management.state';\r\nimport { ABP } from '@abp/ng.core';\r\nimport { GetTenants, GetTenantById, CreateTenant, UpdateTenant, DeleteTenant } from '../actions';\r\nimport { TenantManagement } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantManagementStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  get() {\r\n    return this.store.selectSnapshot(TenantManagementState.get);\r\n  }\r\n\r\n  getTenantsTotalCount() {\r\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\r\n  }\r\n\r\n  dispatchGetTenants(...args: ConstructorParameters<typeof GetTenants>) {\r\n    return this.store.dispatch(new GetTenants(...args));\r\n  }\r\n\r\n  dispatchGetTenantById(...args: ConstructorParameters<typeof GetTenantById>) {\r\n    return this.store.dispatch(new GetTenantById(...args));\r\n  }\r\n\r\n  dispatchCreateTenant(...args: ConstructorParameters<typeof CreateTenant>) {\r\n    return this.store.dispatch(new CreateTenant(...args));\r\n  }\r\n\r\n  dispatchUpdateTenant(...args: ConstructorParameters<typeof UpdateTenant>) {\r\n    return this.store.dispatch(new UpdateTenant(...args));\r\n  }\r\n\r\n  dispatchDeleteTenant(...args: ConstructorParameters<typeof DeleteTenant>) {\r\n    return this.store.dispatch(new DeleteTenant(...args));\r\n  }\r\n}\r\n"]}