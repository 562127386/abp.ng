import { AddReplaceableComponent, CONTENT_STRATEGY, DomInsertionService } from '@abp/ng.core';
import { APP_INITIALIZER } from '@angular/core';
import { Store } from '@ngxs/store';
import { AccountLayoutComponent } from '../components/account-layout/account-layout.component';
import { ApplicationLayoutComponent } from '../components/application-layout/application-layout.component';
import { EmptyLayoutComponent } from '../components/empty-layout/empty-layout.component';
import styles from '../constants/styles';
export const BASIC_THEME_STYLES_PROVIDERS = [
    {
        provide: APP_INITIALIZER,
        useFactory: configureStyles,
        deps: [DomInsertionService, Store],
        multi: true,
    },
];
export function configureStyles(domInsertion, store) {
    return () => {
        domInsertion.insertContent(CONTENT_STRATEGY.AppendStyleToHead(styles));
        initLayouts(store);
    };
}
function initLayouts(store) {
    store.dispatch([
        new AddReplaceableComponent({
            key: "Theme.ApplicationLayoutComponent" /* ApplicationLayout */,
            component: ApplicationLayoutComponent,
        }),
        new AddReplaceableComponent({
            key: "Theme.AccountLayoutComponent" /* AccountLayout */,
            component: AccountLayoutComponent,
        }),
        new AddReplaceableComponent({
            key: "Theme.EmptyLayoutComponent" /* EmptyLayout */,
            component: EmptyLayoutComponent,
        }),
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtYmFzaWMvc3JjL2xpYi9wcm92aWRlcnMvc3R5bGVzLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM5RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDL0YsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFDM0csT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDekYsT0FBTyxNQUFNLE1BQU0scUJBQXFCLENBQUM7QUFHekMsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUc7SUFDMUM7UUFDRSxPQUFPLEVBQUUsZUFBZTtRQUN4QixVQUFVLEVBQUUsZUFBZTtRQUMzQixJQUFJLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxLQUFLLENBQUM7UUFDbEMsS0FBSyxFQUFFLElBQUk7S0FDWjtDQUNGLENBQUM7QUFFRixNQUFNLFVBQVUsZUFBZSxDQUFDLFlBQWlDLEVBQUUsS0FBWTtJQUM3RSxPQUFPLEdBQUcsRUFBRTtRQUNWLFlBQVksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUV2RSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLEtBQVk7SUFDL0IsS0FBSyxDQUFDLFFBQVEsQ0FBQztRQUNiLElBQUksdUJBQXVCLENBQUM7WUFDMUIsR0FBRyw0REFBeUM7WUFDNUMsU0FBUyxFQUFFLDBCQUEwQjtTQUN0QyxDQUFDO1FBQ0YsSUFBSSx1QkFBdUIsQ0FBQztZQUMxQixHQUFHLG9EQUFxQztZQUN4QyxTQUFTLEVBQUUsc0JBQXNCO1NBQ2xDLENBQUM7UUFDRixJQUFJLHVCQUF1QixDQUFDO1lBQzFCLEdBQUcsZ0RBQW1DO1lBQ3RDLFNBQVMsRUFBRSxvQkFBb0I7U0FDaEMsQ0FBQztLQUNILENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZGRSZXBsYWNlYWJsZUNvbXBvbmVudCwgQ09OVEVOVF9TVFJBVEVHWSwgRG9tSW5zZXJ0aW9uU2VydmljZSB9IGZyb20gJ0BhYnAvbmcuY29yZSc7XHJcbmltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJ0BuZ3hzL3N0b3JlJztcclxuaW1wb3J0IHsgQWNjb3VudExheW91dENvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvYWNjb3VudC1sYXlvdXQvYWNjb3VudC1sYXlvdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQXBwbGljYXRpb25MYXlvdXRDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2FwcGxpY2F0aW9uLWxheW91dC9hcHBsaWNhdGlvbi1sYXlvdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRW1wdHlMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2VtcHR5LWxheW91dC9lbXB0eS1sYXlvdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuLi9jb25zdGFudHMvc3R5bGVzJztcclxuaW1wb3J0IHsgZVRoZW1lQmFzaWNDb21wb25lbnRzIH0gZnJvbSAnLi4vZW51bXMvY29tcG9uZW50cyc7XHJcblxyXG5leHBvcnQgY29uc3QgQkFTSUNfVEhFTUVfU1RZTEVTX1BST1ZJREVSUyA9IFtcclxuICB7XHJcbiAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXHJcbiAgICB1c2VGYWN0b3J5OiBjb25maWd1cmVTdHlsZXMsXHJcbiAgICBkZXBzOiBbRG9tSW5zZXJ0aW9uU2VydmljZSwgU3RvcmVdLFxyXG4gICAgbXVsdGk6IHRydWUsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVTdHlsZXMoZG9tSW5zZXJ0aW9uOiBEb21JbnNlcnRpb25TZXJ2aWNlLCBzdG9yZTogU3RvcmUpIHtcclxuICByZXR1cm4gKCkgPT4ge1xyXG4gICAgZG9tSW5zZXJ0aW9uLmluc2VydENvbnRlbnQoQ09OVEVOVF9TVFJBVEVHWS5BcHBlbmRTdHlsZVRvSGVhZChzdHlsZXMpKTtcclxuXHJcbiAgICBpbml0TGF5b3V0cyhzdG9yZSk7XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdExheW91dHMoc3RvcmU6IFN0b3JlKSB7XHJcbiAgc3RvcmUuZGlzcGF0Y2goW1xyXG4gICAgbmV3IEFkZFJlcGxhY2VhYmxlQ29tcG9uZW50KHtcclxuICAgICAga2V5OiBlVGhlbWVCYXNpY0NvbXBvbmVudHMuQXBwbGljYXRpb25MYXlvdXQsXHJcbiAgICAgIGNvbXBvbmVudDogQXBwbGljYXRpb25MYXlvdXRDb21wb25lbnQsXHJcbiAgICB9KSxcclxuICAgIG5ldyBBZGRSZXBsYWNlYWJsZUNvbXBvbmVudCh7XHJcbiAgICAgIGtleTogZVRoZW1lQmFzaWNDb21wb25lbnRzLkFjY291bnRMYXlvdXQsXHJcbiAgICAgIGNvbXBvbmVudDogQWNjb3VudExheW91dENvbXBvbmVudCxcclxuICAgIH0pLFxyXG4gICAgbmV3IEFkZFJlcGxhY2VhYmxlQ29tcG9uZW50KHtcclxuICAgICAga2V5OiBlVGhlbWVCYXNpY0NvbXBvbmVudHMuRW1wdHlMYXlvdXQsXHJcbiAgICAgIGNvbXBvbmVudDogRW1wdHlMYXlvdXRDb21wb25lbnQsXHJcbiAgICB9KSxcclxuICBdKTtcclxufVxyXG4iXX0=