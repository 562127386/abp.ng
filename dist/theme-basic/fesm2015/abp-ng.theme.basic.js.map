{"version":3,"file":"abp-ng.theme.basic.js","sources":["ng://@abp/ng.theme.basic/lib/components/account-layout/account-layout.component.ts","ng://@abp/ng.theme.basic/lib/components/application-layout/application-layout.component.ts","ng://@abp/ng.theme.basic/lib/components/empty-layout/empty-layout.component.ts","ng://@abp/ng.theme.basic/lib/actions/layout.actions.ts","ng://@abp/ng.theme.basic/lib/states/layout.state.ts","ng://@abp/ng.theme.basic/lib/components/validation-error/validation-error.component.ts","ng://@abp/ng.theme.basic/lib/constants/styles.ts","ng://@abp/ng.theme.basic/lib/services/initial.service.ts","ng://@abp/ng.theme.basic/lib/components/logo/logo.component.ts","ng://@abp/ng.theme.basic/lib/components/routes/routes.component.ts","ng://@abp/ng.theme.basic/lib/components/nav-items/nav-items.component.ts","ng://@abp/ng.theme.basic/lib/theme-basic.module.ts","ng://@abp/ng.theme.basic/lib/enums/components.ts","ng://@abp/ng.theme.basic/lib/enums/navigation-element-names.ts","ng://@abp/ng.theme.basic/lib/models/layout.ts","ng://@abp/ng.theme.basic/lib/services/layout-state.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { eLayoutType } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'abp-layout-account',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n    <abp-confirmation></abp-confirmation>\r\n    <abp-toast-container right=\"30px\" bottom=\"30px\"></abp-toast-container>\r\n  `,\r\n})\r\nexport class AccountLayoutComponent {\r\n  // required for dynamic component\r\n  static type = eLayoutType.account;\r\n}\r\n","import { eLayoutType, takeUntilDestroy } from '@abp/ng.core';\r\nimport { collapseWithMargin, slideFromBottom } from '@abp/ng.theme.shared';\r\nimport { AfterViewInit, Component, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { eThemeBasicComponents } from '../../enums/components';\r\n\r\n@Component({\r\n  selector: 'abp-layout-application',\r\n  templateUrl: './application-layout.component.html',\r\n  animations: [slideFromBottom, collapseWithMargin],\r\n})\r\nexport class ApplicationLayoutComponent implements AfterViewInit, OnDestroy {\r\n  // required for dynamic component\r\n  static type = eLayoutType.application;\r\n\r\n  isDropdownChildDynamic: boolean;\r\n\r\n  isCollapsed = true;\r\n\r\n  smallScreen: boolean; // do not set true or false\r\n\r\n  logoComponentKey = eThemeBasicComponents.Logo;\r\n\r\n  routesComponentKey = eThemeBasicComponents.Routes;\r\n\r\n  navItemsComponentKey = eThemeBasicComponents.NavItems;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  private checkWindowWidth() {\r\n    setTimeout(() => {\r\n      if (window.innerWidth < 768) {\r\n        this.isDropdownChildDynamic = false;\r\n        if (this.smallScreen === false) {\r\n          this.isCollapsed = false;\r\n          setTimeout(() => {\r\n            this.isCollapsed = true;\r\n          }, 100);\r\n        }\r\n        this.smallScreen = true;\r\n      } else {\r\n        this.isDropdownChildDynamic = true;\r\n        this.smallScreen = false;\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.checkWindowWidth();\r\n\r\n    fromEvent(window, 'resize')\r\n      .pipe(takeUntilDestroy(this), debounceTime(150))\r\n      .subscribe(() => {\r\n        this.checkWindowWidth();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { eLayoutType } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'abp-layout-empty',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n    <abp-confirmation></abp-confirmation>\r\n    <abp-toast-container right=\"30px\" bottom=\"30px\"></abp-toast-container>\r\n  `,\r\n})\r\nexport class EmptyLayoutComponent {\r\n  static type = eLayoutType.empty;\r\n}\r\n","import { Layout } from '../models/layout';\r\n\r\nexport class AddNavigationElement {\r\n  static readonly type = '[Layout] Add Navigation Element';\r\n  constructor(public payload: Layout.NavigationElement | Layout.NavigationElement[]) {}\r\n}\r\n\r\nexport class RemoveNavigationElementByName {\r\n  static readonly type = '[Layout] Remove Navigation ElementByName';\r\n  constructor(public name: string) {}\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { AddNavigationElement, RemoveNavigationElementByName } from '../actions/layout.actions';\r\nimport { Layout } from '../models/layout';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Layout.State>({\r\n  name: 'LayoutState',\r\n  defaults: { navigationElements: [] } as Layout.State,\r\n})\r\n@Injectable()\r\nexport class LayoutState {\r\n  @Selector()\r\n  static getNavigationElements({ navigationElements }: Layout.State): Layout.NavigationElement[] {\r\n    return navigationElements;\r\n  }\r\n\r\n  @Action(AddNavigationElement)\r\n  layoutAddAction(\r\n    { getState, patchState }: StateContext<Layout.State>,\r\n    { payload = [] }: AddNavigationElement,\r\n  ) {\r\n    let { navigationElements } = getState();\r\n\r\n    if (!Array.isArray(payload)) {\r\n      payload = [payload];\r\n    }\r\n\r\n    if (navigationElements.length) {\r\n      payload = snq(\r\n        () =>\r\n          (payload as Layout.NavigationElement[]).filter(\r\n            ({ name }) => navigationElements.findIndex(nav => nav.name === name) < 0,\r\n          ),\r\n        [],\r\n      );\r\n    }\r\n\r\n    if (!payload.length) return;\r\n\r\n    navigationElements = [...navigationElements, ...payload]\r\n      .map(element => ({ ...element, order: element.order || 99 }))\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    return patchState({\r\n      navigationElements,\r\n    });\r\n  }\r\n\r\n  @Action(RemoveNavigationElementByName)\r\n  layoutRemoveAction(\r\n    { getState, patchState }: StateContext<Layout.State>,\r\n    { name }: RemoveNavigationElementByName,\r\n  ) {\r\n    let { navigationElements } = getState();\r\n\r\n    const index = navigationElements.findIndex(element => element.name === name);\r\n\r\n    if (index > -1) {\r\n      navigationElements = navigationElements.splice(index, 1);\r\n    }\r\n\r\n    return patchState({\r\n      navigationElements,\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { Validation, ValidationErrorComponent as ErrorComponent } from '@ngx-validate/core';\r\n\r\n@Component({\r\n  selector: 'abp-validation-error',\r\n  template: `\r\n    <div class=\"invalid-feedback\" *ngFor=\"let error of abpErrors; trackBy: trackByFn\">\r\n      {{ error.message | abpLocalization: error.interpoliteParams }}\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ValidationErrorComponent extends ErrorComponent {\r\n  get abpErrors(): Validation.Error[] & { interpoliteParams?: string[] } {\r\n    if (!this.errors || !this.errors.length) return [];\r\n\r\n    return this.errors.map(error => {\r\n      if (!error.message) return error;\r\n\r\n      const index = error.message.indexOf('[');\r\n\r\n      if (index > -1) {\r\n        return {\r\n          ...error,\r\n          message: error.message.slice(0, index),\r\n          interpoliteParams: error.message.slice(index + 1, error.message.length - 1).split(','),\r\n        };\r\n      }\r\n\r\n      return error;\r\n    });\r\n  }\r\n}\r\n","export default `\r\n.content-header-title {\r\n    font-size: 24px;\r\n}\r\n\r\n.entry-row {\r\n    margin-bottom: 15px;\r\n}\r\n#main-navbar-tools a.dropdown-toggle {\r\n    text-decoration: none;\r\n    color: #fff;\r\n}\r\n.navbar .dropdown-submenu {\r\n    position: relative;\r\n}\r\n.navbar .dropdown-menu {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.navbar .dropdown-menu a {\r\n    font-size: .9em;\r\n    padding: 10px 15px;\r\n    display: block;\r\n    min-width: 210px;\r\n    text-align: left;\r\n    border-radius: 0.25rem;\r\n    min-height: 44px;\r\n}\r\n.navbar .dropdown-submenu a::after {\r\n    transform: rotate(-90deg);\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 18px;\r\n}\r\n.navbar .dropdown-submenu .dropdown-menu {\r\n    top: 0;\r\n    left: 100%;\r\n}\r\n\r\n.card-header .btn {\r\n    padding: 2px 6px;\r\n}\r\n.card-header h5 {\r\n    margin: 0;\r\n}\r\n.container > .card {\r\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\r\n}\r\n@media screen and (min-width: 768px) {\r\n    .navbar .dropdown:hover > .dropdown-menu {\r\n        display: block;\r\n    }\r\n\r\n    .navbar .dropdown-submenu:hover > .dropdown-menu {\r\n        display: block;\r\n    }\r\n}\r\n.input-validation-error {\r\n    border-color: #dc3545;\r\n}\r\n.field-validation-error {\r\n    font-size: 0.8em;\r\n}\r\n.ui-table .ui-table-tbody > tr.empty-row > div.empty-row-content {\r\n    border: 1px solid #c8c8c8;\r\n  }\r\n.abp-loading {\r\n    background: rgba(0, 0, 0, 0.1);\r\n}\r\n.modal-backdrop {\r\nbackground-color: rgba(0, 0, 0, 0.6);\r\n}\r\n\r\n.confirmation .confirmation-backdrop {\r\n\t background: rgba(0, 0, 0, 0.7) !important;\r\n}\r\n .confirmation .confirmation-dialog {\r\n\t border: none;\r\n\t border-radius: 10px;\r\n\t background-color: #fff;\r\n\t box-shadow: 0 0 10px -5px rgba(0, 0, 0, 0.5);\r\n}\r\n .confirmation .confirmation-dialog .icon-container .icon {\r\n\t stroke: #fff;\r\n\t color: #fff;\r\n}\r\n .confirmation .confirmation-dialog .icon-container.info .icon {\r\n\t stroke: #2f96b4;\r\n\t color: #2f96b4;\r\n}\r\n .confirmation .confirmation-dialog .icon-container.success .icon {\r\n\t stroke: #51a351;\r\n\t color: #51a351;\r\n}\r\n .confirmation .confirmation-dialog .icon-container.warning .icon {\r\n\t stroke: #f89406;\r\n\t color: #f89406;\r\n}\r\n .confirmation .confirmation-dialog .icon-container.error .icon {\r\n\t stroke: #bd362f;\r\n\t color: #bd362f;\r\n}\r\n .confirmation .confirmation-dialog .content .title {\r\n\t color: #222;\r\n}\r\n .confirmation .confirmation-dialog .content .message {\r\n\t color: #777;\r\n}\r\n .confirmation .confirmation-dialog .footer {\r\n\t background: transparent;\r\n}\r\n .confirmation .confirmation-dialog .footer .confirmation-button {\r\n\t background-color: #eee;\r\n\t color: #777;\r\n}\r\n .confirmation .confirmation-dialog .footer .confirmation-button:hover, .confirmation .confirmation-dialog .footer .confirmation-button:focus, .confirmation .confirmation-dialog .footer .confirmation-button:active {\r\n\t background-color: #bbb;\r\n}\r\n .confirmation .confirmation-dialog .footer .confirmation-button--confirm {\r\n\t background-color: #2f96b4;\r\n\t color: #fff;\r\n}\r\n .confirmation .confirmation-dialog .footer .confirmation-button--confirm:hover {\r\n\t background-color: #2e819b;\r\n}\r\n.ui-table .pagination-wrapper {\r\n    background-color: #f4f4f4;\r\n    border: 1px solid #c8c8c8;\r\n}\r\n`;\r\n","import { DomInsertionService, AddReplaceableComponent, CONTENT_STRATEGY } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport styles from '../constants/styles';\r\nimport { ApplicationLayoutComponent } from '../components/application-layout/application-layout.component';\r\nimport { AccountLayoutComponent } from '../components/account-layout/account-layout.component';\r\nimport { EmptyLayoutComponent } from '../components/empty-layout/empty-layout.component';\r\nimport { eThemeBasicComponents } from '../enums/components';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InitialService {\r\n  constructor(private domInsertion: DomInsertionService, private store: Store) {\r\n    this.appendStyle();\r\n\r\n    this.store.dispatch([\r\n      new AddReplaceableComponent({\r\n        key: eThemeBasicComponents.ApplicationLayout,\r\n        component: ApplicationLayoutComponent,\r\n      }),\r\n      new AddReplaceableComponent({\r\n        key: eThemeBasicComponents.AccountLayout,\r\n        component: AccountLayoutComponent,\r\n      }),\r\n      new AddReplaceableComponent({\r\n        key: eThemeBasicComponents.EmptyLayout,\r\n        component: EmptyLayoutComponent,\r\n      }),\r\n    ]);\r\n  }\r\n\r\n  appendStyle() {\r\n    this.domInsertion.insertContent(CONTENT_STRATEGY.AppendStyleToHead(styles));\r\n  }\r\n}\r\n","import { Config, ConfigState } from '@abp/ng.core';\r\nimport { Component } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'abp-logo',\r\n  template: `\r\n    <a class=\"navbar-brand\" routerLink=\"/\">\r\n      <img\r\n        *ngIf=\"appInfo.logoUrl; else appName\"\r\n        [src]=\"appInfo.logoUrl\"\r\n        [alt]=\"appInfo.name\"\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n      />\r\n    </a>\r\n\r\n    <ng-template #appName>\r\n      {{ appInfo.name }}\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class LogoComponent {\r\n  get appInfo(): Config.Application {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  constructor(private store: Store) {}\r\n}\r\n","import { Component, OnInit, TrackByFunction, Input, Renderer2 } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ABP, ConfigState } from '@abp/ng.core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Select } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'abp-routes',\r\n  templateUrl: 'routes.component.html',\r\n})\r\nexport class RoutesComponent {\r\n  @Select(ConfigState.getOne('routes'))\r\n  routes$: Observable<ABP.FullRoute[]>;\r\n\r\n  @Input()\r\n  smallScreen: boolean;\r\n\r\n  @Input()\r\n  isDropdownChildDynamic: boolean;\r\n\r\n  get visibleRoutes$(): Observable<ABP.FullRoute[]> {\r\n    return this.routes$.pipe(map(routes => getVisibleRoutes(routes)));\r\n  }\r\n\r\n  trackByFn: TrackByFunction<ABP.FullRoute> = (_, item) => item.name;\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  openChange(event: boolean, childrenContainer: HTMLDivElement) {\r\n    if (!event) {\r\n      Object.keys(childrenContainer.style)\r\n        .filter(key => Number.isInteger(+key))\r\n        .forEach(key => {\r\n          this.renderer.removeStyle(childrenContainer, childrenContainer.style[key]);\r\n        });\r\n      this.renderer.removeStyle(childrenContainer, 'left');\r\n    }\r\n  }\r\n}\r\n\r\nfunction getVisibleRoutes(routes: ABP.FullRoute[]) {\r\n  return routes.reduce((acc, val) => {\r\n    if (val.invisible) return acc;\r\n\r\n    if (val.children && val.children.length) {\r\n      val.children = getVisibleRoutes(val.children);\r\n    }\r\n\r\n    return [...acc, val];\r\n  }, []);\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  TrackByFunction,\r\n  TemplateRef,\r\n  ViewChild,\r\n  OnDestroy,\r\n  Input,\r\n} from '@angular/core';\r\nimport {\r\n  ABP,\r\n  takeUntilDestroy,\r\n  SetLanguage,\r\n  AuthService,\r\n  ConfigState,\r\n  ApplicationConfiguration,\r\n  SessionState,\r\n} from '@abp/ng.core';\r\nimport { LayoutState } from '../../states/layout.state';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { eNavigationElementNames } from '../../enums/navigation-element-names';\r\nimport { AddNavigationElement } from '../../actions/layout.actions';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Layout } from '../../models/layout';\r\nimport { Navigate, RouterState } from '@ngxs/router-plugin';\r\nimport snq from 'snq';\r\nimport compare from 'just-compare';\r\n\r\n@Component({\r\n  selector: 'abp-nav-items',\r\n  templateUrl: 'nav-items.component.html',\r\n})\r\nexport class NavItemsComponent implements AfterViewInit, OnDestroy {\r\n  @Select(LayoutState.getNavigationElements)\r\n  navElements$: Observable<Layout.NavigationElement[]>;\r\n\r\n  @Select(ConfigState.getOne('currentUser'))\r\n  currentUser$: Observable<ApplicationConfiguration.CurrentUser>;\r\n\r\n  @Select(ConfigState.getDeep('localization.languages'))\r\n  languages$: Observable<ApplicationConfiguration.Language[]>;\r\n\r\n  @ViewChild('currentUser', { static: false, read: TemplateRef })\r\n  currentUserRef: TemplateRef<any>;\r\n\r\n  @ViewChild('language', { static: false, read: TemplateRef })\r\n  languageRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  smallScreen: boolean;\r\n\r\n  rightPartElements: TemplateRef<any>[] = [];\r\n\r\n  trackByFn: TrackByFunction<ABP.FullRoute> = (_, element) => element;\r\n\r\n  get defaultLanguage$(): Observable<string> {\r\n    return this.languages$.pipe(\r\n      map(\r\n        languages =>\r\n          snq(\r\n            () => languages.find(lang => lang.cultureName === this.selectedLangCulture).displayName,\r\n          ),\r\n        '',\r\n      ),\r\n    );\r\n  }\r\n\r\n  get dropdownLanguages$(): Observable<ApplicationConfiguration.Language[]> {\r\n    return this.languages$.pipe(\r\n      map(\r\n        languages =>\r\n          snq(() => languages.filter(lang => lang.cultureName !== this.selectedLangCulture)),\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n\r\n  get selectedLangCulture(): string {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  constructor(private store: Store, private authService: AuthService) {}\r\n\r\n  ngAfterViewInit() {\r\n    const navigations = this.store\r\n      .selectSnapshot(LayoutState.getNavigationElements)\r\n      .map(({ name }) => name);\r\n\r\n    if (navigations.indexOf(eNavigationElementNames.Language) < 0) {\r\n      this.store.dispatch(\r\n        new AddNavigationElement([\r\n          { element: this.languageRef, order: 4, name: eNavigationElementNames.Language },\r\n          { element: this.currentUserRef, order: 5, name: eNavigationElementNames.User },\r\n        ]),\r\n      );\r\n    }\r\n\r\n    this.navElements$\r\n      .pipe(\r\n        map(elements => elements.map(({ element }) => element)),\r\n        filter(elements => !compare(elements, this.rightPartElements)),\r\n        takeUntilDestroy(this),\r\n      )\r\n      .subscribe(elements => {\r\n        setTimeout(() => (this.rightPartElements = elements), 0);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  onChangeLang(cultureName: string) {\r\n    this.store.dispatch(new SetLanguage(cultureName));\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.store.dispatch(\r\n        new Navigate(['/'], null, {\r\n          state: { redirectUrl: this.store.selectSnapshot(RouterState).state.url },\r\n        }),\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbCollapseModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { AccountLayoutComponent } from './components/account-layout/account-layout.component';\r\nimport { ApplicationLayoutComponent } from './components/application-layout/application-layout.component';\r\nimport { EmptyLayoutComponent } from './components/empty-layout/empty-layout.component';\r\nimport { LayoutState } from './states/layout.state';\r\nimport { ValidationErrorComponent } from './components/validation-error/validation-error.component';\r\nimport { InitialService } from './services/initial.service';\r\nimport { LogoComponent } from './components/logo/logo.component';\r\nimport { RoutesComponent } from './components/routes/routes.component';\r\nimport { NavItemsComponent } from './components/nav-items/nav-items.component';\r\n\r\nexport const LAYOUTS = [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...LAYOUTS,\r\n    ValidationErrorComponent,\r\n    LogoComponent,\r\n    NavItemsComponent,\r\n    RoutesComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgbCollapseModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n    NgxsModule.forFeature([LayoutState]),\r\n    NgxValidateCoreModule.forRoot({\r\n      targetSelector: '.form-group',\r\n      blueprints: {\r\n        email: 'AbpAccount::ThisFieldIsNotAValidEmailAddress.',\r\n        max: 'AbpAccount::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\r\n        maxlength:\r\n          'AbpAccount::ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}[{{ requiredLength }}]',\r\n        min: 'AbpAccount::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',\r\n        minlength:\r\n          'AbpAccount::ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}[{{ requiredLength }}]',\r\n        required: 'AbpAccount::ThisFieldIsRequired.',\r\n        passwordMismatch: 'AbpIdentity::Identity.PasswordConfirmationFailed',\r\n      },\r\n      errorTemplate: ValidationErrorComponent,\r\n    }),\r\n  ],\r\n  exports: [...LAYOUTS, LogoComponent, ValidationErrorComponent],\r\n  entryComponents: [...LAYOUTS, ValidationErrorComponent],\r\n})\r\nexport class ThemeBasicModule {\r\n  constructor(private initialService: InitialService) {}\r\n}\r\n","export const enum eThemeBasicComponents {\r\n  ApplicationLayout = 'Theme.ApplicationLayoutComponent',\r\n  AccountLayout = 'Theme.AccountLayoutComponent',\r\n  EmptyLayout = 'Theme.EmptyLayoutComponent',\r\n  Logo = 'Theme.LogoComponent',\r\n  Routes = 'Theme.RoutesComponent',\r\n  NavItems = 'Theme.NavItemsComponent',\r\n}\r\n","export const enum eNavigationElementNames {\r\n  Language = 'LanguageRef',\r\n  User = 'CurrentUserRef',\r\n}\r\n","import { TemplateRef } from '@angular/core';\r\n\r\nexport namespace Layout {\r\n  export interface State {\r\n    navigationElements: NavigationElement[];\r\n  }\r\n\r\n  export interface NavigationElement {\r\n    name: string;\r\n    element: TemplateRef<any>;\r\n    order?: number;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { LayoutState } from '../states/layout.state';\r\nimport { AddNavigationElement, RemoveNavigationElementByName } from '../actions';\r\nimport { Layout } from '../models/layout';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LayoutStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getNavigationElements() {\r\n    return this.store.selectSnapshot(LayoutState.getNavigationElements);\r\n  }\r\n\r\n  dispatchAddNavigationElement(...args: ConstructorParameters<typeof AddNavigationElement>) {\r\n    return this.store.dispatch(new AddNavigationElement(...args));\r\n  }\r\n\r\n  dispatchRemoveNavigationElementByName(\r\n    ...args: ConstructorParameters<typeof RemoveNavigationElementByName>\r\n  ) {\r\n    return this.store.dispatch(new RemoveNavigationElementByName(...args));\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate","ErrorComponent"],"mappings":"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"}