import { __decorate, __metadata } from "tslib";
import { Directive, Injector, Input } from '@angular/core';
import { ActionData } from '../../models/actions';
import { ExtensionsService } from '../../services/extensions.service';
import { EXTENSIONS_ACTION_TYPE, EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';
// tslint:disable: directive-class-suffix
// Fix for https://github.com/angular/angular/issues/23904
// @dynamic
let AbstractActionsComponent = class AbstractActionsComponent extends ActionData {
    constructor(injector) {
        super();
        // tslint:disable-next-line
        this.getInjected = injector.get.bind(injector);
        const extensions = injector.get(ExtensionsService);
        const name = injector.get(EXTENSIONS_IDENTIFIER);
        const type = injector.get(EXTENSIONS_ACTION_TYPE);
        this.actionList = extensions[type].get(name).actions;
    }
};
__decorate([
    Input(),
    __metadata("design:type", Object)
], AbstractActionsComponent.prototype, "record", void 0);
AbstractActionsComponent = __decorate([
    Directive(),
    __metadata("design:paramtypes", [Injector])
], AbstractActionsComponent);
export { AbstractActionsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtYWN0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy90aGVtZS1zaGFyZWQvZXh0ZW5zaW9ucy9zcmMvbGliL2NvbXBvbmVudHMvYWJzdHJhY3QtYWN0aW9ucy9hYnN0cmFjdC1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBRSxVQUFVLEVBQWMsTUFBTSxzQkFBc0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN0RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUU5Rix5Q0FBeUM7QUFDekMsMERBQTBEO0FBQzFELFdBQVc7QUFFWCxJQUFzQix3QkFBd0IsR0FBOUMsTUFBc0Isd0JBQW9ELFNBQVEsVUFFakY7SUFPQyxZQUFZLFFBQWtCO1FBQzVCLEtBQUssRUFBRSxDQUFDO1FBRVIsMkJBQTJCO1FBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0MsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNqRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLFVBQVUsR0FBSSxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQXdCLENBQUM7SUFDekUsQ0FBQztDQUNGLENBQUE7QUFaVTtJQUFSLEtBQUssRUFBRTs7d0RBQTRDO0FBUGhDLHdCQUF3QjtJQUQ3QyxTQUFTLEVBQUU7cUNBVVksUUFBUTtHQVRWLHdCQUF3QixDQW1CN0M7U0FuQnFCLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5qZWN0b3IsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFjdGlvbkRhdGEsIEFjdGlvbkxpc3QgfSBmcm9tICcuLi8uLi9tb2RlbHMvYWN0aW9ucyc7XHJcbmltcG9ydCB7IEV4dGVuc2lvbnNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZXh0ZW5zaW9ucy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRVhURU5TSU9OU19BQ1RJT05fVFlQRSwgRVhURU5TSU9OU19JREVOVElGSUVSIH0gZnJvbSAnLi4vLi4vdG9rZW5zL2V4dGVuc2lvbnMudG9rZW4nO1xyXG5cclxuLy8gdHNsaW50OmRpc2FibGU6IGRpcmVjdGl2ZS1jbGFzcy1zdWZmaXhcclxuLy8gRml4IGZvciBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8yMzkwNFxyXG4vLyBAZHluYW1pY1xyXG5ARGlyZWN0aXZlKClcclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0QWN0aW9uc0NvbXBvbmVudDxMIGV4dGVuZHMgQWN0aW9uTGlzdDxhbnk+PiBleHRlbmRzIEFjdGlvbkRhdGE8XHJcbiAgSW5mZXJyZWRSZWNvcmQ8TD5cclxuPiB7XHJcbiAgcmVhZG9ubHkgYWN0aW9uTGlzdDogTDtcclxuXHJcbiAgcmVhZG9ubHkgZ2V0SW5qZWN0ZWQ6IEluZmVycmVkRGF0YTxMPlsnZ2V0SW5qZWN0ZWQnXTtcclxuXHJcbiAgQElucHV0KCkgcmVhZG9ubHkgcmVjb3JkOiBJbmZlcnJlZERhdGE8TD5bJ3JlY29yZCddO1xyXG5cclxuICBjb25zdHJ1Y3RvcihpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXHJcbiAgICB0aGlzLmdldEluamVjdGVkID0gaW5qZWN0b3IuZ2V0LmJpbmQoaW5qZWN0b3IpO1xyXG4gICAgY29uc3QgZXh0ZW5zaW9ucyA9IGluamVjdG9yLmdldChFeHRlbnNpb25zU2VydmljZSk7XHJcbiAgICBjb25zdCBuYW1lID0gaW5qZWN0b3IuZ2V0KEVYVEVOU0lPTlNfSURFTlRJRklFUik7XHJcbiAgICBjb25zdCB0eXBlID0gaW5qZWN0b3IuZ2V0KEVYVEVOU0lPTlNfQUNUSU9OX1RZUEUpO1xyXG4gICAgdGhpcy5hY3Rpb25MaXN0ID0gKGV4dGVuc2lvbnNbdHlwZV0uZ2V0KG5hbWUpLmFjdGlvbnMgYXMgdW5rbm93bikgYXMgTDtcclxuICB9XHJcbn1cclxuXHJcbnR5cGUgSW5mZXJyZWREYXRhPEw+ID0gQWN0aW9uRGF0YTxJbmZlcnJlZFJlY29yZDxMPj47XHJcbnR5cGUgSW5mZXJyZWRSZWNvcmQ8TD4gPSBMIGV4dGVuZHMgQWN0aW9uTGlzdDxpbmZlciBSPiA/IFIgOiBuZXZlcjtcclxuIl19