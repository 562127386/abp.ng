import { ABP } from '@abp/ng.core';
import { ConfirmationService } from '@abp/ng.theme.shared';
import { OnInit, TemplateRef, TrackByFunction } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { Store } from '@ngxs/store';
import { Observable } from 'rxjs';
import { Identity } from '../../models/identity';
import { IdentityService } from '../../services/identity.service';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
export declare class UsersComponent implements OnInit {
    private confirmationService;
    private fb;
    private store;
    private identityService;
    data$: Observable<Identity.UserItem[]>;
    totalCount$: Observable<number>;
    modalContent: TemplateRef<any>;
    form: FormGroup;
    selected: Identity.UserItem;
    selectedUserRoles: Identity.RoleItem[];
    roles: Identity.RoleItem[];
    visiblePermissions: boolean;
    providerKey: string;
    pageQuery: ABP.PageQueryParams;
    isModalVisible: boolean;
    loading: boolean;
    modalBusy: boolean;
    sortOrder: string;
    sortKey: string;
    permissionManagementKey: ePermissionManagementComponents;
    trackByFn: TrackByFunction<AbstractControl>;
    onVisiblePermissionChange: (event: any) => void;
    readonly roleGroups: FormGroup[];
    constructor(confirmationService: ConfirmationService, fb: FormBuilder, store: Store, identityService: IdentityService);
    ngOnInit(): void;
    onSearch(value: string): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, userName: string): void;
    onPageChange(page: number): void;
    get(): void;
    openPermissionsModal(providerKey: string): void;
}
