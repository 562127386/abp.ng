import { ListService } from '@abp/ng.core';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
import { ConfirmationService } from '@abp/ng.theme.shared';
import { OnInit, TemplateRef, TrackByFunction } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { Store } from '@ngxs/store';
import { Observable } from 'rxjs';
import { Identity } from '../../models/identity';
import { IdentityService } from '../../services/identity.service';
export declare class UsersComponent implements OnInit {
    readonly list: ListService;
    private confirmationService;
    private fb;
    private store;
    private identityService;
    data$: Observable<Identity.UserItem[]>;
    totalCount$: Observable<number>;
    modalContent: TemplateRef<any>;
    form: FormGroup;
    selected: Identity.UserItem;
    selectedUserRoles: Identity.RoleItem[];
    roles: Identity.RoleItem[];
    visiblePermissions: boolean;
    providerKey: string;
    isModalVisible: boolean;
    modalBusy: boolean;
    permissionManagementKey: ePermissionManagementComponents;
    trackByFn: TrackByFunction<AbstractControl>;
    onVisiblePermissionChange: (event: any) => void;
    get roleGroups(): FormGroup[];
    constructor(list: ListService, confirmationService: ConfirmationService, fb: FormBuilder, store: Store, identityService: IdentityService);
    ngOnInit(): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, userName: string): void;
    sort(data: any): void;
    private hookToQuery;
    openPermissionsModal(providerKey: string): void;
}
